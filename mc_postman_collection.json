{
	"info": {
		"name": "api.getmontecarlo.com-GraphMan",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Queries",
			"item": [
				{
					"name": "pingDataCollector",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query pingDataCollector($dcId: UUID!, $traceId: UUID!) {\n  pingDataCollector(dcId: $dcId, traceId: $traceId) {\n    __typename\n    dcId # The UUID identifying the data collector pinged.\n    traceId # A unique identifier for correlating the data collector ping.\n  }\n}",
								"variables": "{\n\t\"dcId\": null,\n\t\"traceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Sends a ping request to a data collector to verify it is operational."
					},
					"response": []
				},
				{
					"name": "getGithubIntegrations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getGithubIntegrations {\n  getGithubIntegrations {\n    __typename\n    installLink # Link to click in order to install new Github integration\n    # installations # Metadata about Github App installation\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Github integration info"
					},
					"response": []
				},
				{
					"name": "getGithubPullRequests",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getGithubPullRequests($incidentUuid: UUID!, $limit: Int) {\n  getGithubPullRequests(incidentUuid: $incidentUuid, limit: $limit) {\n    __typename\n    # pullRequests # List of pull requests\n  }\n}",
								"variables": "{\n\t\"incidentUuid\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the list of pull requests related to a given incident"
					},
					"response": []
				},
				{
					"name": "getGithubPullRequestsForTable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getGithubPullRequestsForTable($mcon: String!, $limit: Int) {\n  getGithubPullRequestsForTable(mcon: $mcon, limit: $limit) {\n    __typename\n    # pullRequests # List of pull requests\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the list of pull requests related to a given incident"
					},
					"response": []
				},
				{
					"name": "getJiraIntegrations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getJiraIntegrations($integrationId: UUID) {\n  getJiraIntegrations(integrationId: $integrationId) {\n    __typename\n    integrationId # The integration ID\n    integrationName # A short name to identify the integration\n    serverUrl # The domain name for your Jira site\n    username # The Jira username for basic authentication. If not provided, the previous value will be used.\n    defaultTicketFields # Default values for ticket fields.\n  }\n}",
								"variables": "{\n\t\"integrationId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the configured Jira integrations"
					},
					"response": []
				},
				{
					"name": "getJiraProjects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getJiraProjects($integrationId: UUID!) {\n  getJiraProjects(integrationId: $integrationId) {\n    __typename\n    id # The project ID\n    key # The project key\n    name # The project name\n  }\n}",
								"variables": "{\n\t\"integrationId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get Jira projects for the given integration"
					},
					"response": []
				},
				{
					"name": "getJiraIssueTypes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getJiraIssueTypes($integrationId: UUID!, $project: Int) {\n  getJiraIssueTypes(integrationId: $integrationId, project: $project) {\n    __typename\n    id # The issue type ID\n    name # The issue type name\n    untranslatedName # The issue type untranslated name\n    # fields # The issue type fields\n  }\n}",
								"variables": "{\n\t\"integrationId\": null,\n\t\"project\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get Jira issue types for the integration"
					},
					"response": []
				},
				{
					"name": "testJiraCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testJiraCredentials($serverUrl: String!, $username: String!, $apiToken: String!) {\n  testJiraCredentials(\n    serverUrl: $serverUrl\n    username: $username\n    apiToken: $apiToken\n  ) {\n    __typename\n    validCredentials # Returns if the credentials are valid\n  }\n}",
								"variables": "{\n\t\"serverUrl\": null,\n\t\"username\": null,\n\t\"apiToken\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test the Jira connection credentials"
					},
					"response": []
				},
				{
					"name": "getAggregatedQueries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAggregatedQueries($mcon: String!, $startTime: DateTime!, $endTime: DateTime!, $queryType: QueryType!, $limit: Int!, $endCursor: String, $category: QueryCategory, $user: String, $queryCharacters: Int) {\n  getAggregatedQueries(\n    mcon: $mcon\n    startTime: $startTime\n    endTime: $endTime\n    queryType: $queryType\n    limit: $limit\n    endCursor: $endCursor\n    category: $category\n    user: $user\n    queryCharacters: $queryCharacters\n  ) {\n    __typename\n    # aggregatedQueries # List of aggregated queries which are grouped based on their group ID\n    # pageInfo # Data necessary to paginate aggregated queries\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"queryType\": null,\n\t\"limit\": null,\n\t\"endCursor\": null,\n\t\"category\": null,\n\t\"user\": null,\n\t\"queryCharacters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getQueryChanges",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryChanges($incidentId: UUID!) {\n  getQueryChanges(incidentId: $incidentId) {\n    __typename\n    groupId # Identifier for a grouping of like/same queries\n    timestamp # Time a change was detected\n    changeType # Type of change detected\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get query changes detected for a given incident. DEPRECATED: to be removed in favor of `getQueryRcas`."
					},
					"response": []
				},
				{
					"name": "getQueryRcas",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryRcas($incidentId: UUID!) {\n  getQueryRcas(incidentId: $incidentId) {\n    __typename\n    tableMcon # MCON of affected table\n    groupId # Identifier for a grouping of like/same queries\n    timestamp # Time RCA was executed\n    type # Type of query RCA\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get query RCAs for a given incident."
					},
					"response": []
				},
				{
					"name": "getQueryDimensions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryDimensions($mcon: String!, $startTime: DateTime!, $endTime: DateTime!, $queryType: QueryType!) {\n  getQueryDimensions(\n    mcon: $mcon\n    startTime: $startTime\n    endTime: $endTime\n    queryType: $queryType\n  ) {\n    __typename\n    users # A distinct list of users for a list of queries\n    categories # A distinct list of query categories for a list of queries\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"queryType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getNotificationSettings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotificationSettings($monitorLabels: [String]) {\n  getNotificationSettings(monitorLabels: $monitorLabels) {\n    __typename\n    id\n    uuid # Effective ID for notification settings\n    # createdBy # Creator of the notification\n    createdTime # When the notification was first created\n    # lastUpdatedBy # User who last updated this notification\n    lastUpdateTime # When the notification was last updated\n    type # Type of notification integration (e.g. slack)\n    recipient # Deprecated\n    recipients # Destinations to send notifications to\n    anomalyTypes # List of supported incident types to send notifications for\n    incidentSubTypes # All the incident sub-types this notification settings will alert on.\n    extra # Any additional information for various notification integrations\n    # routingRules\n    customMessage # Custom text to be included with the notification\n    notificationScheduleType # Indicates whether the notification is of real time or digest types\n    # digestSettings\n    specificationRule # DEPRECATED\n    notificationEnabled # When enabled notifications for this setting are sent.\n    # slackMsgDetails\n    recipientDisplayName\n    recipientsDisplayNames\n    permalink\n    matchingIncidents\n  }\n}",
								"variables": "{\n\t\"monitorLabels\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get notification settings"
					},
					"response": []
				},
				{
					"name": "getCollectionDatasetList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCollectionDatasetList($resourceId: UUID, $before: String, $after: String, $first: Int, $last: Int) {\n  getCollectionDatasetList(\n    resourceId: $resourceId\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"resourceId\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get datasets in the account, including blocked datasets and dataset unblocked recently"
					},
					"response": []
				},
				{
					"name": "getCollectionBlockList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCollectionBlockList($resourceId: UUID, $before: String, $after: String, $first: Int, $last: Int) {\n  getCollectionBlockList(\n    resourceId: $resourceId\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"resourceId\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get entities blocked from metadata collection in my account."
					},
					"response": []
				},
				{
					"name": "getFivetranConnectors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFivetranConnectors($mcons: [String], $tableMcons: [String], $services: [String], $statuses: [FivetranConnectorStatuses], $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getFivetranConnectors(\n    mcons: $mcons\n    tableMcons: $tableMcons\n    services: $services\n    statuses: $statuses\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"mcons\": null,\n\t\"tableMcons\": null,\n\t\"services\": null,\n\t\"statuses\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get fivetran connectors"
					},
					"response": []
				},
				{
					"name": "getPiiFilteringPreferences",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getPiiFilteringPreferences {\n  getPiiFilteringPreferences {\n    __typename\n    enabled # Whether PII filtering is enabled for this account.\n    failMode # Whether PII filter failures will allow (open) or prevent (close) data flow for this account.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The PII filter settings for the user's account."
					},
					"response": []
				},
				{
					"name": "getPiiFilters",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getPiiFilters {\n  getPiiFilters {\n    __typename\n    name # The unique name of the PII filter.\n    description # The explanation of the PII filter's purpose.\n    pattern # The regex matching pattern of the PII filter.\n    onByDefault # Whether this PII filter is on by default globally.\n    enabled # Whether this PII filter is enabled for this account.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The possible PII filters for the user's account."
					},
					"response": []
				},
				{
					"name": "getPiiFilterMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getPiiFilterMetrics($resourceIds: [UUID], $filterNames: [String], $jobTypes: [String], $earliestJobCompletionTime: DateTime, $latestJobCompletionTime: DateTime, $numberOfJobs: Int) {\n  getPiiFilterMetrics(\n    resourceIds: $resourceIds\n    filterNames: $filterNames\n    jobTypes: $jobTypes\n    earliestJobCompletionTime: $earliestJobCompletionTime\n    latestJobCompletionTime: $latestJobCompletionTime\n    numberOfJobs: $numberOfJobs\n  ) {\n    __typename\n    filterName # The unique name for the filter that was run.\n    jobType # The type of job the PII filter run was a part of.\n    resourceId # The UUID of the resource the PII filtering ran on.\n    totalReplacements # Total number of text occurrences replaced by this filter across the job runs.\n  }\n}",
								"variables": "{\n\t\"resourceIds\": null,\n\t\"filterNames\": null,\n\t\"jobTypes\": null,\n\t\"earliestJobCompletionTime\": null,\n\t\"latestJobCompletionTime\": null,\n\t\"numberOfJobs\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "PII filter metrics per job run."
					},
					"response": []
				},
				{
					"name": "getDbtConnections",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtConnections {\n  getDbtConnections {\n    __typename\n    id\n    uuid\n    type\n    # account\n    # warehouse\n    # biContainer\n    # etlContainer\n    jobTypes\n    credentialsS3Key\n    integrationGatewayCredentialsKey\n    data\n    createdOn\n    updatedOn\n    # dbtProjects # dbt connection\n    # connectionIdentifier\n    # connectionIdentifiers\n    # jobErrors # Errors related to the connection\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt connections"
					},
					"response": []
				},
				{
					"name": "getDbtProjects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtProjects($uuid: String, $projectName: String, $connectionId: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getDbtProjects(\n    uuid: $uuid\n    projectName: $projectName\n    connectionId: $connectionId\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"projectName\": null,\n\t\"connectionId\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt projects"
					},
					"response": []
				},
				{
					"name": "getDbtJobs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtJobs($projectId: UUID, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getDbtJobs(\n    projectId: $projectId\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"projectId\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt jobs"
					},
					"response": []
				},
				{
					"name": "getDbtNodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtNodes($uuid: String, $dbtProjectUuid: String, $tableMcon: String, $tableMcons: [String], $dbtUniqueIds: [String], $resourceTypes: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getDbtNodes(\n    uuid: $uuid\n    dbtProjectUuid: $dbtProjectUuid\n    tableMcon: $tableMcon\n    tableMcons: $tableMcons\n    dbtUniqueIds: $dbtUniqueIds\n    resourceTypes: $resourceTypes\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"dbtProjectUuid\": null,\n\t\"tableMcon\": null,\n\t\"tableMcons\": null,\n\t\"dbtUniqueIds\": null,\n\t\"resourceTypes\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt nodes"
					},
					"response": []
				},
				{
					"name": "getDbtRuns",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtRuns($uuid: String, $dbtProjectUuid: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getDbtRuns(\n    uuid: $uuid\n    dbtProjectUuid: $dbtProjectUuid\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"dbtProjectUuid\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt runs"
					},
					"response": []
				},
				{
					"name": "getDbtModels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtModels($first: Int, $after: String, $last: Int, $before: String, $nameFilter: String) {\n  getDbtModels(\n    first: $first\n    after: $after\n    last: $last\n    before: $before\n    nameFilter: $nameFilter\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n    edgeCount # Total number of edges returned (page count)\n    totalCount # Total number of edges matching filter (total count)\n  }\n}",
								"variables": "{\n\t\"first\": null,\n\t\"after\": null,\n\t\"last\": null,\n\t\"before\": null,\n\t\"nameFilter\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt models"
					},
					"response": []
				},
				{
					"name": "getDbtModelResults",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtModelResults($first: Int, $after: String, $last: Int, $before: String, $runStartTime: DateTime!, $runEndTime: DateTime!, $status: [String], $model: [String], $mcon: [String]) {\n  getDbtModelResults(\n    first: $first\n    after: $after\n    last: $last\n    before: $before\n    runStartTime: $runStartTime\n    runEndTime: $runEndTime\n    status: $status\n    model: $model\n    mcon: $mcon\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n    edgeCount # Total number of edges returned (page count)\n    totalCount # Total number of edges matching filter (total count)\n  }\n}",
								"variables": "{\n\t\"first\": null,\n\t\"after\": null,\n\t\"last\": null,\n\t\"before\": null,\n\t\"runStartTime\": null,\n\t\"runEndTime\": null,\n\t\"status\": null,\n\t\"model\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt model results"
					},
					"response": []
				},
				{
					"name": "getDbtModelResultsCount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtModelResultsCount($runStartTime: DateTime!, $runEndTime: DateTime!, $status: [String]) {\n  getDbtModelResultsCount(\n    runStartTime: $runStartTime\n    runEndTime: $runEndTime\n    status: $status\n  )\n}",
								"variables": "{\n\t\"runStartTime\": null,\n\t\"runEndTime\": null,\n\t\"status\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the count of dbt model results"
					},
					"response": []
				},
				{
					"name": "getDbtRunSteps",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtRunSteps($nodeUniqueId: String!, $tableMcon: String!, $completedAtStartTime: DateTime!, $completedAtEndTime: DateTime, $status: String) {\n  getDbtRunSteps(\n    nodeUniqueId: $nodeUniqueId\n    tableMcon: $tableMcon\n    completedAtStartTime: $completedAtStartTime\n    completedAtEndTime: $completedAtEndTime\n    status: $status\n  ) {\n    __typename\n    createdTime\n    updatedTime\n    uuid # UUID of dbt project\n    accountId # Customer account id\n    status # Status, usually either success or failed\n    startedAt # Execution start time\n    completedAt # Execution end time\n    threadId # Thread ID\n    executionTime # Execution time elapsed\n    message # Output message, e.g. SUCCESS\n    rawJson # dbt raw run result json\n    # dbtRun # Associated dbt run\n    nodeUniqueId # dbt unique ID for node\n    # table # Associated table\n    id # The ID of the object.\n    failedRecordsCount\n  }\n}",
								"variables": "{\n\t\"nodeUniqueId\": null,\n\t\"tableMcon\": null,\n\t\"completedAtStartTime\": null,\n\t\"completedAtEndTime\": null,\n\t\"status\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt run steps"
					},
					"response": []
				},
				{
					"name": "getDbtTestResultsCount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtTestResultsCount($runStartTime: DateTime!, $runEndTime: DateTime!, $status: [String]) {\n  getDbtTestResultsCount(\n    runStartTime: $runStartTime\n    runEndTime: $runEndTime\n    status: $status\n  )\n}",
								"variables": "{\n\t\"runStartTime\": null,\n\t\"runEndTime\": null,\n\t\"status\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the count of dbt test results"
					},
					"response": []
				},
				{
					"name": "getDbtTestResults",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtTestResults($first: Int, $after: String, $last: Int, $before: String, $runStartTime: DateTime!, $runEndTime: DateTime!, $status: [String], $model: [String], $mcon: [String]) {\n  getDbtTestResults(\n    first: $first\n    after: $after\n    last: $last\n    before: $before\n    runStartTime: $runStartTime\n    runEndTime: $runEndTime\n    status: $status\n    model: $model\n    mcon: $mcon\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n    edgeCount # Total number of edges returned (page count)\n    totalCount # Total number of edges matching filter (total count)\n  }\n}",
								"variables": "{\n\t\"first\": null,\n\t\"after\": null,\n\t\"last\": null,\n\t\"before\": null,\n\t\"runStartTime\": null,\n\t\"runEndTime\": null,\n\t\"status\": null,\n\t\"model\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt test results"
					},
					"response": []
				},
				{
					"name": "getDbtUploadUrl",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtUploadUrl($projectName: String!, $invocationId: String!, $fileName: String!) {\n  getDbtUploadUrl(\n    projectName: $projectName\n    invocationId: $invocationId\n    fileName: $fileName\n  )\n}",
								"variables": "{\n\t\"projectName\": null,\n\t\"invocationId\": null,\n\t\"fileName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the Dbt artifacts presigned upload url"
					},
					"response": []
				},
				{
					"name": "getDbtLastRunResults",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDbtLastRunResults($first: Int, $after: String, $last: Int, $before: String, $runStartTime: DateTime!, $runEndTime: DateTime!, $mcons: [String!], $status: [String!]) {\n  getDbtLastRunResults(\n    first: $first\n    after: $after\n    last: $last\n    before: $before\n    runStartTime: $runStartTime\n    runEndTime: $runEndTime\n    mcons: $mcons\n    status: $status\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n    edgeCount # Total number of edges returned (page count)\n    totalCount # Total number of edges matching filter (total count)\n  }\n}",
								"variables": "{\n\t\"first\": null,\n\t\"after\": null,\n\t\"last\": null,\n\t\"before\": null,\n\t\"runStartTime\": null,\n\t\"runEndTime\": null,\n\t\"mcons\": [null],\n\t\"status\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get dbt model results for latest relevant run"
					},
					"response": []
				},
				{
					"name": "getExecDashboardMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getExecDashboardMetrics($metrics: [ExecDashboardMetrics!], $periodCount: Int, $periodUnit: PeriodGrouping, $periodGrouping: PeriodGrouping, $periodTotal: Boolean, $periodIncludeCurrent: Boolean, $resourceId: UUID, $domainId: UUID, $keyAssetsOnly: Boolean, $tags: [TagKeyValuePairInput], $incidentTypes: [String]) {\n  getExecDashboardMetrics(\n    metrics: $metrics\n    periodCount: $periodCount\n    periodUnit: $periodUnit\n    periodGrouping: $periodGrouping\n    periodTotal: $periodTotal\n    periodIncludeCurrent: $periodIncludeCurrent\n    resourceId: $resourceId\n    domainId: $domainId\n    keyAssetsOnly: $keyAssetsOnly\n    tags: $tags\n    incidentTypes: $incidentTypes\n  ) {\n    __typename\n    metric # Metric identifier.\n    # dataPoints # Data points. May only be one for single-value metrics.\n    hasError # If true, indicates an error occurred trying to get metric data.\n  }\n}",
								"variables": "{\n\t\"metrics\": [null],\n\t\"periodCount\": null,\n\t\"periodUnit\": null,\n\t\"periodGrouping\": null,\n\t\"periodTotal\": null,\n\t\"periodIncludeCurrent\": null,\n\t\"resourceId\": null,\n\t\"domainId\": null,\n\t\"keyAssetsOnly\": null,\n\t\"tags\": null,\n\t\"incidentTypes\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get one or more exec dashboard metrics."
					},
					"response": []
				},
				{
					"name": "getExecDashboardTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getExecDashboardTables($tables: [ExecDashboardTables!], $periodCount: Int, $periodUnit: PeriodGrouping, $periodGrouping: PeriodGrouping, $periodTotal: Boolean, $periodIncludeCurrent: Boolean, $resourceId: UUID, $domainId: UUID, $keyAssetsOnly: Boolean, $tags: [TagKeyValuePairInput], $incidentTypes: [String]) {\n  getExecDashboardTables(\n    tables: $tables\n    periodCount: $periodCount\n    periodUnit: $periodUnit\n    periodGrouping: $periodGrouping\n    periodTotal: $periodTotal\n    periodIncludeCurrent: $periodIncludeCurrent\n    resourceId: $resourceId\n    domainId: $domainId\n    keyAssetsOnly: $keyAssetsOnly\n    tags: $tags\n    incidentTypes: $incidentTypes\n  ) {\n    __typename\n    table # Table identifier.\n    # dataColumns # Column definitions.\n    # dataRows # Row values.\n    isVisible # If true, indicates that the table must be shown, otherwise it should be hidden.\n    hasError # If true, indicates an error occurred trying to get metric data.\n  }\n}",
								"variables": "{\n\t\"tables\": [null],\n\t\"periodCount\": null,\n\t\"periodUnit\": null,\n\t\"periodGrouping\": null,\n\t\"periodTotal\": null,\n\t\"periodIncludeCurrent\": null,\n\t\"resourceId\": null,\n\t\"domainId\": null,\n\t\"keyAssetsOnly\": null,\n\t\"tags\": null,\n\t\"incidentTypes\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get one or more exec dashboard metrics."
					},
					"response": []
				},
				{
					"name": "getCustomUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomUsers($customUserId: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getCustomUsers(\n    customUserId: $customUserId\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"customUserId\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all unified users"
					},
					"response": []
				},
				{
					"name": "getDocs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDocs($docMcon: String, $linkedMcon: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getDocs(\n    docMcon: $docMcon\n    linkedMcon: $linkedMcon\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"docMcon\": null,\n\t\"linkedMcon\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get docs"
					},
					"response": []
				},
				{
					"name": "getUnifiedUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUnifiedUsers($uuid: String, $displayNameSearch: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getUnifiedUsers(\n    uuid: $uuid\n    displayNameSearch: $displayNameSearch\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"displayNameSearch\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all unified users"
					},
					"response": []
				},
				{
					"name": "getUnifiedUserAssignments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUnifiedUserAssignments($unifiedUserId: String, $objectMcon: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getUnifiedUserAssignments(\n    unifiedUserId: $unifiedUserId\n    objectMcon: $objectMcon\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"unifiedUserId\": null,\n\t\"objectMcon\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all unified user assignments"
					},
					"response": []
				},
				{
					"name": "getMonteCarloConfigTemplates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonteCarloConfigTemplates($offset: Int, $before: String, $after: String, $first: Int, $last: Int, $namespace: String) {\n  getMonteCarloConfigTemplates(\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    namespace: $namespace\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"namespace\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get existing Monte Carlo config templates"
					},
					"response": []
				},
				{
					"name": "exportMonteCarloConfigTemplates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query exportMonteCarloConfigTemplates($monitorUuids: [UUID!]) {\n  exportMonteCarloConfigTemplates(monitorUuids: $monitorUuids) {\n    __typename\n    configTemplateAsYaml # Config Template as YAML\n    errors # Errors encountered\n  }\n}",
								"variables": "{\n\t\"monitorUuids\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Export Monte Carlo config templates from existing custom monitors"
					},
					"response": []
				},
				{
					"name": "getCorrelationSamplingMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCorrelationSamplingMetadata($mcon: String!) {\n  getCorrelationSamplingMetadata(mcon: $mcon) {\n    __typename\n    # timeAxis # Field used as the time axis\n    # explanatoryField # Field from which values are sampled\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Provides initial information for sampling requests (e.g. time axis candidates, explanatory fields, etc."
					},
					"response": []
				},
				{
					"name": "detectTimeAxisIntrinsicDelta",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query detectTimeAxisIntrinsicDelta($mcon: String!, $timeAxis: String!, $anchorEvent: UUID!) {\n  detectTimeAxisIntrinsicDelta(\n    mcon: $mcon\n    timeAxis: $timeAxis\n    anchorEvent: $anchorEvent\n  ) {\n    __typename\n    delta # time delta between the time axis and intrinsic time\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"timeAxis\": null,\n\t\"anchorEvent\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Detects time delta between the selected time axis and intrinsic time"
					},
					"response": []
				},
				{
					"name": "performCorrelationSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query performCorrelationSampling($mcon: String!, $field: String!, $timeAxis: String!, $startTime: DateTime!, $endTime: DateTime!, $maxValues: Int, $maxRows: Int) {\n  performCorrelationSampling(\n    mcon: $mcon\n    field: $field\n    timeAxis: $timeAxis\n    startTime: $startTime\n    endTime: $endTime\n    maxValues: $maxValues\n    maxRows: $maxRows\n  ) {\n    __typename\n    # sample # List of value distribution samples\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"field\": null,\n\t\"timeAxis\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"maxValues\": null,\n\t\"maxRows\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Samples value distribution data alongside the time axis"
					},
					"response": []
				},
				{
					"name": "performCorrelationSamplingWithTimeTravel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query performCorrelationSamplingWithTimeTravel($mcon: String!, $field: String!, $startTime: DateTime!, $endTime: DateTime!, $maxValues: Int, $maxRows: Int) {\n  performCorrelationSamplingWithTimeTravel(\n    mcon: $mcon\n    field: $field\n    startTime: $startTime\n    endTime: $endTime\n    maxValues: $maxValues\n    maxRows: $maxRows\n  ) {\n    __typename\n    # sample # List of value distribution samples\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"field\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"maxValues\": null,\n\t\"maxRows\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Samples value distribution data alongside the time axis"
					},
					"response": []
				},
				{
					"name": "performFieldHealthSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query performFieldHealthSampling($field: String!, $metric: String!, $monitorUuid: UUID!, $startTime: DateTime!, $endTime: DateTime!, $maxRows: Int) {\n  performFieldHealthSampling(\n    field: $field\n    metric: $metric\n    monitorUuid: $monitorUuid\n    startTime: $startTime\n    endTime: $endTime\n    maxRows: $maxRows\n  ) {\n    __typename\n    columns\n    rows\n    samplingDisabled\n  }\n}",
								"variables": "{\n\t\"field\": null,\n\t\"metric\": null,\n\t\"monitorUuid\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"maxRows\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Samples value distribution data alongside the time axis"
					},
					"response": []
				},
				{
					"name": "getRcaResult",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getRcaResult($eventUuid: UUID) {\n  getRcaResult(eventUuid: $eventUuid) {\n    __typename\n    status\n    jobType\n    statusReasons\n    # rcaData\n    # rcaDataV2 # Type: UNION\n  }\n}",
								"variables": "{\n\t\"eventUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getRcaJobResult",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getRcaJobResult($jobUuid: UUID) {\n  getRcaJobResult(jobUuid: $jobUuid) {\n    __typename\n    status\n    jobType\n    statusReasons\n    # rcaData\n    # rcaDataV2 # Type: UNION\n  }\n}",
								"variables": "{\n\t\"jobUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getSensitivity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSensitivity($mcon: String, $eventType: String, $monitorUuid: UUID) {\n  getSensitivity(mcon: $mcon, eventType: $eventType, monitorUuid: $monitorUuid) {\n    __typename\n    minDelay # Minimum delay from last update (in sec) - Deprecated\n    level # Low, medium or high sensitivity\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"eventType\": null,\n\t\"monitorUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "thresholds",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query thresholds {\n  thresholds {\n    __typename\n    # freshness # Freshness anomaly threshold\n    # size # Size anomaly threshold\n    # fieldHealth\n    # dimensionTracking\n    # dynamic\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Section describing various anomaly thresholds for the table"
					},
					"response": []
				},
				{
					"name": "getThresholds",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getThresholds {\n  getThresholds {\n    __typename\n    # freshness # Freshness anomaly threshold\n    # size # Size anomaly threshold\n    # fieldHealth\n    # dimensionTracking\n    # dynamic\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Section describing various anomaly thresholds for the table"
					},
					"response": []
				},
				{
					"name": "getTableColumnsLineage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTableColumnsLineage($mcon: String) {\n  getTableColumnsLineage(mcon: $mcon) {\n    __typename\n    mcon # Destination(current) table mcon\n    # columnsLineage # Lineage of the columns in the table\n    # nonSelectedSourceColumns # Other columns used in conditions for the current table\n    timestamp # Timestamp when the query that generated the lineage happened\n    displayName # Display name for BI tables\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Column level lineage for a destination table"
					},
					"response": []
				},
				{
					"name": "getDerivedTablesPartialLineage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDerivedTablesPartialLineage($mcon: String, $column: String, $cursor: String, $pageSize: Int) {\n  getDerivedTablesPartialLineage(\n    mcon: $mcon\n    column: $column\n    cursor: $cursor\n    pageSize: $pageSize\n  ) {\n    __typename\n    mcon # Source table mcon\n    sourceColumn # Source column\n    # destinations # Derived tables and their columns that are influenced by the source col\n    isLastPage # Indicates whether this response the the last page of response\n    cursor # Cursor for getting the next page of results\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"column\": null,\n\t\"cursor\": null,\n\t\"pageSize\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Tables and its columns that are influenced by the source table and column. Note we only return columns that are influenced by the source column in the response."
					},
					"response": []
				},
				{
					"name": "getParsedQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getParsedQuery($mcon: String) {\n  getParsedQuery(mcon: $mcon) {\n    __typename\n    parsedQuery # Query, based on which the table's created\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The query, based on which the table's created"
					},
					"response": []
				},
				{
					"name": "getJobExecutionHistoryLogs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getJobExecutionHistoryLogs($jobScheduleUuid: String, $monitorUuid: String, $customRuleUuid: String, $historyDays: Int, $includeSnoozed: Boolean, $includeDataCollectionOnly: Boolean) {\n  getJobExecutionHistoryLogs(\n    jobScheduleUuid: $jobScheduleUuid\n    monitorUuid: $monitorUuid\n    customRuleUuid: $customRuleUuid\n    historyDays: $historyDays\n    includeSnoozed: $includeSnoozed\n    includeDataCollectionOnly: $includeDataCollectionOnly\n  ) {\n    __typename\n    jobExecutionUuid # UUID of job execution\n    startTime # When the job was scheduled\n    status\n    endTime # When the job was completed\n    exceptions # Exceptions that were captured during this job execution (pre-formatted)\n    # exceptionsDetail # Exceptions that were captured during this job execution\n  }\n}",
								"variables": "{\n\t\"jobScheduleUuid\": null,\n\t\"monitorUuid\": null,\n\t\"customRuleUuid\": null,\n\t\"historyDays\": null,\n\t\"includeSnoozed\": null,\n\t\"includeDataCollectionOnly\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getDimensionTrackingMonitorSuggestions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDimensionTrackingMonitorSuggestions($entities: [String], $orderBy: String, $domainId: UUID, $before: String, $after: String, $first: Int, $last: Int) {\n  getDimensionTrackingMonitorSuggestions(\n    entities: $entities\n    orderBy: $orderBy\n    domainId: $domainId\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"entities\": null,\n\t\"orderBy\": null,\n\t\"domainId\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return all dimension tracking monitor suggestions for the account, filtering the ones that already exist for the table+field"
					},
					"response": []
				},
				{
					"name": "getFieldHealthMonitorSuggestions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFieldHealthMonitorSuggestions($entities: [String], $orderBy: String, $domainId: UUID, $before: String, $after: String, $first: Int, $last: Int) {\n  getFieldHealthMonitorSuggestions(\n    entities: $entities\n    orderBy: $orderBy\n    domainId: $domainId\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"entities\": null,\n\t\"orderBy\": null,\n\t\"domainId\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return all field health monitor suggestions for the account, filtering the ones that already exist for the table"
					},
					"response": []
				},
				{
					"name": "getMonitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitors($monitorTypes: [UserDefinedMonitors], $statusTypes: [MonitorStatusType], $descriptionFieldOrTable: [String], $domainId: UUID, $uuids: [String], $createdByFilters: CreatedByFilters, $labels: [String], $search: [String], $searchFields: [UserDefinedMonitorSearchFields], $namespaces: [String], $isTemplateManaged: Boolean, $mcons: [String], $orderBy: String, $limit: Int, $offset: Int) {\n  getMonitors(\n    monitorTypes: $monitorTypes\n    statusTypes: $statusTypes\n    descriptionFieldOrTable: $descriptionFieldOrTable\n    domainId: $domainId\n    uuids: $uuids\n    createdByFilters: $createdByFilters\n    labels: $labels\n    search: $search\n    searchFields: $searchFields\n    namespaces: $namespaces\n    isTemplateManaged: $isTemplateManaged\n    mcons: $mcons\n    orderBy: $orderBy\n    limit: $limit\n    offset: $offset\n  ) {\n    __typename\n    uuid # Unique identifier for monitors\n    monitorType # Type of monitor\n    createdTime # Monitor creation time (UTC)\n    lastUpdateTime # Monitor last update time (UTC)\n    creatorId # Email of user who created the monitor\n    updaterId # Email of user who last updated the monitor\n    resourceId # Warehouse Unique Identifier\n    entities # Full table IDs for monitored tables/views\n    entityMcons # MCONs for monitored tables/views\n    scheduleType # Monitor scheduling type\n    name # Monitor/rule name, default or user-defined\n    ruleName # DEPRECATED: Rule name, default or user-defined, null for monitors. Use name instead.\n    description # Monitor user-defined name\n    notes # Notes defined on this monitor\n    labels # List of tags used to filter a monitor\n    severity # Default severity for incidents involving this monitor\n    # notificationSettings # Notification channels that match the monitor\n    notifyRuleRunFailure # Whether audiences will be notified when the rule fails to execute\n    isSnoozeable # Whether the monitor can be snoozed\n    isPaused # Whether the monitor is currently paused\n    isTemplateManaged # Whether the monitor was created from through monitor-as-code\n    namespace # The monitor-as-code namespace used when creating the monitor\n    nextExecutionTime # The next time (UTC) in which the monitor will run\n    prevExecutionTime # The last time (UTC) in which the monitor ran\n    isTransitioningDataProvider\n    # scheduleConfig\n    sevenDaysIncidentCount # Number of incidents in the past 7 days\n    # incidentCountHistory # Number of incidents per day for the past 30 days\n    weeklyIncidentCountChangeRate # Change in percentage between between last 7 days and the 7 days before.\n    monitorFields # Field/s to monitor\n    monitorTimeAxisFieldName # The name of the table/view field used for establishing the table time\n    monitorTimeAxisFieldType # Type of time axis field used for establishing the table time\n    whereCondition # Comparison predicate for the monitor SQL query\n    usePartitionClause # Whether to use automatic partition filter in query\n    segmentedExpressions # Fields or expressions used to segment the monitored field (currently supports one such value)\n    historyDays # Number of lookback days for each monitor execution\n    # selectExpressions # Monitor select expression\n    aggTimeInterval # For field health and dimension monitoring, the aggregation time interval to use. Either HOUR or DAY\n    hasCustomRuleName # Whether the monitor has a name given by the monitor creator\n    ruleDescription # **DEPRECATED**\n    # ruleComparisons\n    ruleNotes # **DEPRECATED**\n    ruleVariables # variables defined for the sql rule\n    isSnoozed # Whether the monitor is currently snoozed\n    snoozeUntilTime # If snoozed, the wake up time in UTC\n    slackSnoozeUser # Slack user who snoozed rule\n    conditionalSnooze # Whether the monitor is conditionally snoozed\n    breachRate # Percentage of last 10 runs in which the monitor's condition was breached\n    intervalMinutes # Interval between monitor runs, in minutes\n    monitorStatus # Monitor Status\n    exceptions # Exceptions if any occurred during the last run\n  }\n}",
								"variables": "{\n\t\"monitorTypes\": null,\n\t\"statusTypes\": null,\n\t\"descriptionFieldOrTable\": null,\n\t\"domainId\": null,\n\t\"uuids\": null,\n\t\"createdByFilters\": null,\n\t\"labels\": null,\n\t\"search\": null,\n\t\"searchFields\": null,\n\t\"namespaces\": null,\n\t\"isTemplateManaged\": null,\n\t\"mcons\": null,\n\t\"orderBy\": null,\n\t\"limit\": null,\n\t\"offset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "List of monitors"
					},
					"response": []
				},
				{
					"name": "getAllUserDefinedMonitorsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAllUserDefinedMonitorsV2($userDefinedMonitorTypes: [String], $createdBy: [String], $orderBy: String, $entities: [String], $mcons: [String], $descriptionFieldOrTable: [String], $domainId: UUID, $isTemplateManaged: Boolean, $namespace: [String], $ruleName: [String], $search: [String], $before: String, $after: String, $first: Int, $last: Int) {\n  getAllUserDefinedMonitorsV2(\n    userDefinedMonitorTypes: $userDefinedMonitorTypes\n    createdBy: $createdBy\n    orderBy: $orderBy\n    entities: $entities\n    mcons: $mcons\n    descriptionFieldOrTable: $descriptionFieldOrTable\n    domainId: $domainId\n    isTemplateManaged: $isTemplateManaged\n    namespace: $namespace\n    ruleName: $ruleName\n    search: $search\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"userDefinedMonitorTypes\": null,\n\t\"createdBy\": null,\n\t\"orderBy\": null,\n\t\"entities\": null,\n\t\"mcons\": null,\n\t\"descriptionFieldOrTable\": null,\n\t\"domainId\": null,\n\t\"isTemplateManaged\": null,\n\t\"namespace\": null,\n\t\"ruleName\": null,\n\t\"search\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getAllUserDefinedMonitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAllUserDefinedMonitors($userDefinedMonitorTypes: [String], $before: String, $after: String, $first: Int, $last: Int) {\n  getAllUserDefinedMonitors(\n    userDefinedMonitorTypes: $userDefinedMonitorTypes\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"userDefinedMonitorTypes\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getCustomMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomMetrics($ruleUuid: UUID, $startTime: DateTime, $endTime: DateTime, $first: Int) {\n  getCustomMetrics(\n    ruleUuid: $ruleUuid\n    startTime: $startTime\n    endTime: $endTime\n    first: $first\n  ) {\n    __typename\n    # metrics\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"ruleUuid\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"first\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve custom metrics based on a custom rule"
					},
					"response": []
				},
				{
					"name": "getCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomRule($ruleId: UUID, $descriptionContains: String, $customSqlContains: String) {\n  getCustomRule(\n    ruleId: $ruleId\n    descriptionContains: $descriptionContains\n    customSqlContains: $customSqlContains\n  ) {\n    __typename\n    id # The ID of the object.\n    uuid\n    accountUuid # Customer account id\n    projects # Projects associated with the monitor\n    datasets # Datasets associated with the monitor\n    description\n    notes\n    labels # Monitor labels\n    isTemplateManaged # Is this monitor managed by a configuration template (monitors-as-code)?\n    namespace # Namespace of rule, used for monitors-as-code\n    severity # The default severity for incidents involving this monitor\n    ruleType\n    warehouseUuid\n    # comparisons\n    intervalMinutes\n    intervalCrontab\n    startTime\n    timezone\n    creatorId # The email of the user that created the monitor\n    updaterId # The email of the user that last updated the monitor\n    prevExecutionTime\n    nextExecutionTime\n    lastCheckTimestamp\n    createdTime\n    updatedTime\n    isDeleted\n    snoozeUntilTime\n    slackSnoozeUser # The slack user who last snoozed the rule\n    conditionalSnooze\n    eventRollupUntilChanged # If true, roll up events until the condition changes\n    eventRollupCount # The number of events to roll up into a single incident\n    notifyRuleRunFailure # Flag to indicate whether or not to send a notification if the rule fails to run\n    dcScheduleUuid\n    dataCollectionDcScheduleUuid\n    customSql\n    override\n    variables\n    # generatedBy\n    entities # Tables referenced in query\n    ruleName # Name of rule, must be unique per account, used for rule identityresolution for monitors-as-code, just a random UUID by default\n    sequenceNumber # Last sequence number, used by growth volume SLIs\n    systemSnoozeUntilTime # Snoozes rule execution, but not available to users as snooze_until_time\n    queryResultType # Specifies the expected result type of the custom SQL query (e.g. a single numeric value)\n    customSamplingSql # Custom query to sample the data on breach\n    # generatedRules\n    entityMcons # MCONs for monitored tables/views\n    renderedCustomSql\n    # scheduleConfig\n    # dataCollectionScheduleConfig\n    # notificationSettings\n    isSnoozed # True if rule is currently snoozed\n    # fieldMetric # Field metric parameters (if query generated by createFieldMetricParameters)\n  }\n}",
								"variables": "{\n\t\"ruleId\": null,\n\t\"descriptionContains\": null,\n\t\"customSqlContains\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get a custom rule"
					},
					"response": []
				},
				{
					"name": "getCustomRules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomRules($entityMcons: [String], $metadataKeys: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $ruleType: String, $warehouseUuid: UUID) {\n  getCustomRules(\n    entityMcons: $entityMcons\n    metadataKeys: $metadataKeys\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    ruleType: $ruleType\n    warehouseUuid: $warehouseUuid\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"entityMcons\": null,\n\t\"metadataKeys\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"ruleType\": null,\n\t\"warehouseUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getGeneratedRules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getGeneratedRules($generatedByUuid: UUID) {\n  getGeneratedRules(generatedByUuid: $generatedByUuid) {\n    __typename\n    id # The ID of the object.\n    uuid\n    accountUuid # Customer account id\n    projects # Projects associated with the monitor\n    datasets # Datasets associated with the monitor\n    description\n    notes\n    labels # Monitor labels\n    isTemplateManaged # Is this monitor managed by a configuration template (monitors-as-code)?\n    namespace # Namespace of rule, used for monitors-as-code\n    severity # The default severity for incidents involving this monitor\n    ruleType\n    warehouseUuid\n    # comparisons\n    intervalMinutes\n    intervalCrontab\n    startTime\n    timezone\n    creatorId # The email of the user that created the monitor\n    updaterId # The email of the user that last updated the monitor\n    prevExecutionTime\n    nextExecutionTime\n    lastCheckTimestamp\n    createdTime\n    updatedTime\n    isDeleted\n    snoozeUntilTime\n    slackSnoozeUser # The slack user who last snoozed the rule\n    conditionalSnooze\n    eventRollupUntilChanged # If true, roll up events until the condition changes\n    eventRollupCount # The number of events to roll up into a single incident\n    notifyRuleRunFailure # Flag to indicate whether or not to send a notification if the rule fails to run\n    dcScheduleUuid\n    dataCollectionDcScheduleUuid\n    customSql\n    override\n    variables\n    # generatedBy\n    entities # Tables referenced in query\n    ruleName # Name of rule, must be unique per account, used for rule identityresolution for monitors-as-code, just a random UUID by default\n    sequenceNumber # Last sequence number, used by growth volume SLIs\n    systemSnoozeUntilTime # Snoozes rule execution, but not available to users as snooze_until_time\n    queryResultType # Specifies the expected result type of the custom SQL query (e.g. a single numeric value)\n    customSamplingSql # Custom query to sample the data on breach\n    # generatedRules\n    entityMcons # MCONs for monitored tables/views\n    renderedCustomSql\n    # scheduleConfig\n    # dataCollectionScheduleConfig\n    # notificationSettings\n    isSnoozed # True if rule is currently snoozed\n    # fieldMetric # Field metric parameters (if query generated by createFieldMetricParameters)\n  }\n}",
								"variables": "{\n\t\"generatedByUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getCircuitBreakerRuleState",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCircuitBreakerRuleState($jobExecutionUuid: UUID!) {\n  getCircuitBreakerRuleState(jobExecutionUuid: $jobExecutionUuid) {\n    __typename\n    jobExecutionUuid # UUID for the job execution that identifies the circuit breaker run\n    accountUuid # UUID for the account that owns the rule\n    resourceUuid # UUID for the warehouse that owns the rule\n    customRuleUuid # UUID for the custom rule that was run as a circuit breaker\n    status # Status of the circuit breaker run\n    log # Array of JSON objects containing state for each stage of the job execution\n  }\n}",
								"variables": "{\n\t\"jobExecutionUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "State for the circuit breaker rule job execution"
					},
					"response": []
				},
				{
					"name": "getCircuitBreakerRuleStateV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCircuitBreakerRuleStateV2($jobExecutionUuids: [UUID!]) {\n  getCircuitBreakerRuleStateV2(jobExecutionUuids: $jobExecutionUuids) {\n    __typename\n    jobExecutionUuid # UUID for the job execution that identifies the circuit breaker run\n    accountUuid # UUID for the account that owns the rule\n    resourceUuid # UUID for the warehouse that owns the rule\n    customRuleUuid # UUID for the custom rule that was run as a circuit breaker\n    status # Status of the circuit breaker run\n    log # Array of JSON objects containing state for each stage of the job execution\n  }\n}",
								"variables": "{\n\t\"jobExecutionUuids\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "State for the circuit breaker rule job executions"
					},
					"response": []
				},
				{
					"name": "getRunSqlRuleState",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getRunSqlRuleState($jobExecutionUuids: [UUID!]) {\n  getRunSqlRuleState(jobExecutionUuids: $jobExecutionUuids) {\n    __typename\n    jobExecutionUuid # UUID for the job execution that identifies the circuit breaker run\n    accountUuid # UUID for the account that owns the rule\n    resourceUuid # UUID for the warehouse that owns the rule\n    customRuleUuid # UUID for the custom rule that was run as a circuit breaker\n    status # Status of the circuit breaker run\n    log # Array of JSON objects containing state for each stage of the job execution\n  }\n}",
								"variables": "{\n\t\"jobExecutionUuids\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "State for the sql rule job executions"
					},
					"response": []
				},
				{
					"name": "getTablesForSql",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTablesForSql($warehouseUuid: UUID!, $customSql: String!, $customSamplingSql: String, $variables: JSONString) {\n  getTablesForSql(\n    warehouseUuid: $warehouseUuid\n    customSql: $customSql\n    customSamplingSql: $customSamplingSql\n    variables: $variables\n  ) {\n    __typename\n    fullTableId # Full table id of the table\n  }\n}",
								"variables": "{\n\t\"warehouseUuid\": null,\n\t\"customSql\": null,\n\t\"customSamplingSql\": null,\n\t\"variables\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The full table ids calculated from the sql query"
					},
					"response": []
				},
				{
					"name": "getNotificationSettingsForRulesWith",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotificationSettingsForRulesWith($ruleType: String!, $warehouseUuid: UUID!, $fullTableIds: [String], $labelNames: [String]) {\n  getNotificationSettingsForRulesWith(\n    ruleType: $ruleType\n    warehouseUuid: $warehouseUuid\n    fullTableIds: $fullTableIds\n    labelNames: $labelNames\n  ) {\n    __typename\n    id\n    uuid # Effective ID for notification settings\n    # createdBy # Creator of the notification\n    createdTime # When the notification was first created\n    # lastUpdatedBy # User who last updated this notification\n    lastUpdateTime # When the notification was last updated\n    type # Type of notification integration (e.g. slack)\n    recipient # Deprecated\n    recipients # Destinations to send notifications to\n    anomalyTypes # List of supported incident types to send notifications for\n    incidentSubTypes # All the incident sub-types this notification settings will alert on.\n    extra # Any additional information for various notification integrations\n    # routingRules\n    customMessage # Custom text to be included with the notification\n    notificationScheduleType # Indicates whether the notification is of real time or digest types\n    # digestSettings\n    specificationRule # DEPRECATED\n    notificationEnabled # When enabled notifications for this setting are sent.\n    # slackMsgDetails\n    recipientDisplayName\n    recipientsDisplayNames\n    permalink\n    matchingIncidents\n  }\n}",
								"variables": "{\n\t\"ruleType\": null,\n\t\"warehouseUuid\": null,\n\t\"fullTableIds\": null,\n\t\"labelNames\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The notification settings that will be used in a rule with the specified data"
					},
					"response": []
				},
				{
					"name": "getFieldMetricQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFieldMetricQuery($fieldMetric: FieldMetricInput!) {\n  getFieldMetricQuery(fieldMetric: $fieldMetric) {\n    __typename\n    sqlQuery # SQL query for the metric\n  }\n}",
								"variables": "{\n\t\"fieldMetric\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Build Field Metric query from parameters"
					},
					"response": []
				},
				{
					"name": "getCustomRuleExecutionAnalytics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomRuleExecutionAnalytics($ruleId: UUID!, $startTime: DateTime!, $endTime: DateTime, $groupBy: PeriodGrouping!) {\n  getCustomRuleExecutionAnalytics(\n    ruleId: $ruleId\n    startTime: $startTime\n    endTime: $endTime\n    groupBy: $groupBy\n  ) {\n    __typename\n    date # Date for the analytics, if grouped by week/month it has the start of each grouping period\n    runs # Number of runs\n    passes # Number of passes\n    breaches # Number of breaches\n  }\n}",
								"variables": "{\n\t\"ruleId\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"groupBy\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return analytics for the executions of the custom rules"
					},
					"response": []
				},
				{
					"name": "getInsights",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getInsights {\n  getInsights {\n    __typename\n    name # Name (id) of insight\n    title # Insight display name\n    usage # Explains what the insight data can be used for\n    description # Information the reports for the insight will provide\n    # reports # Reports available for the insight\n    available # True if this insight is currently available\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "List of available insights"
					},
					"response": []
				},
				{
					"name": "getInsight",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getInsight($insightName: String!) {\n  getInsight(insightName: $insightName) {\n    __typename\n    name # Name (id) of insight\n    title # Insight display name\n    usage # Explains what the insight data can be used for\n    description # Information the reports for the insight will provide\n    # reports # Reports available for the insight\n    available # True if this insight is currently available\n  }\n}",
								"variables": "{\n\t\"insightName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getReports",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getReports($insightName: String!) {\n  getReports(insightName: $insightName) {\n    __typename\n    name # Name of report\n    description # Information about report content\n  }\n}",
								"variables": "{\n\t\"insightName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getReportUrl",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getReportUrl($insightName: String!, $reportName: String!, $createdBefore: DateTime) {\n  getReportUrl(\n    insightName: $insightName\n    reportName: $reportName\n    createdBefore: $createdBefore\n  ) {\n    __typename\n    url # Pre-signed URL for fetching report, expiration time is 1 minute\n    createdAt # Report creation time in UTC\n  }\n}",
								"variables": "{\n\t\"insightName\": null,\n\t\"reportName\": null,\n\t\"createdBefore\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Name (id) of insight to fetch"
					},
					"response": []
				},
				{
					"name": "getLineageNode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNode($objectType: String!, $objectId: String!, $resourceId: UUID, $resourceName: String) {\n  getLineageNode(\n    objectType: $objectType\n    objectId: $objectId\n    resourceId: $resourceId\n    resourceName: $resourceName\n  ) {\n    __typename\n    nodeId # Lineage node id, to be deprecated in favor of MCONs\n    mcon # Monte Carlo object name\n    accountId # Customer account id\n    resourceId # Resource containing this object (warehouse, Tableau account, etc)\n    objectType # Object type (table, view, different types of reports, etc)\n    name # Object name (table name, report name, etc)\n    displayName # Friendly display name\n    version # The version of the job that generated this record\n    jobTs # The timestamp of the job run that generated this record\n    extra # Information specific to each object type\n    createdTime # When the node was first created\n    # lastUpdateUser # Who last updated the node\n    lastUpdateTime # When the property was node updated\n  }\n}",
								"variables": "{\n\t\"objectType\": null,\n\t\"objectId\": null,\n\t\"resourceId\": null,\n\t\"resourceName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a lineage node"
					},
					"response": []
				},
				{
					"name": "getLineageEdge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageEdge($source: NodeInput, $destination: NodeInput) {\n  getLineageEdge(source: $source, destination: $destination) {\n    __typename\n    edgeId # Edge id (hash)\n    # source # Source node MCON, upstream in the graph\n    # dest # Destination node MCON, downstream in the graph\n    accountId # Customer account id\n    version # The version of the job that generated this record\n    jobTs # The timestamp of the job run that generated this record\n    expireAt # Timestamp after when this edge is considered expired\n    createdTime # When the edge was first created\n    # lastUpdateUser # Who last updated the edge\n    lastUpdateTime # When the edge was last updated\n  }\n}",
								"variables": "{\n\t\"source\": null,\n\t\"destination\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a lineage edge"
					},
					"response": []
				},
				{
					"name": "getLineageNodeBlockPattern",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodeBlockPattern($uuid: String!) {\n  getLineageNodeBlockPattern(uuid: $uuid) {\n    __typename\n    id\n    uuid # Pattern UUID\n    accountId # Customer account id\n    resourceId # Resource containing the node\n    datasetRegexp # Block nodes with dataset id matching this regexp\n    projectRegexp # Block nodes with project id matching this regexp\n    tableRegexp # Block nodes with table id matching this regexp\n    createdTime # When the regexp was first created\n    # lastUpdateUser # Who last updated the regexp\n    lastUpdateTime # When the regexp was last updated\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a node block pattern"
					},
					"response": []
				},
				{
					"name": "getLineageNodeBlockPatterns",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodeBlockPatterns($resourceId: String!) {\n  getLineageNodeBlockPatterns(resourceId: $resourceId) {\n    __typename\n    id\n    uuid # Pattern UUID\n    accountId # Customer account id\n    resourceId # Resource containing the node\n    datasetRegexp # Block nodes with dataset id matching this regexp\n    projectRegexp # Block nodes with project id matching this regexp\n    tableRegexp # Block nodes with table id matching this regexp\n    createdTime # When the regexp was first created\n    # lastUpdateUser # Who last updated the regexp\n    lastUpdateTime # When the regexp was last updated\n  }\n}",
								"variables": "{\n\t\"resourceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a list of node block patterns"
					},
					"response": []
				},
				{
					"name": "getLineageNodeReplacementRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodeReplacementRule($uuid: UUID!) {\n  getLineageNodeReplacementRule(uuid: $uuid) {\n    __typename\n    id\n    uuid # Replacement rule UUID\n    accountId # Customer account id\n    resourceId # Resource containing the node\n    pattern # Modify canonical name by replacing the pattern with replacement\n    replacement # Modify canonical name by replacing the pattern with replacement\n    caseInsensitive # Case sensitivity of the pattern matching\n    # lastUpdateUser # Who last updated the replacement rule\n    lastUpdateTime # When the replacement rule was last updated\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a node replacement rule"
					},
					"response": []
				},
				{
					"name": "getLineageNodeReplacementRules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodeReplacementRules($resourceId: UUID!) {\n  getLineageNodeReplacementRules(resourceId: $resourceId) {\n    __typename\n    id\n    uuid # Replacement rule UUID\n    accountId # Customer account id\n    resourceId # Resource containing the node\n    pattern # Modify canonical name by replacing the pattern with replacement\n    replacement # Modify canonical name by replacing the pattern with replacement\n    caseInsensitive # Case sensitivity of the pattern matching\n    # lastUpdateUser # Who last updated the replacement rule\n    lastUpdateTime # When the replacement rule was last updated\n  }\n}",
								"variables": "{\n\t\"resourceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a list of node replacement rules"
					},
					"response": []
				},
				{
					"name": "simulateLineageNodeReplacementRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query simulateLineageNodeReplacementRule($pattern: String!, $replacement: String!, $testInputStrings: [String!], $caseInsensitive: Boolean) {\n  simulateLineageNodeReplacementRule(\n    pattern: $pattern\n    replacement: $replacement\n    testInputStrings: $testInputStrings\n    caseInsensitive: $caseInsensitive\n  ) {\n    __typename\n    testInputString # The provided test input string\n    replacedString # The replaced string, using provided pattern/replacement\n  }\n}",
								"variables": "{\n\t\"pattern\": null,\n\t\"replacement\": null,\n\t\"testInputStrings\": [null],\n\t\"caseInsensitive\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Simulate a replacement pattern"
					},
					"response": []
				},
				{
					"name": "getCatalogObjectMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCatalogObjectMetadata($offset: Int, $before: String, $after: String, $first: Int, $last: Int, $mcon: String) {\n  getCatalogObjectMetadata(\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    mcon: $mcon\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getCatalogNavLevelNodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCatalogNavLevelNodes($mcon: String, $parentMcon: String, $objectTypes: [String], $excludeObjectTypes: [String], $domainId: UUID, $offset: Int, $limit: Int) {\n  getCatalogNavLevelNodes(\n    mcon: $mcon\n    parentMcon: $parentMcon\n    objectTypes: $objectTypes\n    excludeObjectTypes: $excludeObjectTypes\n    domainId: $domainId\n    offset: $offset\n    limit: $limit\n  ) {\n    __typename\n    # nodes # Nodes for current nav page.\n    hasNextPage # If there are more nodes.\n    nextPageOffset # Where to start for next page, if next page exists.\n    groupObjectType # Object type of the group, when grouping by type.\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"parentMcon\": null,\n\t\"objectTypes\": null,\n\t\"excludeObjectTypes\": null,\n\t\"domainId\": null,\n\t\"offset\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get nodes for navigating the catalog by type and hierarchy."
					},
					"response": []
				},
				{
					"name": "getCatalogNavGroupedNodes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCatalogNavGroupedNodes($mcon: String, $parentMcon: String, $objectTypes: [String], $excludeObjectTypes: [String], $domainId: UUID, $offset: Int, $limit: Int) {\n  getCatalogNavGroupedNodes(\n    mcon: $mcon\n    parentMcon: $parentMcon\n    objectTypes: $objectTypes\n    excludeObjectTypes: $excludeObjectTypes\n    domainId: $domainId\n    offset: $offset\n    limit: $limit\n  ) {\n    __typename\n    # nodes # Nodes for current nav page.\n    hasNextPage # If there are more nodes.\n    nextPageOffset # Where to start for next page, if next page exists.\n    groupObjectType # Object type of the group, when grouping by type.\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"parentMcon\": null,\n\t\"objectTypes\": null,\n\t\"excludeObjectTypes\": null,\n\t\"domainId\": null,\n\t\"offset\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get nodes for navigating the catalog by type and hierarchy."
					},
					"response": []
				},
				{
					"name": "getObjectProperties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getObjectProperties($offset: Int, $before: String, $after: String, $first: Int, $last: Int, $mconId: String) {\n  getObjectProperties(\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    mconId: $mconId\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"mconId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getObjectPropertyNameValues",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getObjectPropertyNameValues($searchString: String, $first: Int, $offset: Int) {\n  getObjectPropertyNameValues(\n    searchString: $searchString\n    first: $first\n    offset: $offset\n  ) {\n    __typename\n    # propertyNameValues # List of unique object property name/value pairs\n    hasNextPage # there are more pages to be retrieved\n  }\n}",
								"variables": "{\n\t\"searchString\": null,\n\t\"first\": null,\n\t\"offset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return all unique property names/values for an account"
					},
					"response": []
				},
				{
					"name": "getObjectPropertyNames",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getObjectPropertyNames($limit: Int, $offset: Int, $searchString: String) {\n  getObjectPropertyNames(\n    limit: $limit\n    offset: $offset\n    searchString: $searchString\n  ) {\n    __typename\n    propertyNames # List of object property names\n  }\n}",
								"variables": "{\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"searchString\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return all unique property names for an account"
					},
					"response": []
				},
				{
					"name": "getObjectPropertyValues",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getObjectPropertyValues($limit: Int, $offset: Int, $propertyName: String, $searchString: String) {\n  getObjectPropertyValues(\n    limit: $limit\n    offset: $offset\n    propertyName: $propertyName\n    searchString: $searchString\n  ) {\n    __typename\n    propertyValues # List of object property values\n  }\n}",
								"variables": "{\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"propertyName\": null,\n\t\"searchString\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Return all unique property values for an account"
					},
					"response": []
				},
				{
					"name": "getMonitorLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorLabels {\n  getMonitorLabels {\n    __typename\n    uuid # Unique identifier of a monitor label\n    label # Monitor label name\n    # createdBy # Monitor label creator\n    # monitors # List of monitors using this label\n    monitorCount # The number of monitors using this label\n    notificationCount # The number of notifications using this label\n    usedInMac # Flag for whether any MaC monitors use this label\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get monitor labels"
					},
					"response": []
				},
				{
					"name": "monitorLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query monitorLabels {\n  monitorLabels {\n    __typename\n    label # The monitor label name\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get monitor labels"
					},
					"response": []
				},
				{
					"name": "getAccountMonitorLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAccountMonitorLabels {\n  getAccountMonitorLabels {\n    __typename\n    uuid # Unique identifier of a monitor label\n    label # Monitor label name\n    # createdBy # Monitor label creator\n    # monitors # List of monitors using this label\n    monitorCount # The number of monitors using this label\n    notificationCount # The number of notifications using this label\n    usedInMac # Flag for whether any MaC monitors use this label\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get monitor labels"
					},
					"response": []
				},
				{
					"name": "getActiveMonitors",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getActiveMonitors($entities: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $type: String) {\n  getActiveMonitors(\n    entities: $entities\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    type: $type\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"entities\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"type\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all active monitors"
					},
					"response": []
				},
				{
					"name": "getMonitorSummary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorSummary($resourceId: UUID, $domainId: UUID) {\n  getMonitorSummary(resourceId: $resourceId, domainId: $domainId) {\n    __typename\n    # resources\n    stats\n    categories\n    hourlyStats\n    jsonSchema\n    customSql\n    tableMetric\n  }\n}",
								"variables": "{\n\t\"resourceId\": null,\n\t\"domainId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getMonitorsByType",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorsByType($monitorType: String, $monitorTypes: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $type: String) {\n  getMonitorsByType(\n    monitorType: $monitorType\n    monitorTypes: $monitorTypes\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    type: $type\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"monitorType\": null,\n\t\"monitorTypes\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"type\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitor($uuid: UUID, $resourceId: UUID, $fullTableId: String, $mcon: String, $monitorType: String) {\n  getMonitor(\n    uuid: $uuid\n    resourceId: $resourceId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    monitorType: $monitorType\n  ) {\n    __typename\n    id # The ID of the object.\n    uuid\n    accountUuid # Customer account id\n    projects # Projects associated with the monitor\n    datasets # Datasets associated with the monitor\n    description\n    notes\n    # labels\n    isTemplateManaged # Is this monitor managed by a configuration template (monitors-as-code)?\n    namespace # Namespace of rule, used for monitors-as-code\n    severity # Default severity for incidents involving this monitor\n    type\n    fields\n    entities # Entities (e.g. tables) associated with monitor\n    # createdBy # Who added the monitor\n    timeAxisFieldName\n    timeAxisFieldType\n    unnestFields\n    aggTimeInterval\n    historyDays\n    aggSelectExpression\n    whereCondition\n    usePartitionClause # Whether to use automatic partition filter in query\n    # schedule\n    createdTime # When the monitor was first created\n    monitorName # Name of monitor, must be unique per account, used for rule identityresolution for monitors-as-code, just a random UUID by default\n    isPaused # Is this monitor paused?\n    notifyRuleRunFailure # Flag to indicate whether or not to send a notification if the rule fails to run\n    disableLookBackBootstrap # Flag to indicates whether to disable the look back bootstrap for a monitor\n    segmentedExpressions # Fields or expressions to segment by\n    # lastUpdateUser # Who was the last user to update the monitor\n    lastUpdateTime # When the monitor was last updated\n    # table # Table related to monitor\n    # selectExpressions\n    mcon\n    fullTableId\n    monitorType\n    # scheduleConfig\n    # notificationSettings\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"resourceId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"monitorType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve information about a monitor"
					},
					"response": []
				},
				{
					"name": "getMonitorConfiguration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorConfiguration($configurationData: MonitorConfigurationInput) {\n  getMonitorConfiguration(configurationData: $configurationData) {\n    __typename\n    timeField # Time field to use for the monitor\n    aggregationType # Day or Hour\n    lookbackDays # The history days for the monitor\n  }\n}",
								"variables": "{\n\t\"configurationData\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The time axis data for the monitor"
					},
					"response": []
				},
				{
					"name": "getMonitorSchedulingConfiguration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorSchedulingConfiguration($mcon: String!) {\n  getMonitorSchedulingConfiguration(mcon: $mcon) {\n    __typename\n    scheduleType # One of fixed/dynamic or None if cannot decide automatically\n    intervalMinutes # Number of minutes between monitor runs is schedule type is fixed\n    startTime # Date to start the monitor if schedule type is fixed\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The scheduling configuration for the monitor"
					},
					"response": []
				},
				{
					"name": "getTimeAxisSqlExpressions",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTimeAxisSqlExpressions {\n  getTimeAxisSqlExpressions {\n    __typename\n    expression\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The SQL expressions used in time axis in monitors for the account"
					},
					"response": []
				},
				{
					"name": "getNotificationSettingsForMonitorsWith",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNotificationSettingsForMonitorsWith($monitorType: String!, $labelNames: [String], $mcon: String) {\n  getNotificationSettingsForMonitorsWith(\n    monitorType: $monitorType\n    labelNames: $labelNames\n    mcon: $mcon\n  ) {\n    __typename\n    id\n    uuid # Effective ID for notification settings\n    # createdBy # Creator of the notification\n    createdTime # When the notification was first created\n    # lastUpdatedBy # User who last updated this notification\n    lastUpdateTime # When the notification was last updated\n    type # Type of notification integration (e.g. slack)\n    recipient # Deprecated\n    recipients # Destinations to send notifications to\n    anomalyTypes # List of supported incident types to send notifications for\n    incidentSubTypes # All the incident sub-types this notification settings will alert on.\n    extra # Any additional information for various notification integrations\n    # routingRules\n    customMessage # Custom text to be included with the notification\n    notificationScheduleType # Indicates whether the notification is of real time or digest types\n    # digestSettings\n    specificationRule # DEPRECATED\n    notificationEnabled # When enabled notifications for this setting are sent.\n    # slackMsgDetails\n    recipientDisplayName\n    recipientsDisplayNames\n    permalink\n    matchingIncidents\n  }\n}",
								"variables": "{\n\t\"monitorType\": null,\n\t\"labelNames\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The notification settings that will be used in a monitor with the specified data"
					},
					"response": []
				},
				{
					"name": "getDeltaLogs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDeltaLogs($mcon: String!, $startTime: DateTime, $endTime: DateTime, $first: Int, $after: String) {\n  getDeltaLogs(\n    mcon: $mcon\n    startTime: $startTime\n    endTime: $endTime\n    first: $first\n    after: $after\n  ) {\n    __typename\n    # edges\n    # pageInfo # Holds details of the current results page\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"first\": null,\n\t\"after\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get Delta logs for the provided table. Due to Databricks' limitations, this query field only supports forwards pagination with first and after, but not backwards with last and before."
					},
					"response": []
				},
				{
					"name": "getDataAssetsDashboard",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDataAssetsDashboard($domainUuid: UUID) {\n  getDataAssetsDashboard(domainUuid: $domainUuid) {\n    __typename\n    dataSourcesCount # The number of data sources monitored\n    projectCount # The number of projects monitored\n    schemaCount # The number of schemas monitored\n    tableCount # The number of tables monitored\n    viewCount # The number of views monitored\n    externalTableCount # The number of external tables monitored\n    wildcardTableCount # The number of wildcard tables monitored\n  }\n}",
								"variables": "{\n\t\"domainUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Dashboard counts for monitored data assets"
					},
					"response": []
				},
				{
					"name": "getIncidentDashboardData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentDashboardData($domainUuid: UUID, $lookbackWeeks: Int) {\n  getIncidentDashboardData(domainUuid: $domainUuid, lookbackWeeks: $lookbackWeeks) {\n    __typename\n    totalIncidentCount # The total count of incidents over the specified weeks\n    noStatusCount # The total count of incidents with no status over the specified weeks\n    investigatingCount # The total count of incidents with status of investigating over the specified weeks\n    fixedCount # The total count of incidents with fixed status over the specified weeks\n    expectedAndNoActionCount # The total count of incidents with status expected or no action over the specified weeks\n  }\n}",
								"variables": "{\n\t\"domainUuid\": null,\n\t\"lookbackWeeks\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Dashboard counts for incidents occurring over specified weeks"
					},
					"response": []
				},
				{
					"name": "getIncidentDataWeekly",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentDataWeekly($groupBy: IncidentGroupBy!, $domainUuid: UUID, $lookbackWeeks: Int) {\n  getIncidentDataWeekly(\n    groupBy: $groupBy\n    domainUuid: $domainUuid\n    lookbackWeeks: $lookbackWeeks\n  ) {\n    __typename\n    # weeklyData # The weekly incident data\n  }\n}",
								"variables": "{\n\t\"groupBy\": null,\n\t\"domainUuid\": null,\n\t\"lookbackWeeks\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Dashboard counts for incidents occurring over specified weeks"
					},
					"response": []
				},
				{
					"name": "getMonitorDashboardData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMonitorDashboardData($domainUuid: UUID) {\n  getMonitorDashboardData(domainUuid: $domainUuid) {\n    __typename\n    totalMonitorCount # Total count of monitors actively in MC account\n    pausedCount # Total number of paused monitors\n    snoozedCount # Total number of snoozed monitors\n    activeCount # Total count of monitors with active status\n    trainingCount # Total count of monitors with training status\n    misconfiguredCount # Total count of monitors with misconfigured status\n    errorCount # Total count of monitors with error status\n    inProgressCount # Total number of monitors currently running\n    noStatusCount # Total number of monitors with state no status\n  }\n}",
								"variables": "{\n\t\"domainUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Dashboard counts for mmonitors"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectUsers($incidentId: UUID!, $lookback: LookbackRange!, $afterKey: UserAfterKeyInput, $size: Int) {\n  getBlastRadiusDirectUsers(\n    incidentId: $incidentId\n    lookback: $lookback\n    afterKey: $afterKey\n    size: $size\n  ) {\n    __typename\n    # afterKey # The after key to use for pagination. Deprecated.\n    # data # The user blast radius data. Deprecated.\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null,\n\t\"afterKey\": null,\n\t\"size\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "User information for direct blast radius of an incident. DEPRECATED - please use getBlastRadiusDirectUsersV2"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectUsersV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectUsersV2($incidentId: UUID!, $lookback: LookbackRange!, $afterKey: UserAfterKeyInput2, $size: Int) {\n  getBlastRadiusDirectUsersV2(\n    incidentId: $incidentId\n    lookback: $lookback\n    afterKey: $afterKey\n    size: $size\n  ) {\n    __typename\n    # afterKey # The after key to use for pagination\n    # data # The user blast radius data\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null,\n\t\"afterKey\": null,\n\t\"size\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "User information for direct blast radius of an incident"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectQueries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectQueries($incidentId: UUID!, $lookback: LookbackRange!, $afterKey: QueryAfterKeyInput, $size: Int) {\n  getBlastRadiusDirectQueries(\n    incidentId: $incidentId\n    lookback: $lookback\n    afterKey: $afterKey\n    size: $size\n  ) {\n    __typename\n    # afterKey # The after key to use for pagination\n    # data # The user blast radius data\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null,\n\t\"afterKey\": null,\n\t\"size\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Direct queries for blast radius of incident"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectQueriesV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectQueriesV2($incidentId: UUID!, $lookback: LookbackRange!, $afterKey: UserAfterKeyInput2, $size: Int) {\n  getBlastRadiusDirectQueriesV2(\n    incidentId: $incidentId\n    lookback: $lookback\n    afterKey: $afterKey\n    size: $size\n  ) {\n    __typename\n    # afterKey # The after key to user for pagination\n    # data # The user blast radius data\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null,\n\t\"afterKey\": null,\n\t\"size\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Direct queries for blast radius of incident"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectQueriesSummary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectQueriesSummary($incidentId: UUID!, $lookback: LookbackRange!, $afterKey: UserAfterKeyInput2, $size: Int) {\n  getBlastRadiusDirectQueriesSummary(\n    incidentId: $incidentId\n    lookback: $lookback\n    afterKey: $afterKey\n    size: $size\n  ) {\n    __typename\n    # afterKey # The after key to user for pagination\n    # data # The user blast radius data\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null,\n\t\"afterKey\": null,\n\t\"size\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Direct queries for blast radius of incident"
					},
					"response": []
				},
				{
					"name": "getIncidentTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentTables($incidentId: UUID!) {\n  getIncidentTables(incidentId: $incidentId) {\n    __typename\n    tables # The list of table mcons directly impacted by incident\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The MCONS directly impacted by the incident"
					},
					"response": []
				},
				{
					"name": "getIncidentWarehouseTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentWarehouseTables($incidentId: UUID!) {\n  getIncidentWarehouseTables(incidentId: $incidentId) {\n    __typename\n    id # The ID of the object.\n    tableId\n    fullTableId\n    # warehouse\n    discoveredTime\n    friendlyName\n    description\n    location\n    projectName\n    dataset\n    tableType\n    isEncrypted\n    createdTime\n    lastModified\n    viewQuery\n    labels\n    path\n    priority\n    tracked\n    status\n    freshnessAnomaly\n    sizeAnomaly\n    freshnessSizeAnomaly\n    metricAnomaly\n    dynamicTable\n    isDeleted\n    lastObserved\n    isExcluded\n    dataProvider\n    mcon # The table's MCON (MC Object Name)\n    # anomalies\n    # tags\n    # versions\n    # events\n    # monitors # Table related to monitor\n    # dbtNodes # Associated table\n    # dbtRunSteps # Associated table\n    # fivetranconnectormodelSet\n    # usageStats # Section describing various table usage stats\n    # thresholds # Section describing various anomaly thresholds for the table\n    # getThresholds # Section describing various anomaly thresholds for the table\n    schemaChangeCount\n    statusScalar\n    nodeId\n    isPartialDateRange\n    # lastUpdates # List of table updates\n    # lastUpdatesV2 # List of table updates\n    # totalRowCounts # List of total row count values for the table\n    # totalByteCounts # List of total byte count values for the table\n    # writeThroughput # List of latest write throughput in bytes, at most 10000 data points.\n    # objectsDeleted # List of latest objects deleted events, at most 10000 data points.\n    # maintenanceWindows # List of windows in which the training is ignored\n    # checkTableMetricsExistence # List of metric name and whether they exist or not on a table\n    isMuted # No incidents will be created for this table if muted.\n    mutedEventTypes # Muting is active for the specified event types.\n    # tableStats # Stats for the table\n    # objectProperties\n    isTransitioningDataProvider\n    # tableCapabilities # Capabilities for the table\n    # partitionKeys # Partition key information\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The Warehouse Tables associated with an incident"
					},
					"response": []
				},
				{
					"name": "getDirectBlastRadiusCounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDirectBlastRadiusCounts($incidentId: UUID!, $lookback: LookbackRange!) {\n  getDirectBlastRadiusCounts(incidentId: $incidentId, lookback: $lookback) {\n    __typename\n    queryCount # The number of queries\n    userCount # The number of users\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"lookback\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The aggregated counts for tables directly impacted by the incident"
					},
					"response": []
				},
				{
					"name": "getBlastRadiusDirectQueriesForUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBlastRadiusDirectQueriesForUser($incidentId: UUID!, $username: String!, $lookback: LookbackRange!) {\n  getBlastRadiusDirectQueriesForUser(\n    incidentId: $incidentId\n    username: $username\n    lookback: $lookback\n  ) {\n    __typename\n    date # The date the query was ran\n    # tables # The impacted tables in the query\n    queryHash # The query hash\n    queryCount # The number of times the query was ran\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"username\": null,\n\t\"lookback\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The queries for the lookback period provided for the given user"
					},
					"response": []
				},
				{
					"name": "getAirflowTasks",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAirflowTasks($taskStates: [String], $endTime: DateTime, $tableMcons: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getAirflowTasks(\n    taskStates: $taskStates\n    endTime: $endTime\n    tableMcons: $tableMcons\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"taskStates\": null,\n\t\"endTime\": null,\n\t\"tableMcons\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get latest attempt for airflow tasks from the 72 hours prior to end_time"
					},
					"response": []
				},
				{
					"name": "getAirflowTaskAttempts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAirflowTaskAttempts($dagId: String!, $executionDate: String!, $taskId: String!, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getAirflowTaskAttempts(\n    dagId: $dagId\n    executionDate: $executionDate\n    taskId: $taskId\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dagId\": null,\n\t\"executionDate\": null,\n\t\"taskId\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all attempts for an airflow task"
					},
					"response": []
				},
				{
					"name": "getAirflowTaskLogs",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAirflowTaskLogs($dagId: String!, $executionDate: String!, $taskId: String!, $tryNumber: Int!, $taskTimestamp: DateTime!, $offset: Int, $limit: Int) {\n  getAirflowTaskLogs(\n    dagId: $dagId\n    executionDate: $executionDate\n    taskId: $taskId\n    tryNumber: $tryNumber\n    taskTimestamp: $taskTimestamp\n    offset: $offset\n    limit: $limit\n  ) {\n    __typename\n    messages # The log messages for an Airflow task instance\n    totalMessages # Total log messages available\n    _id # Composite ID for frontend caching (concatenated dag/exec_date/task/try)\n  }\n}",
								"variables": "{\n\t\"dagId\": null,\n\t\"executionDate\": null,\n\t\"taskId\": null,\n\t\"tryNumber\": null,\n\t\"taskTimestamp\": null,\n\t\"offset\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the logs for an Airflow task instance"
					},
					"response": []
				},
				{
					"name": "getEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEvents($dwId: UUID, $fullTableId: String, $eventType: String, $eventTypes: [String], $dataset: String, $tablesOlderThanDays: Int, $eventStates: [String], $excludeState: String, $startTime: DateTime, $endTime: DateTime, $incidentId: UUID, $includeTimelineEvents: Boolean, $includeAnomalyEvents: Boolean, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getEvents(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    eventType: $eventType\n    eventTypes: $eventTypes\n    dataset: $dataset\n    tablesOlderThanDays: $tablesOlderThanDays\n    eventStates: $eventStates\n    excludeState: $excludeState\n    startTime: $startTime\n    endTime: $endTime\n    incidentId: $incidentId\n    includeTimelineEvents: $includeTimelineEvents\n    includeAnomalyEvents: $includeAnomalyEvents\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"eventType\": null,\n\t\"eventTypes\": null,\n\t\"dataset\": null,\n\t\"tablesOlderThanDays\": null,\n\t\"eventStates\": null,\n\t\"excludeState\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"incidentId\": null,\n\t\"includeTimelineEvents\": null,\n\t\"includeAnomalyEvents\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get events (i.e. anomalies, changes, etc.) in my account"
					},
					"response": []
				},
				{
					"name": "getCommentsForMonitorIncidents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCommentsForMonitorIncidents($monitorUuids: [UUID], $startTime: DateTime, $endTime: DateTime, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getCommentsForMonitorIncidents(\n    monitorUuids: $monitorUuids\n    startTime: $startTime\n    endTime: $endTime\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"monitorUuids\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get comments associated with incidents that have events created by the monitors"
					},
					"response": []
				},
				{
					"name": "getEvent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEvent($uuid: UUID) {\n  getEvent(uuid: $uuid) {\n    __typename\n    id # The ID of the object.\n    eventType\n    createdTime\n    # anomaly\n    data\n    # ackBy\n    ackTimestamp\n    eventState\n    notifiedUsers\n    totalComments\n    importanceScore\n    isImportant\n    isChild\n    uuid\n    # warehouse\n    # table\n    monitorId\n    customRuleEntities # Tables referenced if has a custom rule\n    customRuleProjects # Projects referenced if has a custom rule\n    customRuleDatasets # Datasets referenced if has a custom rule\n    # incident\n    eventGeneratedTime\n    # eventComments\n    # rcaJobs\n    # rcaStatus # RCA status associated with the event\n    hasLiveFreshness\n    hasReproductionQueries\n    hasSampling\n    # tableStats # Stats for the table connected to the event\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getEventComments",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEventComments($eventId: UUID, $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getEventComments(\n    eventId: $eventId\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"eventId\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getEventTypeSummary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEventTypeSummary($resourceId: UUID, $startTime: DateTime, $endTime: DateTime) {\n  getEventTypeSummary(\n    resourceId: $resourceId\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    schemaChange\n    freshAnom\n    unchangedSizeAnom\n    jsonSchemaChange\n    deleteTable\n    sizeAnom\n    sizeDiff\n    metricAnom\n    customRuleAnom\n    distAnom\n    queryRuntimeAnom\n    dbtModelError\n    dbtTestFailure\n  }\n}",
								"variables": "{\n\t\"resourceId\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getIncidents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidents($dwId: UUID, $incidentTypes: [String], $incidentSubTypes: [IncidentSubType], $eventTypes: [String], $eventStates: [String], $startTime: DateTime, $endTime: DateTime, $incidentIds: [UUID], $owners: [String], $severities: [String], $includeFeedback: [String], $excludeFeedback: [String], $projects: [String], $datasets: [String], $tables: [String], $fullTableIds: [String], $includeTimelineEvents: Boolean, $includeAnomalyEvents: Boolean, $domainId: UUID, $monitorIds: [UUID], $reactionTypes: [IncidentReactionType], $ruleId: UUID, $tagKeyValuePairs: [TagKeyValuePairInput], $tagKeyValues: [TagPair], $tagKeys: [String], $minEventCount: Int, $maxEventCount: Int, $containsKeyAsset: Boolean, $includeNormalized: Boolean, $before: String, $after: String, $first: Int, $last: Int) {\n  getIncidents(\n    dwId: $dwId\n    incidentTypes: $incidentTypes\n    incidentSubTypes: $incidentSubTypes\n    eventTypes: $eventTypes\n    eventStates: $eventStates\n    startTime: $startTime\n    endTime: $endTime\n    incidentIds: $incidentIds\n    owners: $owners\n    severities: $severities\n    includeFeedback: $includeFeedback\n    excludeFeedback: $excludeFeedback\n    projects: $projects\n    datasets: $datasets\n    tables: $tables\n    fullTableIds: $fullTableIds\n    includeTimelineEvents: $includeTimelineEvents\n    includeAnomalyEvents: $includeAnomalyEvents\n    domainId: $domainId\n    monitorIds: $monitorIds\n    reactionTypes: $reactionTypes\n    ruleId: $ruleId\n    tagKeyValuePairs: $tagKeyValuePairs\n    tagKeyValues: $tagKeyValues\n    tagKeys: $tagKeys\n    minEventCount: $minEventCount\n    maxEventCount: $maxEventCount\n    containsKeyAsset: $containsKeyAsset\n    includeNormalized: $includeNormalized\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"incidentTypes\": null,\n\t\"incidentSubTypes\": null,\n\t\"eventTypes\": null,\n\t\"eventStates\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"incidentIds\": null,\n\t\"owners\": null,\n\t\"severities\": null,\n\t\"includeFeedback\": null,\n\t\"excludeFeedback\": null,\n\t\"projects\": null,\n\t\"datasets\": null,\n\t\"tables\": null,\n\t\"fullTableIds\": null,\n\t\"includeTimelineEvents\": null,\n\t\"includeAnomalyEvents\": null,\n\t\"domainId\": null,\n\t\"monitorIds\": null,\n\t\"reactionTypes\": null,\n\t\"ruleId\": null,\n\t\"tagKeyValuePairs\": null,\n\t\"tagKeyValues\": null,\n\t\"tagKeys\": null,\n\t\"minEventCount\": null,\n\t\"maxEventCount\": null,\n\t\"containsKeyAsset\": null,\n\t\"includeNormalized\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get incidents (i.e. a collection of related events) in my account"
					},
					"response": []
				},
				{
					"name": "getIncidentReaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentReaction($incidentId: UUID) {\n  getIncidentReaction(incidentId: $incidentId) {\n    __typename\n    id # The ID of the object.\n    uuid\n    # incident\n    type\n    reasons\n    notes\n    adaptModel\n    # createdBy\n    # lastUpdatedBy\n    createdTime\n    updatedTime\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getIncidentSummaries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentSummaries($incidentIds: [UUID]) {\n  getIncidentSummaries(incidentIds: $incidentIds) {\n    __typename\n    incidentId\n    # types\n    # states\n    tables\n    keyAssets # Number of key assets(tables) in incident\n    hasRca # Whether an rca insight exists for this incident\n  }\n}",
								"variables": "{\n\t\"incidentIds\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getIncidentTypeSummary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentTypeSummary($dwId: UUID, $startTime: DateTime, $endTime: DateTime, $domainId: UUID) {\n  getIncidentTypeSummary(\n    dwId: $dwId\n    startTime: $startTime\n    endTime: $endTime\n    domainId: $domainId\n  ) {\n    __typename\n    anomalies\n    schemaChanges\n    deletedTables\n    metricAnomalies\n    customRuleAnomalies\n    performanceAnomalies\n    dbtErrors\n    pseudoIntegrationTest\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"domainId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get a summary of counts by type for incidents in the account"
					},
					"response": []
				},
				{
					"name": "getIncidentNotificationSettingsUsed",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIncidentNotificationSettingsUsed($incidentId: UUID!) {\n  getIncidentNotificationSettingsUsed(incidentId: $incidentId) {\n    __typename\n    id\n    uuid # Effective ID for notification settings\n    # createdBy # Creator of the notification\n    createdTime # When the notification was first created\n    # lastUpdatedBy # User who last updated this notification\n    lastUpdateTime # When the notification was last updated\n    type # Type of notification integration (e.g. slack)\n    recipient # Deprecated\n    recipients # Destinations to send notifications to\n    anomalyTypes # List of supported incident types to send notifications for\n    incidentSubTypes # All the incident sub-types this notification settings will alert on.\n    extra # Any additional information for various notification integrations\n    # routingRules\n    customMessage # Custom text to be included with the notification\n    notificationScheduleType # Indicates whether the notification is of real time or digest types\n    # digestSettings\n    specificationRule # DEPRECATED\n    notificationEnabled # When enabled notifications for this setting are sent.\n    # slackMsgDetails\n    recipientDisplayName\n    recipientsDisplayNames\n    permalink\n    matchingIncidents\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The notification settings that were used to send notifications for the incident"
					},
					"response": []
				},
				{
					"name": "getSlackMessagesForIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSlackMessagesForIncident($incidentId: UUID!) {\n  getSlackMessagesForIncident(incidentId: $incidentId) {\n    __typename\n    id # The ID of the object.\n    # incident\n    # notificationSetting\n    # account\n    permalink\n    msgTs\n    # engagements\n  }\n}",
								"variables": "{\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getSlackEngagementsForIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSlackEngagementsForIncident($incidentId: UUID!, $eventTypes: [SlackEngagementEventType], $excludeBotEngagements: Boolean) {\n  getSlackEngagementsForIncident(\n    incidentId: $incidentId\n    eventTypes: $eventTypes\n    excludeBotEngagements: $excludeBotEngagements\n  ) {\n    __typename\n    id # The ID of the object.\n    # message\n    uuid\n    eventType\n    eventTs\n    data\n    createdTime\n    updatedTime\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"eventTypes\": null,\n\t\"excludeBotEngagements\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getAllDomains",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAllDomains {\n  getAllDomains {\n    __typename\n    uuid # Domain UUID\n    name # Domain name\n    description # Domain description\n    createdByEmail # Domain created by email address\n    assignments # Objects assigned to domain (as MCONs)\n    # tags # Filter by tag key/value pairs for tables.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get all available domains"
					},
					"response": []
				},
				{
					"name": "getDomain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDomain($uuid: UUID!) {\n  getDomain(uuid: $uuid) {\n    __typename\n    uuid # Domain UUID\n    name # Domain name\n    description # Domain description\n    createdByEmail # Domain created by email address\n    assignments # Objects assigned to domain (as MCONs)\n    # tags # Filter by tag key/value pairs for tables.\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get domain by id"
					},
					"response": []
				},
				{
					"name": "getAccountRoles",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAccountRoles {\n  getAccountRoles {\n    __typename\n    name # Unique, human-readable name name with format of [company-name]/[role-name]\n    version # Version of the permissions definitions the group is designed for, ex: 2022-03-17. Defaults to current.\n    isManaged # Indicates if this role is managed by Monte Carlo. If so, it may not be modified by clients.\n    label # UI/user-friendly display name, ex: Editor\n    description # Description/help text to help users understand the purpose of the role\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get roles available for current user's account."
					},
					"response": []
				},
				{
					"name": "getAuthorizationGroups",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAuthorizationGroups {\n  getAuthorizationGroups {\n    __typename\n    name # Unique to the account, human-readable name (for use in code/policy reference).\n    # roles # List of roles that are assigned to this group.\n    version # Version of the permissions definitions the group is designed for, ex: 2022-03-17. Defaults to current.\n    isManaged # Indicates if this group is managed by Monte Carlo. If so, only changes to group membership are supported.\n    label # UI/user-friendly display name, ex: Data Consumers\n    description # Description/help text to help users understand the purpose of the group\n    # users # List of users  who are members of the group.\n    # domainRestrictions # List of domains this group is limited to.\n    ssoGroup # SSO group name to map this authorization group to\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get authorization group list for the user's account."
					},
					"response": []
				},
				{
					"name": "getUserAuthorization",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUserAuthorization {\n  getUserAuthorization {\n    __typename\n    groups # List of the groups this user is a member of.\n    # domainRestrictions # Union of all discovered domain restrictions for the user. If empty, user has no restrictions. Note this list may not necessarily match the domain restrictions for a particular permission. This is simply a complete list of all discovered restrictions for the user--always check the restrictions on a permission against its own list of restrictions.\n    # permissions # Full list of permissions with resolved policy for the user.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get resolved authorization info for the user."
					},
					"response": []
				},
				{
					"name": "search",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query search($objectTypes: [String], $ignoreObjectTypes: [String], $query: String, $offset: Int, $limit: Int, $fullResults: Boolean, $operator: String, $mcon: String, $parentMcon: String, $domainId: UUID, $tagsOnly: Boolean, $includeFacetTypes: [FacetType], $tags: [String], $tagNameQuery: String, $tagValueQuery: String, $resourceIds: [String], $tagFilters: [TagFilterInput]) {\n  search(\n    objectTypes: $objectTypes\n    ignoreObjectTypes: $ignoreObjectTypes\n    query: $query\n    offset: $offset\n    limit: $limit\n    fullResults: $fullResults\n    operator: $operator\n    mcon: $mcon\n    parentMcon: $parentMcon\n    domainId: $domainId\n    tagsOnly: $tagsOnly\n    includeFacetTypes: $includeFacetTypes\n    tags: $tags\n    tagNameQuery: $tagNameQuery\n    tagValueQuery: $tagValueQuery\n    resourceIds: $resourceIds\n    tagFilters: $tagFilters\n  ) {\n    __typename\n    totalHits # Number of results\n    offset # Offset for paginating results\n    # results # List of matching results\n    # facetResults # Facet results\n  }\n}",
								"variables": "{\n\t\"objectTypes\": null,\n\t\"ignoreObjectTypes\": null,\n\t\"query\": null,\n\t\"offset\": null,\n\t\"limit\": null,\n\t\"fullResults\": null,\n\t\"operator\": null,\n\t\"mcon\": null,\n\t\"parentMcon\": null,\n\t\"domainId\": null,\n\t\"tagsOnly\": null,\n\t\"includeFacetTypes\": null,\n\t\"tags\": null,\n\t\"tagNameQuery\": null,\n\t\"tagValueQuery\": null,\n\t\"resourceIds\": null,\n\t\"tagFilters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Search catalog for an entity"
					},
					"response": []
				},
				{
					"name": "getObject",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getObject($mcon: String) {\n  getObject(mcon: $mcon) {\n    __typename\n    mcon\n    resourceId\n    objectId\n    objectType\n    displayName\n    # fieldMetadata\n    # tableMetadata\n    # biMetadata\n    # properties\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMetadata($mcons: [String]) {\n  getMetadata(mcons: $mcons) {\n    __typename\n    mcon\n    resourceId\n    objectId\n    objectType\n    displayName\n    # fieldMetadata\n    # tableMetadata\n    # biMetadata\n    # properties\n  }\n}",
								"variables": "{\n\t\"mcons\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getMetricsV3",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMetricsV3($dwId: UUID, $fullTableId: String, $mcon: String, $metric: String, $startTime: DateTime, $field: String, $endTime: DateTime, $first: Int, $dimensionFilters: [MetricDimensionFilter]) {\n  getMetricsV3(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    metric: $metric\n    startTime: $startTime\n    field: $field\n    endTime: $endTime\n    first: $first\n    dimensionFilters: $dimensionFilters\n  ) {\n    __typename\n    # metrics\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"metric\": null,\n\t\"startTime\": null,\n\t\"field\": null,\n\t\"endTime\": null,\n\t\"first\": null,\n\t\"dimensionFilters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieves field-level metric values in a given time range AND in a given measurement time range"
					},
					"response": []
				},
				{
					"name": "getNonTableMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getNonTableMetrics($dwId: UUID, $mcon: String, $metric: String, $startTime: DateTime, $endTime: DateTime, $first: Int, $dimensionFilters: [MetricDimensionFilter]) {\n  getNonTableMetrics(\n    dwId: $dwId\n    mcon: $mcon\n    metric: $metric\n    startTime: $startTime\n    endTime: $endTime\n    first: $first\n    dimensionFilters: $dimensionFilters\n  ) {\n    __typename\n    # metrics\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"mcon\": null,\n\t\"metric\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"first\": null,\n\t\"dimensionFilters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieves metric values in a given time range AND in a given measurement time range"
					},
					"response": []
				},
				{
					"name": "getAggregatedMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getAggregatedMetrics($dwId: UUID!, $fullTableIdList: [String!], $metric: String!, $startTime: DateTime, $endTime: DateTime, $dateAggregationBucketSize: String) {\n  getAggregatedMetrics(\n    dwId: $dwId\n    fullTableIdList: $fullTableIdList\n    metric: $metric\n    startTime: $startTime\n    endTime: $endTime\n    dateAggregationBucketSize: $dateAggregationBucketSize\n  ) {\n    __typename\n    # metrics\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIdList\": [null],\n\t\"metric\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"dateAggregationBucketSize\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieves field-level metric values in a given time range AND in a given measurement time range"
					},
					"response": []
				},
				{
					"name": "getLatestTableAccessTimestampMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLatestTableAccessTimestampMetrics($dwId: UUID!, $fullTableIdList: [String!], $metric: String!) {\n  getLatestTableAccessTimestampMetrics(\n    dwId: $dwId\n    fullTableIdList: $fullTableIdList\n    metric: $metric\n  ) {\n    __typename\n    # metrics\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIdList\": [null],\n\t\"metric\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieves field-level metric values in a given time range AND in a given measurement time range"
					},
					"response": []
				},
				{
					"name": "getTopCategoryLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTopCategoryLabels($dwId: UUID, $fullTableId: String, $mcon: String, $monitorIds: [String], $field: String, $startTime: DateTime, $limit: Int, $endTime: DateTime) {\n  getTopCategoryLabels(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    monitorIds: $monitorIds\n    field: $field\n    startTime: $startTime\n    limit: $limit\n    endTime: $endTime\n  ) {\n    __typename\n    label\n    rank\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"monitorIds\": null,\n\t\"field\": null,\n\t\"startTime\": null,\n\t\"limit\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the top distribution labels. For use in getFirstSeenDimensionsByLabels"
					},
					"response": []
				},
				{
					"name": "getSegmentedWhereConditionLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSegmentedWhereConditionLabels($monitorUuid: UUID!, $warehouseUuid: UUID!, $fullTableId: String!, $startTime: DateTime!, $endTime: DateTime) {\n  getSegmentedWhereConditionLabels(\n    monitorUuid: $monitorUuid\n    warehouseUuid: $warehouseUuid\n    fullTableId: $fullTableId\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    whereConditions\n  }\n}",
								"variables": "{\n\t\"monitorUuid\": null,\n\t\"warehouseUuid\": null,\n\t\"fullTableId\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get top segmented where_conditions for monitor of sub-type segmented"
					},
					"response": []
				},
				{
					"name": "getFirstSeenDimensionsByLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFirstSeenDimensionsByLabels($dwId: UUID, $fullTableId: String, $mcon: String, $field: String, $labels: [String], $startTime: DateTime, $endTime: DateTime, $dimensionsFilter: [MetricDimensionFilter]) {\n  getFirstSeenDimensionsByLabels(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    field: $field\n    labels: $labels\n    startTime: $startTime\n    endTime: $endTime\n    dimensionsFilter: $dimensionsFilter\n  ) {\n    __typename\n    timestamp\n    label\n    value\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"field\": null,\n\t\"labels\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"dimensionsFilter\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the first measurements of the provided labels across a time range"
					},
					"response": []
				},
				{
					"name": "getFirstAndLastSeenDimensionsByLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFirstAndLastSeenDimensionsByLabels($dwId: UUID, $fullTableId: String, $mcon: String, $field: String, $labels: [String], $startTime: DateTime, $endTime: DateTime, $dimensionsFilter: [MetricDimensionFilter]) {\n  getFirstAndLastSeenDimensionsByLabels(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    field: $field\n    labels: $labels\n    startTime: $startTime\n    endTime: $endTime\n    dimensionsFilter: $dimensionsFilter\n  ) {\n    __typename\n    timestamp\n    label\n    # values\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"field\": null,\n\t\"labels\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"dimensionsFilter\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the first and last measurements per timestamp of the provided labels across a time range"
					},
					"response": []
				},
				{
					"name": "getDirectLineage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDirectLineage($dwId: UUID, $nodeIds: [String], $mcons: [String], $startTime: DateTime, $endTime: DateTime) {\n  getDirectLineage(\n    dwId: $dwId\n    nodeIds: $nodeIds\n    mcons: $mcons\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    workbookId\n    friendlyName\n    contentUrl\n    ownerId\n    projectId\n    projectName\n    created\n    updated\n    totalViews\n    workbookCreators\n    viewId\n    category # Node type\n    mcon # Monte Carlo object name\n    name # Object name (table name, report name, etc)\n    displayName # Friendly display name\n    tableId\n    dataSet\n    nodeId # Lineage node id, to be deprecated in favor of MCONs\n    resource # Resource containing this object (warehouse, Tableau account, etc)\n    sampling # A subset of the nodes that were collapsed into a node, only present on nodes of type collapsed-etl or collapsed-ext\n    # downstream\n    # upstream\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"nodeIds\": null,\n\t\"mcons\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get directly upstream and downstream nodes"
					},
					"response": []
				},
				{
					"name": "getDownstreamBi",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDownstreamBi($dwId: UUID, $nodeIds: [String], $startTime: DateTime, $endTime: DateTime) {\n  getDownstreamBi(\n    dwId: $dwId\n    nodeIds: $nodeIds\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    nodeId\n    fullTableId\n    # downstreamBi\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"nodeIds\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getDownstreamImpactRadiusSummary",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDownstreamImpactRadiusSummary($mcons: [String!]) {\n  getDownstreamImpactRadiusSummary(mcons: $mcons) {\n    __typename\n    totalUsersAffected # Number of users affected\n    totalReportsAffected # Number of reports affected\n  }\n}",
								"variables": "{\n\t\"mcons\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getDownstreamReports",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDownstreamReports($mcons: [String!], $nameMatcher: String, $reportTypes: [String], $limit: Int, $offset: Int, $sortBy: String, $sortDesc: Boolean) {\n  getDownstreamReports(\n    mcons: $mcons\n    nameMatcher: $nameMatcher\n    reportTypes: $reportTypes\n    limit: $limit\n    offset: $offset\n    sortBy: $sortBy\n    sortDesc: $sortDesc\n  ) {\n    __typename\n    # downstreamReports # List of downstream reports\n    limit # Limit results returned\n    offset # Offset when paging\n    hasNextPage # Whether more pages of results exist. Used for pagination.\n  }\n}",
								"variables": "{\n\t\"mcons\": [null],\n\t\"nameMatcher\": null,\n\t\"reportTypes\": null,\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"sortBy\": null,\n\t\"sortDesc\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets downstream reports for a list of tables."
					},
					"response": []
				},
				{
					"name": "getDownstreamReportOwners",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDownstreamReportOwners($mcons: [String!], $limit: Int, $offset: Int) {\n  getDownstreamReportOwners(mcons: $mcons, limit: $limit, offset: $offset) {\n    __typename\n    ownerIds # Owner ID of a BI report\n    hasNextPage # Whether more pages of results exist. Used for pagination.\n    limit # Limit results returned\n    offset # Offset when paging\n  }\n}",
								"variables": "{\n\t\"mcons\": [null],\n\t\"limit\": null,\n\t\"offset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets owners of downstream reports for a list of tables."
					},
					"response": []
				},
				{
					"name": "getDownstreamReportTypes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDownstreamReportTypes($mcon: String, $mcons: [String]) {\n  getDownstreamReportTypes(mcon: $mcon, mcons: $mcons) {\n    __typename\n    downstreamReportTypes # List of distinct downstream report types.\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"mcons\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets all report types of downstream reports for a table."
					},
					"response": []
				},
				{
					"name": "getTableLineage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTableLineage($mcon: String!, $direction: String!, $hops: Int, $startTime: DateTime, $endTime: DateTime) {\n  getTableLineage(\n    mcon: $mcon\n    direction: $direction\n    hops: $hops\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    # baseNode # This is the base node for which lineage is fetched\n    # connectedNodes # List of nodes connected to the base node. This could be nodes that are multiple hops away from the base node in the graph in cases where nodes at multiple hops were queried.\n    # flattenedEdges # Each entry is an mcon and a list of mcons it is directly connected to\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"direction\": null,\n\t\"hops\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets the lineage for a table up to specified number of hops in the lineage graph."
					},
					"response": []
				},
				{
					"name": "getExternalSourcePathsSample",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getExternalSourcePathsSample($mcon: String!, $maxResults: Int) {\n  getExternalSourcePathsSample(mcon: $mcon, maxResults: $maxResults) {\n    __typename\n    sources # List of unique sources\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"maxResults\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets sample of table sources, typically external files"
					},
					"response": []
				},
				{
					"name": "getTableauWorkbookCount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTableauWorkbookCount($biContainerId: UUID!) {\n  getTableauWorkbookCount(biContainerId: $biContainerId) {\n    __typename\n    workbookCount # Total number of workbooks in the Tableau instance.\n  }\n}",
								"variables": "{\n\t\"biContainerId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets the number of workbooks in a Tableau instance."
					},
					"response": []
				},
				{
					"name": "getQueryList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryList($queryType: String!, $mcon: String!, $startTime: DateTime!, $endTime: DateTime!, $userName: String, $limit: Int, $offset: Int) {\n  getQueryList(\n    queryType: $queryType\n    mcon: $mcon\n    startTime: $startTime\n    endTime: $endTime\n    userName: $userName\n    limit: $limit\n    offset: $offset\n  ) {\n    __typename\n    # queries\n    # queriesByType\n    offset\n  }\n}",
								"variables": "{\n\t\"queryType\": null,\n\t\"mcon\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"userName\": null,\n\t\"limit\": null,\n\t\"offset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets the queries on this table according to query type"
					},
					"response": []
				},
				{
					"name": "getQueryById",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryById($queryId: String!, $timestamp: DateTime!, $queryFormat: String) {\n  getQueryById(\n    queryId: $queryId\n    timestamp: $timestamp\n    queryFormat: $queryFormat\n  ) {\n    __typename\n    queryId\n    userName\n    timestamp\n    query\n    sourceDisplayName\n    destinationDisplayName\n  }\n}",
								"variables": "{\n\t\"queryId\": null,\n\t\"timestamp\": null,\n\t\"queryFormat\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets the query by query ID"
					},
					"response": []
				},
				{
					"name": "getQueryByQueryHash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryByQueryHash($queryHash: String!, $day: Date!, $queryFormat: String) {\n  getQueryByQueryHash(queryHash: $queryHash, day: $day, queryFormat: $queryFormat) {\n    __typename\n    queryId\n    userName\n    timestamp\n    query\n    sourceDisplayName\n    destinationDisplayName\n  }\n}",
								"variables": "{\n\t\"queryHash\": null,\n\t\"day\": null,\n\t\"queryFormat\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Gets the query by query hash"
					},
					"response": []
				},
				{
					"name": "getQueryDataByQueryHash",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryDataByQueryHash($queryHash: String!, $day: Date!, $limit: Int, $offset: Int) {\n  getQueryDataByQueryHash(\n    queryHash: $queryHash\n    day: $day\n    limit: $limit\n    offset: $offset\n  ) {\n    __typename\n    # queryData\n    # queries\n    offset\n  }\n}",
								"variables": "{\n\t\"queryHash\": null,\n\t\"day\": null,\n\t\"limit\": null,\n\t\"offset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Fetch query metadata for a single query for all daily occurrences"
					},
					"response": []
				},
				{
					"name": "getQueryData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryData($queryId: String, $queryHash: String, $day: Date!, $limit: Int, $offset: Int, $groupId: String) {\n  getQueryData(\n    queryId: $queryId\n    queryHash: $queryHash\n    day: $day\n    limit: $limit\n    offset: $offset\n    groupId: $groupId\n  ) {\n    __typename\n    # queryData\n    # queries\n    offset\n  }\n}",
								"variables": "{\n\t\"queryId\": null,\n\t\"queryHash\": null,\n\t\"day\": null,\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"groupId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Fetch query metadata for a single query for all daily occurrences"
					},
					"response": []
				},
				{
					"name": "getQueryLogHashesThatAffectTheseTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryLogHashesThatAffectTheseTables($dwId: UUID, $fullTableIds: [String], $mcons: [String], $limit: Int, $offset: Int, $startTime: DateTime, $endTime: DateTime, $users: [String], $queryCharacters: Int) {\n  getQueryLogHashesThatAffectTheseTables(\n    dwId: $dwId\n    fullTableIds: $fullTableIds\n    mcons: $mcons\n    limit: $limit\n    offset: $offset\n    startTime: $startTime\n    endTime: $endTime\n    users: $users\n    queryCharacters: $queryCharacters\n  ) {\n    __typename\n    fullTableId\n    offset\n    # queryHashes\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIds\": null,\n\t\"mcons\": null,\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"users\": null,\n\t\"queryCharacters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get query log aggregates (AKA updates to these tables)"
					},
					"response": []
				},
				{
					"name": "getQueryLogHashesOnTheseTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getQueryLogHashesOnTheseTables($dwId: UUID, $fullTableIds: [String], $mcons: [String], $limit: Int, $offset: Int, $startTime: DateTime, $endTime: DateTime, $users: [String], $queryCharacters: Int) {\n  getQueryLogHashesOnTheseTables(\n    dwId: $dwId\n    fullTableIds: $fullTableIds\n    mcons: $mcons\n    limit: $limit\n    offset: $offset\n    startTime: $startTime\n    endTime: $endTime\n    users: $users\n    queryCharacters: $queryCharacters\n  ) {\n    __typename\n    fullTableId\n    offset\n    # queryHashes\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIds\": null,\n\t\"mcons\": null,\n\t\"limit\": null,\n\t\"offset\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"users\": null,\n\t\"queryCharacters\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get query log aggregates (AKA queries on these tables)"
					},
					"response": []
				},
				{
					"name": "getRelatedUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getRelatedUsers($mcon: String!, $startTime: DateTime, $endTime: DateTime, $queryType: String) {\n  getRelatedUsers(\n    mcon: $mcon\n    startTime: $startTime\n    endTime: $endTime\n    queryType: $queryType\n  ) {\n    __typename\n    user\n    count\n  }\n}",
								"variables": "{\n\t\"mcon\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"queryType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get users related to object"
					},
					"response": []
				},
				{
					"name": "getLineageNodePropertiesV0",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodePropertiesV0($dwId: UUID, $nodeIds: [String], $mcons: [String]) {\n  getLineageNodePropertiesV0(dwId: $dwId, nodeIds: $nodeIds, mcons: $mcons) {\n    __typename\n    workbookId\n    friendlyName\n    contentUrl\n    ownerId\n    projectId\n    projectName\n    created\n    updated\n    totalViews\n    workbookCreators\n    viewId\n    category # Node type\n    mcon # Monte Carlo object name\n    name # Object name (table name, report name, etc)\n    displayName # Friendly display name\n    tableId\n    dataSet\n    nodeId # Lineage node id, to be deprecated in favor of MCONs\n    resource # Resource containing this object (warehouse, Tableau account, etc)\n    sampling # A subset of the nodes that were collapsed into a node, only present on nodes of type collapsed-etl or collapsed-ext\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"nodeIds\": null,\n\t\"mcons\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get properties (metadata) from nodes (DEPRECATED, use GetMetadata instead!)"
					},
					"response": []
				},
				{
					"name": "getLineageNodeProperties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getLineageNodeProperties($dwId: UUID, $nodeIds: [String], $mcons: [String]) {\n  getLineageNodeProperties(dwId: $dwId, nodeIds: $nodeIds, mcons: $mcons) {\n    __typename\n    workbookId\n    friendlyName\n    contentUrl\n    ownerId\n    projectId\n    projectName\n    created\n    updated\n    totalViews\n    workbookCreators\n    viewId\n    category # Node type\n    mcon # Monte Carlo object name\n    name # Object name (table name, report name, etc)\n    displayName # Friendly display name\n    tableId\n    dataSet\n    nodeId # Lineage node id, to be deprecated in favor of MCONs\n    resource # Resource containing this object (warehouse, Tableau account, etc)\n    sampling # A subset of the nodes that were collapsed into a node, only present on nodes of type collapsed-etl or collapsed-ext\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"nodeIds\": null,\n\t\"mcons\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get properties (metadata) from nodes (DEPRECATED, use GetMetadata instead!)"
					},
					"response": []
				},
				{
					"name": "getRecentTimestamp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getRecentTimestamp($dwId: UUID, $fullTableId: String, $mcon: String) {\n  getRecentTimestamp(dwId: $dwId, fullTableId: $fullTableId, mcon: $mcon) {\n    __typename\n    fieldName\n    timestamp\n    isTimeAxis\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get most recent timestamps for time axis fields (AKA live freshness)"
					},
					"response": []
				},
				{
					"name": "getHourlyRowCounts",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getHourlyRowCounts($dwId: UUID, $fullTableId: String, $mcon: String, $intervalDays: Int, $fieldName: String) {\n  getHourlyRowCounts(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    intervalDays: $intervalDays\n    fieldName: $fieldName\n  ) {\n    __typename\n    # hourlyCounts\n    # timeAxis\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"intervalDays\": null,\n\t\"fieldName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get hourly row counts by a time axis"
					},
					"response": []
				},
				{
					"name": "getDigraph",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDigraph($metadataVersion: String) {\n  getDigraph(metadataVersion: $metadataVersion) {\n    __typename\n    vertices\n    edges\n  }\n}",
								"variables": "{\n\t\"metadataVersion\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getPipelineFreshnessV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getPipelineFreshnessV2($dwId: UUID, $fullTableIds: [String], $mcons: [String], $startTime: DateTime, $endTime: DateTime) {\n  getPipelineFreshnessV2(\n    dwId: $dwId\n    fullTableIds: $fullTableIds\n    mcons: $mcons\n    startTime: $startTime\n    endTime: $endTime\n  ) {\n    __typename\n    # metricValuesByTable\n    isPartialDateRange\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIds\": null,\n\t\"mcons\": null,\n\t\"startTime\": null,\n\t\"endTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get latest freshness for multiple tables"
					},
					"response": []
				},
				{
					"name": "getCustomSqlOutputSample",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCustomSqlOutputSample($dwId: UUID!, $jobExecutionUuid: UUID!) {\n  getCustomSqlOutputSample(dwId: $dwId, jobExecutionUuid: $jobExecutionUuid) {\n    __typename\n    columns\n    rows\n    samplingDisabled\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"jobExecutionUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve output sample for custom SQL job execution"
					},
					"response": []
				},
				{
					"name": "getMetricSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getMetricSampling($dwId: UUID, $fullTableId: String, $mcon: String, $timeAxis: String, $field: String, $metric: String, $startTime: DateTime, $endTime: DateTime, $limit: Int, $dryRun: Boolean, $monitorUuid: UUID) {\n  getMetricSampling(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    timeAxis: $timeAxis\n    field: $field\n    metric: $metric\n    startTime: $startTime\n    endTime: $endTime\n    limit: $limit\n    dryRun: $dryRun\n    monitorUuid: $monitorUuid\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"timeAxis\": null,\n\t\"field\": null,\n\t\"metric\": null,\n\t\"startTime\": null,\n\t\"endTime\": null,\n\t\"limit\": null,\n\t\"dryRun\": null,\n\t\"monitorUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get sample rows for metrics"
					},
					"response": []
				},
				{
					"name": "getFhSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFhSampling($monitorUuid: UUID!, $eventCreatedTime: DateTime!, $field: String!, $metric: String!, $dimension: String, $dryRun: Boolean, $limit: Int) {\n  getFhSampling(\n    monitorUuid: $monitorUuid\n    eventCreatedTime: $eventCreatedTime\n    field: $field\n    metric: $metric\n    dimension: $dimension\n    dryRun: $dryRun\n    limit: $limit\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n  }\n}",
								"variables": "{\n\t\"monitorUuid\": null,\n\t\"eventCreatedTime\": null,\n\t\"field\": null,\n\t\"metric\": null,\n\t\"dimension\": null,\n\t\"dryRun\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generates and/or runs a FH sampling query"
					},
					"response": []
				},
				{
					"name": "getDtSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDtSampling($monitorUuid: UUID!, $startTime: DateTime, $dimension: String, $dryRun: Boolean, $limit: Int) {\n  getDtSampling(\n    monitorUuid: $monitorUuid\n    startTime: $startTime\n    dimension: $dimension\n    dryRun: $dryRun\n    limit: $limit\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n  }\n}",
								"variables": "{\n\t\"monitorUuid\": null,\n\t\"startTime\": null,\n\t\"dimension\": null,\n\t\"dryRun\": null,\n\t\"limit\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generates and/or runs a Dimension Tracking investigation query"
					},
					"response": []
				},
				{
					"name": "getFhReproductionQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFhReproductionQuery($monitorUuid: UUID!, $eventCreatedTime: DateTime!, $field: String!, $metric: String!, $dimension: String, $dryRun: Boolean) {\n  getFhReproductionQuery(\n    monitorUuid: $monitorUuid\n    eventCreatedTime: $eventCreatedTime\n    field: $field\n    metric: $metric\n    dimension: $dimension\n    dryRun: $dryRun\n  ) {\n    __typename\n    query\n    hasError\n  }\n}",
								"variables": "{\n\t\"monitorUuid\": null,\n\t\"eventCreatedTime\": null,\n\t\"field\": null,\n\t\"metric\": null,\n\t\"dimension\": null,\n\t\"dryRun\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generates a SQL query that will reproduce the anomalous data on a table"
					},
					"response": []
				},
				{
					"name": "getDtReproductionQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDtReproductionQuery($monitorUuid: UUID!, $eventCreatedTime: DateTime!, $field: String!, $fieldVal: String!, $dimension: String, $dryRun: Boolean) {\n  getDtReproductionQuery(\n    monitorUuid: $monitorUuid\n    eventCreatedTime: $eventCreatedTime\n    field: $field\n    fieldVal: $fieldVal\n    dimension: $dimension\n    dryRun: $dryRun\n  ) {\n    __typename\n    query\n    hasError\n  }\n}",
								"variables": "{\n\t\"monitorUuid\": null,\n\t\"eventCreatedTime\": null,\n\t\"field\": null,\n\t\"fieldVal\": null,\n\t\"dimension\": null,\n\t\"dryRun\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generates a SQL query that will reproduce the anomalous data on a table"
					},
					"response": []
				},
				{
					"name": "runCustomQuery",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query runCustomQuery($dwId: UUID, $query: String, $variables: JSONString, $queryResultType: QueryResultType) {\n  runCustomQuery(\n    dwId: $dwId\n    query: $query\n    variables: $variables\n    queryResultType: $queryResultType\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n    error\n    samplingDisabled\n    idempotentStatus\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"query\": null,\n\t\"variables\": null,\n\t\"queryResultType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "testSqlQueryPart",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testSqlQueryPart($dwId: UUID, $fullTableId: String, $mcon: String, $queryPart: String) {\n  testSqlQueryPart(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    queryPart: $queryPart\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n    error\n    samplingDisabled\n    idempotentStatus\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"queryPart\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test part of query"
					},
					"response": []
				},
				{
					"name": "testSqlQueryWhereExpression",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testSqlQueryWhereExpression($dwId: UUID, $fullTableId: String, $mcon: String, $whereExpression: String) {\n  testSqlQueryWhereExpression(\n    dwId: $dwId\n    fullTableId: $fullTableId\n    mcon: $mcon\n    whereExpression: $whereExpression\n  ) {\n    __typename\n    columns\n    rows\n    query\n    hasError\n    error\n    samplingDisabled\n    idempotentStatus\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"whereExpression\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test WHERE expression"
					},
					"response": []
				},
				{
					"name": "getTableStats",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTableStats($dwId: UUID, $fullTableIds: [String], $mcons: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int) {\n  getTableStats(\n    dwId: $dwId\n    fullTableIds: $fullTableIds\n    mcons: $mcons\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableIds\": null,\n\t\"mcons\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getResource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getResource($uuid: UUID, $name: String) {\n  getResource(uuid: $uuid, name: $name) {\n    __typename\n    uuid # The resource id\n    # account # Customer account\n    name # The name of the resource\n    type # The type of the resource\n    isUserProvided # If the resource was created / updated by Monte Carlo or a user\n    isDefault # If the resource is the account's default resource\n    createdTime # When the resource was first created\n    # lastUpdateUser # Who last updated the resource\n    lastUpdateTime # When the resource was last updated\n    # collectionPreferences\n    id # The ID of the object.\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve a specific resource"
					},
					"response": []
				},
				{
					"name": "getResources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getResources {\n  getResources {\n    __typename\n    uuid # The resource id\n    # account # Customer account\n    name # The name of the resource\n    type # The type of the resource\n    isUserProvided # If the resource was created / updated by Monte Carlo or a user\n    isDefault # If the resource is the account's default resource\n    createdTime # When the resource was first created\n    # lastUpdateUser # Who last updated the resource\n    lastUpdateTime # When the resource was last updated\n    # collectionPreferences\n    id # The ID of the object.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve all resources in an account"
					},
					"response": []
				},
				{
					"name": "getTableFieldsImportance",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTableFieldsImportance($mcon: String!) {\n  getTableFieldsImportance(mcon: $mcon) {\n    __typename\n    # tableFields\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getDataMaintenanceEntries",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDataMaintenanceEntries($dwId: UUID!) {\n  getDataMaintenanceEntries(dwId: $dwId) {\n    __typename\n    id\n    accountUuid\n    resourceUuid\n    database\n    dataset\n    fullTableId\n    maintenanceType\n    startTime\n    endTime\n  }\n}",
								"variables": "{\n\t\"dwId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Fetch data maintenance entries for warehouse"
					},
					"response": []
				},
				{
					"name": "getWildcardTemplates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getWildcardTemplates($dwId: UUID!) {\n  getWildcardTemplates(dwId: $dwId) {\n    __typename\n    # templates\n  }\n}",
								"variables": "{\n\t\"dwId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "List of templates used for aggregating wildcard tables"
					},
					"response": []
				},
				{
					"name": "getCommonFields",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCommonFields($mcons: [String]) {\n  getCommonFields(mcons: $mcons)\n}",
								"variables": "{\n\t\"mcons\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get fields that are common across a set of tables."
					},
					"response": []
				},
				{
					"name": "getUserSettings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUserSettings($keys: [String!]) {\n  getUserSettings(keys: $keys) {\n    __typename\n    id # The ID of the object.\n    # user # Associated user\n    key\n    value\n    createdTime # When the user-specific setting was first created\n    updatedTime # When the user-specific setting was last updated\n    description # A brief description of the user settings.\n  }\n}",
								"variables": "{\n\t\"keys\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get user-specific settings. Return only the settings that have value."
					},
					"response": []
				},
				{
					"name": "getUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUser {\n  getUser {\n    __typename\n    id # The ID of the object.\n    cognitoUserId\n    email\n    firstName\n    lastName\n    displayName # Text to use when displaying the user.\n    state\n    createdOn\n    isSso\n    ssoGroups # Groups provided by the IdP in the last login\n    ssoGroupsUpdatedAt # Last time the SSO groups where updated\n    tokenId # For role=service accounts, the associated API token ID\n    # notificationSettingsAdded # Creator of the notification\n    # notificationSettingsModified # User who last updated this notification\n    # userSettings # Associated user\n    # invitees\n    # monitorLabelsCreated # Monitor label creator\n    # eventmodelSet\n    # incidentReactionsCreated\n    # incidentReactionsModified\n    # userComments\n    # creator # Who added the monitor\n    # metricmonitoringmodelSet # Who was the last user to update the monitor\n    # combinedtablestatsmodelSet\n    # objectProperties # Who last updated the property\n    # catalogObjectMetadata # Who last updated the object\n    # docs # Who last updated the object\n    # docAuthors # Associated user\n    # lineageNodes # Who last updated the node\n    # lineageEdges # Who last updated the edge\n    # resources # Who last updated the resource\n    # lineageBlockPatterns # Who last updated the regexp\n    # lineageReplRules # Who last updated the replacement rule\n    # monteCarloConfigTemplates\n    # domainCreatedBy\n    # slackCredentialsV2 # User that installed the Slack app\n    # customUsers # Who last updated the object\n    # unifiedUsers # Associated MC user\n    # lastUpdatedUnifiedUsers # Who last updated the object\n    # collectionPreferenceCreatedBy\n    # collectionPreferenceLastUpdatedBy\n    # collectionPreferenceDeletedBy\n    # account\n    role # Only used to identify system users. Auth groups supersede this.\n    # auth # User's aggregate authorization policy.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getUserById",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUserById {\n  getUserById {\n    __typename\n    id # The ID of the object.\n    cognitoUserId\n    email\n    firstName\n    lastName\n    displayName # Text to use when displaying the user.\n    state\n    createdOn\n    isSso\n    ssoGroups # Groups provided by the IdP in the last login\n    ssoGroupsUpdatedAt # Last time the SSO groups where updated\n    tokenId # For role=service accounts, the associated API token ID\n    # notificationSettingsAdded # Creator of the notification\n    # notificationSettingsModified # User who last updated this notification\n    # userSettings # Associated user\n    # invitees\n    # monitorLabelsCreated # Monitor label creator\n    # eventmodelSet\n    # incidentReactionsCreated\n    # incidentReactionsModified\n    # userComments\n    # creator # Who added the monitor\n    # metricmonitoringmodelSet # Who was the last user to update the monitor\n    # combinedtablestatsmodelSet\n    # objectProperties # Who last updated the property\n    # catalogObjectMetadata # Who last updated the object\n    # docs # Who last updated the object\n    # docAuthors # Associated user\n    # lineageNodes # Who last updated the node\n    # lineageEdges # Who last updated the edge\n    # resources # Who last updated the resource\n    # lineageBlockPatterns # Who last updated the regexp\n    # lineageReplRules # Who last updated the replacement rule\n    # monteCarloConfigTemplates\n    # domainCreatedBy\n    # slackCredentialsV2 # User that installed the Slack app\n    # customUsers # Who last updated the object\n    # unifiedUsers # Associated MC user\n    # lastUpdatedUnifiedUsers # Who last updated the object\n    # collectionPreferenceCreatedBy\n    # collectionPreferenceLastUpdatedBy\n    # collectionPreferenceDeletedBy\n    # account\n    role # Only used to identify system users. Auth groups supersede this.\n    # auth # User's aggregate authorization policy.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getWarehouse",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getWarehouse($uuid: UUID) {\n  getWarehouse(uuid: $uuid) {\n    __typename\n    id\n    uuid\n    name\n    connectionType\n    credentialsS3Key\n    bqProjectId\n    # account\n    # dataCollector\n    createdOn\n    config\n    # connections\n    # tables\n    # incidents # Warehouse an incident belongs to\n    # events\n    # datasets\n    # muteRule\n    # fivetranDestinations\n    dataSamplingEnabled # Indicates whether the customer has opted out of sampling for the warehouse\n    valueIngestionEnabled # Indicates whether the customer has opted out of value ingestion for the warehouse (opting out of sampling disables this as well)\n    valueBasedThresholdEnabled # Indicates whether rules with value-based thresholds can be created and executed\n    customSqlSamplingSupported # Indicates whether the DC version for this warehouse supports custom SQL sampling\n    customSqlSamplingEnabled # Indicates whether output of qualifying custom SQL rules in this warehouse will be sampled\n    supportsReproductionQueries\n    supportsSampling\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getCollectionProperties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCollectionProperties($region: String!) {\n  getCollectionProperties(region: $region) {\n    __typename\n    crossAccountExternalId # External id for cross account IAM role\n    customerAccountToken # Customer account token (unique per data collector)\n    codeBucket # S3 bucket containing data collector code\n    codeVersion # Data collector code version\n    platformAwsAccountId # Monte Carlo AWS account id\n    dockerImageUri # URI of the docker image for the data colletor\n    # platformRegionDetails # Region-specific properties\n  }\n}",
								"variables": "{\n\t\"region\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get infrastructure properties for a new data collector deployment"
					},
					"response": []
				},
				{
					"name": "getTable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTable($dwId: UUID, $fullTableId: String, $mcon: String) {\n  getTable(dwId: $dwId, fullTableId: $fullTableId, mcon: $mcon) {\n    __typename\n    id # The ID of the object.\n    tableId\n    fullTableId\n    # warehouse\n    discoveredTime\n    friendlyName\n    description\n    location\n    projectName\n    dataset\n    tableType\n    isEncrypted\n    createdTime\n    lastModified\n    viewQuery\n    labels\n    path\n    priority\n    tracked\n    status\n    freshnessAnomaly\n    sizeAnomaly\n    freshnessSizeAnomaly\n    metricAnomaly\n    dynamicTable\n    isDeleted\n    lastObserved\n    isExcluded\n    dataProvider\n    mcon # The table's MCON (MC Object Name)\n    # anomalies\n    # tags\n    # versions\n    # events\n    # monitors # Table related to monitor\n    # dbtNodes # Associated table\n    # dbtRunSteps # Associated table\n    # fivetranconnectormodelSet\n    # usageStats # Section describing various table usage stats\n    # thresholds # Section describing various anomaly thresholds for the table\n    # getThresholds # Section describing various anomaly thresholds for the table\n    schemaChangeCount\n    statusScalar\n    nodeId\n    isPartialDateRange\n    # lastUpdates # List of table updates\n    # lastUpdatesV2 # List of table updates\n    # totalRowCounts # List of total row count values for the table\n    # totalByteCounts # List of total byte count values for the table\n    # writeThroughput # List of latest write throughput in bytes, at most 10000 data points.\n    # objectsDeleted # List of latest objects deleted events, at most 10000 data points.\n    # maintenanceWindows # List of windows in which the training is ignored\n    # checkTableMetricsExistence # List of metric name and whether they exist or not on a table\n    isMuted # No incidents will be created for this table if muted.\n    mutedEventTypes # Muting is active for the specified event types.\n    # tableStats # Stats for the table\n    # objectProperties\n    isTransitioningDataProvider\n    # tableCapabilities # Capabilities for the table\n    # partitionKeys # Partition key information\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"fullTableId\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get information about a table"
					},
					"response": []
				},
				{
					"name": "getTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTables($dwId: UUID, $search: String, $status: [String], $domainId: UUID, $before: String, $after: String, $first: Int, $last: Int, $tableId: String, $fullTableId: String, $warehouse: ID, $discoveredTime: DateTime, $friendlyName: String, $description: String, $location: String, $projectName: String, $dataset: String, $tableType: String, $isEncrypted: Boolean, $createdTime: DateTime, $lastModified: DateTime, $viewQuery: String, $path: String, $priority: Int, $tracked: Boolean, $freshnessAnomaly: Boolean, $sizeAnomaly: Boolean, $freshnessSizeAnomaly: Boolean, $metricAnomaly: Boolean, $dynamicTable: Boolean, $isDeleted: Boolean, $lastObserved: DateTime, $isExcluded: Boolean, $dataProvider: String, $mcon: String, $lastObserved_Gt: DateTime, $orderBy: String) {\n  getTables(\n    dwId: $dwId\n    search: $search\n    status: $status\n    domainId: $domainId\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    tableId: $tableId\n    fullTableId: $fullTableId\n    warehouse: $warehouse\n    discoveredTime: $discoveredTime\n    friendlyName: $friendlyName\n    description: $description\n    location: $location\n    projectName: $projectName\n    dataset: $dataset\n    tableType: $tableType\n    isEncrypted: $isEncrypted\n    createdTime: $createdTime\n    lastModified: $lastModified\n    viewQuery: $viewQuery\n    path: $path\n    priority: $priority\n    tracked: $tracked\n    freshnessAnomaly: $freshnessAnomaly\n    sizeAnomaly: $sizeAnomaly\n    freshnessSizeAnomaly: $freshnessSizeAnomaly\n    metricAnomaly: $metricAnomaly\n    dynamicTable: $dynamicTable\n    isDeleted: $isDeleted\n    lastObserved: $lastObserved\n    isExcluded: $isExcluded\n    dataProvider: $dataProvider\n    mcon: $mcon\n    lastObserved_Gt: $lastObserved_Gt\n    orderBy: $orderBy\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"search\": null,\n\t\"status\": null,\n\t\"domainId\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"tableId\": null,\n\t\"fullTableId\": null,\n\t\"warehouse\": null,\n\t\"discoveredTime\": null,\n\t\"friendlyName\": null,\n\t\"description\": null,\n\t\"location\": null,\n\t\"projectName\": null,\n\t\"dataset\": null,\n\t\"tableType\": null,\n\t\"isEncrypted\": null,\n\t\"createdTime\": null,\n\t\"lastModified\": null,\n\t\"viewQuery\": null,\n\t\"path\": null,\n\t\"priority\": null,\n\t\"tracked\": null,\n\t\"freshnessAnomaly\": null,\n\t\"sizeAnomaly\": null,\n\t\"freshnessSizeAnomaly\": null,\n\t\"metricAnomaly\": null,\n\t\"dynamicTable\": null,\n\t\"isDeleted\": null,\n\t\"lastObserved\": null,\n\t\"isExcluded\": null,\n\t\"dataProvider\": null,\n\t\"mcon\": null,\n\t\"lastObserved_Gt\": null,\n\t\"orderBy\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get tables in account"
					},
					"response": []
				},
				{
					"name": "getTablesHealth",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTablesHealth($dwId: UUID, $search: String, $domainId: UUID, $tableMcons: [String], $tableContains: [String], $tagsContains: [String], $tagKeyValuePairs: [TagKeyValuePairInput], $keyAssetsOnly: Boolean, $hasIncidentsOnly: Boolean, $hasIncidentsStartTime: DateTime, $hasIncidentsEndTime: DateTime, $hasIncidentsIncludeFeedback: [String], $hasIncidentsExcludeFeedback: [String], $hasIncidentsIncludeNormalized: Boolean, $hasIncidentsSeverities: [String], $incidentCategories: [IncidentCategory], $before: String, $after: String, $first: Int, $last: Int, $tableId: String, $fullTableId: String, $warehouse: ID, $discoveredTime: DateTime, $friendlyName: String, $description: String, $location: String, $projectName: String, $dataset: String, $tableType: String, $isEncrypted: Boolean, $createdTime: DateTime, $lastModified: DateTime, $viewQuery: String, $path: String, $priority: Int, $tracked: Boolean, $freshnessAnomaly: Boolean, $sizeAnomaly: Boolean, $freshnessSizeAnomaly: Boolean, $metricAnomaly: Boolean, $dynamicTable: Boolean, $isDeleted: Boolean, $lastObserved: DateTime, $isExcluded: Boolean, $dataProvider: String, $mcon: String, $orderBy: String) {\n  getTablesHealth(\n    dwId: $dwId\n    search: $search\n    domainId: $domainId\n    tableMcons: $tableMcons\n    tableContains: $tableContains\n    tagsContains: $tagsContains\n    tagKeyValuePairs: $tagKeyValuePairs\n    keyAssetsOnly: $keyAssetsOnly\n    hasIncidentsOnly: $hasIncidentsOnly\n    hasIncidentsStartTime: $hasIncidentsStartTime\n    hasIncidentsEndTime: $hasIncidentsEndTime\n    hasIncidentsIncludeFeedback: $hasIncidentsIncludeFeedback\n    hasIncidentsExcludeFeedback: $hasIncidentsExcludeFeedback\n    hasIncidentsIncludeNormalized: $hasIncidentsIncludeNormalized\n    hasIncidentsSeverities: $hasIncidentsSeverities\n    incidentCategories: $incidentCategories\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    tableId: $tableId\n    fullTableId: $fullTableId\n    warehouse: $warehouse\n    discoveredTime: $discoveredTime\n    friendlyName: $friendlyName\n    description: $description\n    location: $location\n    projectName: $projectName\n    dataset: $dataset\n    tableType: $tableType\n    isEncrypted: $isEncrypted\n    createdTime: $createdTime\n    lastModified: $lastModified\n    viewQuery: $viewQuery\n    path: $path\n    priority: $priority\n    tracked: $tracked\n    freshnessAnomaly: $freshnessAnomaly\n    sizeAnomaly: $sizeAnomaly\n    freshnessSizeAnomaly: $freshnessSizeAnomaly\n    metricAnomaly: $metricAnomaly\n    dynamicTable: $dynamicTable\n    isDeleted: $isDeleted\n    lastObserved: $lastObserved\n    isExcluded: $isExcluded\n    dataProvider: $dataProvider\n    mcon: $mcon\n    orderBy: $orderBy\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n    totalCount # Total count of elements in the result set.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"search\": null,\n\t\"domainId\": null,\n\t\"tableMcons\": null,\n\t\"tableContains\": null,\n\t\"tagsContains\": null,\n\t\"tagKeyValuePairs\": null,\n\t\"keyAssetsOnly\": null,\n\t\"hasIncidentsOnly\": null,\n\t\"hasIncidentsStartTime\": null,\n\t\"hasIncidentsEndTime\": null,\n\t\"hasIncidentsIncludeFeedback\": null,\n\t\"hasIncidentsExcludeFeedback\": null,\n\t\"hasIncidentsIncludeNormalized\": null,\n\t\"hasIncidentsSeverities\": null,\n\t\"incidentCategories\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"tableId\": null,\n\t\"fullTableId\": null,\n\t\"warehouse\": null,\n\t\"discoveredTime\": null,\n\t\"friendlyName\": null,\n\t\"description\": null,\n\t\"location\": null,\n\t\"projectName\": null,\n\t\"dataset\": null,\n\t\"tableType\": null,\n\t\"isEncrypted\": null,\n\t\"createdTime\": null,\n\t\"lastModified\": null,\n\t\"viewQuery\": null,\n\t\"path\": null,\n\t\"priority\": null,\n\t\"tracked\": null,\n\t\"freshnessAnomaly\": null,\n\t\"sizeAnomaly\": null,\n\t\"freshnessSizeAnomaly\": null,\n\t\"metricAnomaly\": null,\n\t\"dynamicTable\": null,\n\t\"isDeleted\": null,\n\t\"lastObserved\": null,\n\t\"isExcluded\": null,\n\t\"dataProvider\": null,\n\t\"mcon\": null,\n\t\"orderBy\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get tables health in account"
					},
					"response": []
				},
				{
					"name": "getBqProjects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getBqProjects($credentialsKey: String) {\n  getBqProjects(credentialsKey: $credentialsKey) {\n    __typename\n    fullProjectId\n    friendlyName\n  }\n}",
								"variables": "{\n\t\"credentialsKey\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getSlackOauthUrl",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSlackOauthUrl($slackAppType: SlackAppType) {\n  getSlackOauthUrl(slackAppType: $slackAppType) {\n    __typename\n    url\n  }\n}",
								"variables": "{\n\t\"slackAppType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Returns a Slack OAuth URL"
					},
					"response": []
				},
				{
					"name": "getSlackChannels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSlackChannels($excludeArchived: Boolean, $ignoreCached: Boolean) {\n  getSlackChannels(excludeArchived: $excludeArchived, ignoreCached: $ignoreCached) {\n    __typename\n    # channels\n  }\n}",
								"variables": "{\n\t\"excludeArchived\": null,\n\t\"ignoreCached\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getSlackChannelsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSlackChannelsV2($orderBy: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $name_Iexact: String, $name_Icontains: String, $name_Istartswith: String) {\n  getSlackChannelsV2(\n    orderBy: $orderBy\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    name_Iexact: $name_Iexact\n    name_Icontains: $name_Icontains\n    name_Istartswith: $name_Istartswith\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"orderBy\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"name_Iexact\": null,\n\t\"name_Icontains\": null,\n\t\"name_Istartswith\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getProjects",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getProjects($dwId: UUID, $search: String, $warehouseType: String) {\n  getProjects(dwId: $dwId, search: $search, warehouseType: $warehouseType) {\n    __typename\n    projects\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"search\": null,\n\t\"warehouseType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getDatasetsByUuid",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatasetsByUuid($datasetUuids: [UUID!]) {\n  getDatasetsByUuid(datasetUuids: $datasetUuids) {\n    __typename\n    id # The ID of the object.\n    uuid\n    # warehouse\n    project\n    dataset\n    isMuted # No incidents will be created for this table if muted.\n    tableCount # Number of tables in the dataset\n    mutedEventTypes # Muting is active for the specified event types.\n  }\n}",
								"variables": "{\n\t\"datasetUuids\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get datasets by UUID"
					},
					"response": []
				},
				{
					"name": "getDatasets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatasets($dwId: UUID, $search: String, $allowSearchOnProject: Boolean, $domainId: UUID, $includeTableCount: Boolean, $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $dataset: String) {\n  getDatasets(\n    dwId: $dwId\n    search: $search\n    allowSearchOnProject: $allowSearchOnProject\n    domainId: $domainId\n    includeTableCount: $includeTableCount\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    dataset: $dataset\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"search\": null,\n\t\"allowSearchOnProject\": null,\n\t\"domainId\": null,\n\t\"includeTableCount\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"dataset\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get datasets in the account"
					},
					"response": []
				},
				{
					"name": "getFieldBiLineage",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getFieldBiLineage($fullTableId: String, $fieldName: String, $lastSeenRangeStart: DateTime) {\n  getFieldBiLineage(\n    fullTableId: $fullTableId\n    fieldName: $fieldName\n    lastSeenRangeStart: $lastSeenRangeStart\n  ) {\n    __typename\n    biAccountId\n    biIdentifier\n    biName\n    biType\n    biNodeId\n    lastSeen\n  }\n}",
								"variables": "{\n\t\"fullTableId\": null,\n\t\"fieldName\": null,\n\t\"lastSeenRangeStart\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getEventMutingRules",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEventMutingRules($dwId: UUID) {\n  getEventMutingRules(dwId: $dwId) {\n    __typename\n    id\n    uuid\n    # warehouse\n    ruleType\n    rule\n    isActive\n    createdTime\n    lastUpdateTime\n    eventTypes # List of event types to mute. Mutes all if empty.\n  }\n}",
								"variables": "{\n\t\"dwId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get muting rules in the account"
					},
					"response": []
				},
				{
					"name": "getUsersInAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getUsersInAccount($roles: [String], $search: String, $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $email: String, $firstName: String, $lastName: String, $role: String) {\n  getUsersInAccount(\n    roles: $roles\n    search: $search\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    email: $email\n    firstName: $firstName\n    lastName: $lastName\n    role: $role\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"roles\": null,\n\t\"search\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"email\": null,\n\t\"firstName\": null,\n\t\"lastName\": null,\n\t\"role\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getInvitesInAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getInvitesInAccount($roles: [String], $offset: Int, $before: String, $after: String, $first: Int, $last: Int, $state: String) {\n  getInvitesInAccount(\n    roles: $roles\n    offset: $offset\n    before: $before\n    after: $after\n    first: $first\n    last: $last\n    state: $state\n  ) {\n    __typename\n    # pageInfo # Pagination data for this connection.\n    # edges # Contains the nodes in this connection.\n  }\n}",
								"variables": "{\n\t\"roles\": null,\n\t\"offset\": null,\n\t\"before\": null,\n\t\"after\": null,\n\t\"first\": null,\n\t\"last\": null,\n\t\"state\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getTokenMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getTokenMetadata($index: AccessKeyIndexEnum!, $isServiceApiToken: Boolean) {\n  getTokenMetadata(index: $index, isServiceApiToken: $isServiceApiToken) {\n    __typename\n    id # Token id\n    firstName # First name for the owner of the token\n    lastName # Last name for the owner of the token \n    email # Email for the owner of the token\n    creationTime # When the token was created\n    createdBy # Who created the token\n    expirationTime # When the token is set to expire\n    comment # Any comments or description for the token\n    isServiceApiToken # True if this is an account service token; false if it's a personal token\n    groups # Names of the groups for the API token (for service API tokens).\n  }\n}",
								"variables": "{\n\t\"index\": null,\n\t\"isServiceApiToken\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve access token metadata for current user or account"
					},
					"response": []
				},
				{
					"name": "getIntegrationKeys",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getIntegrationKeys {\n  getIntegrationKeys {\n    __typename\n    id # Key id\n    description # Key description\n    scope # Key scope (integration it can be used for)\n    # warehouses # Warehouses associated with key\n    createdTime # Time key was created\n    # createdBy # Who created the key\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve integration keys in the current user's account"
					},
					"response": []
				},
				{
					"name": "testExistingConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testExistingConnection($connectionId: UUID) {\n  testExistingConnection(connectionId: $connectionId) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test an existing connection's credentials against the account's data collector"
					},
					"response": []
				},
				{
					"name": "testTelnetConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testTelnetConnection($host: String, $port: Int, $timeout: Int, $dcId: UUID) {\n  testTelnetConnection(host: $host, port: $port, timeout: $timeout, dcId: $dcId) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"host\": null,\n\t\"port\": null,\n\t\"timeout\": null,\n\t\"dcId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Checks if telnet connection is usable."
					},
					"response": []
				},
				{
					"name": "testTcpOpenConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testTcpOpenConnection($host: String, $port: Int, $timeout: Int, $dcId: UUID) {\n  testTcpOpenConnection(host: $host, port: $port, timeout: $timeout, dcId: $dcId) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"host\": null,\n\t\"port\": null,\n\t\"timeout\": null,\n\t\"dcId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Tests if a destination exists and accepts requests. Opens a TCP Socket to a specific port."
					},
					"response": []
				},
				{
					"name": "testNotificationIntegration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testNotificationIntegration($settingId: UUID) {\n  testNotificationIntegration(settingId: $settingId)\n}",
								"variables": "{\n\t\"settingId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Tests an integration is reachable by sending a sample alert. Note - rules are not evaluated."
					},
					"response": []
				},
				{
					"name": "getDatabricksClusterInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatabricksClusterInfo($connectionId: UUID) {\n  getDatabricksClusterInfo(connectionId: $connectionId) {\n    __typename\n    clusterId # ID of the cluster.\n    state # State of the cluster.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the state of the databricks cluster."
					},
					"response": []
				},
				{
					"name": "getDatabricksWarehouseInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatabricksWarehouseInfo($connectionId: UUID) {\n  getDatabricksWarehouseInfo(connectionId: $connectionId) {\n    __typename\n    warehouseId # ID of the warehouse.\n    state # State of the warehouse.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get the state of the databricks warehouse."
					},
					"response": []
				},
				{
					"name": "getDatabricksNotebookLink",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatabricksNotebookLink {\n  getDatabricksNotebookLink {\n    __typename\n    presignedUrl # Temporary link containing the notebook.\n    notebookSource # Source location used to create the notebook link.\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Get a temporary link to the latest collection notebook."
					},
					"response": []
				},
				{
					"name": "getDatabricksMetadataJobInfo",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getDatabricksMetadataJobInfo($connectionId: UUID) {\n  getDatabricksMetadataJobInfo(connectionId: $connectionId) {\n    __typename\n    workspaceJobId # Generated Databricks job ID.\n    workspaceJobName # Generated Databricks job name.\n    workspaceNotebookPath # Uploaded Databricks notebook path.\n    notebookSource # Source location used to create the notebook.\n    notebookVersion # Version of the notebook created\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "The Databricks job information for the connection."
					},
					"response": []
				},
				{
					"name": "getCurrentDatabricksNotebookVersion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getCurrentDatabricksNotebookVersion {\n  getCurrentDatabricksNotebookVersion\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Current Version of the Databricks Collection Notebook"
					},
					"response": []
				},
				{
					"name": "validateConnectionType",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query validateConnectionType($warehouseType: String!, $connectionType: String!) {\n  validateConnectionType(\n    warehouseType: $warehouseType\n    connectionType: $connectionType\n  )\n}",
								"variables": "{\n\t\"warehouseType\": null,\n\t\"connectionType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Validate that the connection type can be added to the warehouse type"
					},
					"response": []
				},
				{
					"name": "getEventOnboardingData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEventOnboardingData {\n  getEventOnboardingData {\n    __typename\n    accountUuid\n    config # Onboarding Config meant to be shared between customers and MC\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getEtlContainers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getEtlContainers {\n  getEtlContainers {\n    __typename\n    id\n    # account\n    uuid\n    # dataCollector\n    type\n    name # A friendly name for this etl container\n    # connections\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Retrieve the list of ETL containers in the current user's account"
					},
					"response": []
				},
				{
					"name": "getSupportedValidationsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSupportedValidationsV2($dcId: UUID!, $connectionType: String!) {\n  getSupportedValidationsV2(dcId: $dcId, connectionType: $connectionType) {\n    __typename\n    # supportedValidations # A list of supported validations.\n  }\n}",
								"variables": "{\n\t\"dcId\": null,\n\t\"connectionType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "getSupportedTableValidations",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query getSupportedTableValidations($connectionId: UUID!) {\n  getSupportedTableValidations(connectionId: $connectionId) {\n    __typename\n    # supportedValidations # A list of supported asset validations.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "validateDataAssetAccess",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query validateDataAssetAccess($connectionId: UUID!, $validationNames: [String], $mcon: String, $assetId: String, $project: String, $dataset: String, $assetName: String, $assetType: DataAssetTypeEnum) {\n  validateDataAssetAccess(\n    connectionId: $connectionId\n    validationNames: $validationNames\n    mcon: $mcon\n    assetId: $assetId\n    project: $project\n    dataset: $dataset\n    assetName: $assetName\n    assetType: $assetType\n  ) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n    # validationResults # List of validation results\n  }\n}",
								"variables": "{\n\t\"connectionId\": null,\n\t\"validationNames\": null,\n\t\"mcon\": null,\n\t\"assetId\": null,\n\t\"project\": null,\n\t\"dataset\": null,\n\t\"assetName\": null,\n\t\"assetType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "testExistingConnectionV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "query testExistingConnectionV2($validationName: String!, $connectionId: UUID!) {\n  testExistingConnectionV2(\n    validationName: $validationName\n    connectionId: $connectionId\n  ) {\n    __typename\n    success # Indicates whether the validation test was successful.\n    validationName # Name of the validation test that was run.\n    description # Description of the validation test that was run.\n    # errors # List of errors of failed validations.\n    # warnings # List of warnings of failed validations.\n    # additionalData # Optional additional data about the validations that were run.\n  }\n}",
								"variables": "{\n\t\"validationName\": null,\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Execute a validation test on an integration"
					},
					"response": []
				}
			]
		},
		{
			"name": "Mutations",
			"item": [
				{
					"name": "linkGithubAppInstallation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation linkGithubAppInstallation($code: String!, $installationId: String!) {\n  linkGithubAppInstallation(code: $code, installationId: $installationId) {\n    __typename\n    success # True if linking the installation was successful\n  }\n}",
								"variables": "{\n\t\"code\": null,\n\t\"installationId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Called from the FE as part of the post-installation callback.\nThe \"code\" parameter is used to validate that the request is\nan authentic Github callback and authenticates the user on the\nGithub side."
					},
					"response": []
				},
				{
					"name": "deleteGithubInstallation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteGithubInstallation($installationUuid: UUID!) {\n  deleteGithubInstallation(installationUuid: $installationUuid) {\n    __typename\n    deleted # True if deleting the installation was successful\n  }\n}",
								"variables": "{\n\t\"installationUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "createJiraIntegration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createJiraIntegration($apiToken: String, $defaultTicketFields: JSONString, $integrationName: String!, $serverUrl: String!, $username: String) {\n  createJiraIntegration(\n    apiToken: $apiToken\n    defaultTicketFields: $defaultTicketFields\n    integrationName: $integrationName\n    serverUrl: $serverUrl\n    username: $username\n  ) {\n    __typename\n    # jiraIntegration # The integration that was created\n  }\n}",
								"variables": "{\n\t\"apiToken\": null,\n\t\"defaultTicketFields\": null,\n\t\"integrationName\": null,\n\t\"serverUrl\": null,\n\t\"username\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create a Jira integration"
					},
					"response": []
				},
				{
					"name": "updateJiraIntegration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateJiraIntegration($apiToken: String, $defaultTicketFields: JSONString, $integrationId: UUID!, $integrationName: String!, $serverUrl: String!, $username: String) {\n  updateJiraIntegration(\n    apiToken: $apiToken\n    defaultTicketFields: $defaultTicketFields\n    integrationId: $integrationId\n    integrationName: $integrationName\n    serverUrl: $serverUrl\n    username: $username\n  ) {\n    __typename\n    # jiraIntegration # The integration that was created\n  }\n}",
								"variables": "{\n\t\"apiToken\": null,\n\t\"defaultTicketFields\": null,\n\t\"integrationId\": null,\n\t\"integrationName\": null,\n\t\"serverUrl\": null,\n\t\"username\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update a Jira integration"
					},
					"response": []
				},
				{
					"name": "deleteJiraIntegration",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteJiraIntegration($integrationId: UUID!) {\n  deleteJiraIntegration(integrationId: $integrationId) {\n    __typename\n    deleted\n  }\n}",
								"variables": "{\n\t\"integrationId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a Jira integration"
					},
					"response": []
				},
				{
					"name": "createJiraTicketForIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createJiraTicketForIncident($description: String, $incidentId: UUID!, $integrationId: UUID!, $issuetype: Int, $project: Int, $summary: String) {\n  createJiraTicketForIncident(\n    description: $description\n    incidentId: $incidentId\n    integrationId: $integrationId\n    issuetype: $issuetype\n    project: $project\n    summary: $summary\n  ) {\n    __typename\n    # jiraTicket # The created Jira ticket\n  }\n}",
								"variables": "{\n\t\"description\": null,\n\t\"incidentId\": null,\n\t\"integrationId\": null,\n\t\"issuetype\": null,\n\t\"project\": null,\n\t\"summary\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "linkJiraTicketForIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation linkJiraTicketForIncident($incidentId: UUID!, $integrationId: UUID!, $ticketUrl: String!) {\n  linkJiraTicketForIncident(\n    incidentId: $incidentId\n    integrationId: $integrationId\n    ticketUrl: $ticketUrl\n  ) {\n    __typename\n    # jiraTicket # The created Jira ticket\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"integrationId\": null,\n\t\"ticketUrl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "unlinkJiraTicketForIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation unlinkJiraTicketForIncident($ticketId: UUID!) {\n  unlinkJiraTicketForIncident(ticketId: $ticketId) {\n    __typename\n    unlinked # True if the ticket was unlinked\n  }\n}",
								"variables": "{\n\t\"ticketId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "createOrUpdateNotificationSetting",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateNotificationSetting($anomalyTypes: [String], $customMessage: String, $digestSettings: NotificationDigestSettings, $dry: Boolean, $extra: NotificationExtra, $incidentSubTypes: [IncidentSubType], $notificationScheduleType: String, $notificationType: String!, $recipient: String, $recipients: [String], $rules: NotificationRoutingRules, $settingId: UUID) {\n  createOrUpdateNotificationSetting(\n    anomalyTypes: $anomalyTypes\n    customMessage: $customMessage\n    digestSettings: $digestSettings\n    dry: $dry\n    extra: $extra\n    incidentSubTypes: $incidentSubTypes\n    notificationScheduleType: $notificationScheduleType\n    notificationType: $notificationType\n    recipient: $recipient\n    recipients: $recipients\n    rules: $rules\n    settingId: $settingId\n  ) {\n    __typename\n    # notificationSetting # Setting that was created or updated\n  }\n}",
								"variables": "{\n\t\"anomalyTypes\": null,\n\t\"customMessage\": null,\n\t\"digestSettings\": null,\n\t\"dry\": null,\n\t\"extra\": null,\n\t\"incidentSubTypes\": null,\n\t\"notificationScheduleType\": null,\n\t\"notificationType\": null,\n\t\"recipient\": null,\n\t\"recipients\": null,\n\t\"rules\": null,\n\t\"settingId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a notification setting"
					},
					"response": []
				},
				{
					"name": "createOrUpdateRecipientName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateRecipientName($name: String!, $recipient: String!) {\n  createOrUpdateRecipientName(name: $name, recipient: $recipient) {\n    __typename\n    recipient\n    name\n  }\n}",
								"variables": "{\n\t\"name\": null,\n\t\"recipient\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a recipient's custom name"
					},
					"response": []
				},
				{
					"name": "deleteNotificationSettings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteNotificationSettings($uuids: [UUID!]) {\n  deleteNotificationSettings(uuids: $uuids) {\n    __typename\n    deleted\n  }\n}",
								"variables": "{\n\t\"uuids\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "deleteRecipientName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteRecipientName($recipient: String!) {\n  deleteRecipientName(recipient: $recipient) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"recipient\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a recipient's custom name"
					},
					"response": []
				},
				{
					"name": "setPiiFilterStatus",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setPiiFilterStatus($piiFilterStatusPairs: [PiiFilterStatusPair!]) {\n  setPiiFilterStatus(piiFilterStatusPairs: $piiFilterStatusPairs) {\n    __typename\n    success # Whether the mutation succeeded.\n  }\n}",
								"variables": "{\n\t\"piiFilterStatusPairs\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set PII filter status for this account."
					},
					"response": []
				},
				{
					"name": "updatePiiFilteringPreferences",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updatePiiFilteringPreferences($enabled: Boolean, $failMode: PiiFilteringFailModeType) {\n  updatePiiFilteringPreferences(enabled: $enabled, failMode: $failMode) {\n    __typename\n    success # Whether the mutation succeeded.\n  }\n}",
								"variables": "{\n\t\"enabled\": null,\n\t\"failMode\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update account-wide PII filtering options."
					},
					"response": []
				},
				{
					"name": "updateMonitorName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateMonitorName($monitorType: String!, $monitorUuid: UUID!, $name: String!) {\n  updateMonitorName(\n    monitorType: $monitorType\n    monitorUuid: $monitorUuid\n    name: $name\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"monitorType\": null,\n\t\"monitorUuid\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "updateMonitorNotes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateMonitorNotes($monitorType: String!, $monitorUuid: UUID!, $notes: String!) {\n  updateMonitorNotes(\n    monitorType: $monitorType\n    monitorUuid: $monitorUuid\n    notes: $notes\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"monitorType\": null,\n\t\"monitorUuid\": null,\n\t\"notes\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "updateMonitorLabels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateMonitorLabels($labels: [String!], $monitorType: String!, $monitorUuid: UUID!) {\n  updateMonitorLabels(\n    labels: $labels\n    monitorType: $monitorType\n    monitorUuid: $monitorUuid\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"labels\": [null],\n\t\"monitorType\": null,\n\t\"monitorUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "createOrUpdateDoc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateDoc($content: String!, $docMcon: String, $parentDocMcon: String, $title: String!) {\n  createOrUpdateDoc(\n    content: $content\n    docMcon: $docMcon\n    parentDocMcon: $parentDocMcon\n    title: $title\n  ) {\n    __typename\n    # doc\n  }\n}",
								"variables": "{\n\t\"content\": null,\n\t\"docMcon\": null,\n\t\"parentDocMcon\": null,\n\t\"title\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a Doc"
					},
					"response": []
				},
				{
					"name": "deleteDoc",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteDoc($docMcon: String!) {\n  deleteDoc(docMcon: $docMcon) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"docMcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete Doc"
					},
					"response": []
				},
				{
					"name": "createCustomUser",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createCustomUser($email: String!, $firstName: String, $lastName: String) {\n  createCustomUser(email: $email, firstName: $firstName, lastName: $lastName) {\n    __typename\n    # customUser\n  }\n}",
								"variables": "{\n\t\"email\": null,\n\t\"firstName\": null,\n\t\"lastName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create a CustomUser"
					},
					"response": []
				},
				{
					"name": "createUnifiedUserAssignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createUnifiedUserAssignment($objectMcon: String!, $relationshipType: RelationshipType!, $unifiedUserId: String!) {\n  createUnifiedUserAssignment(\n    objectMcon: $objectMcon\n    relationshipType: $relationshipType\n    unifiedUserId: $unifiedUserId\n  ) {\n    __typename\n    # unifiedUserAssignment\n  }\n}",
								"variables": "{\n\t\"objectMcon\": null,\n\t\"relationshipType\": null,\n\t\"unifiedUserId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Associate a UnifiedUser with a CatalogObject"
					},
					"response": []
				},
				{
					"name": "deleteUnifiedUserAssignment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUnifiedUserAssignment($objectMcon: String!, $unifiedUserId: String!) {\n  deleteUnifiedUserAssignment(\n    objectMcon: $objectMcon\n    unifiedUserId: $unifiedUserId\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"objectMcon\": null,\n\t\"unifiedUserId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Associate a UnifiedUser with a CatalogObject"
					},
					"response": []
				},
				{
					"name": "importDbtManifest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation importDbtManifest($dbtSchemaVersion: String!, $defaultResource: String, $manifestNodesJson: String!, $projectName: String) {\n  importDbtManifest(\n    dbtSchemaVersion: $dbtSchemaVersion\n    defaultResource: $defaultResource\n    manifestNodesJson: $manifestNodesJson\n    projectName: $projectName\n  ) {\n    __typename\n    # response # Response\n  }\n}",
								"variables": "{\n\t\"dbtSchemaVersion\": null,\n\t\"defaultResource\": null,\n\t\"manifestNodesJson\": null,\n\t\"projectName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Import DBT manifest"
					},
					"response": []
				},
				{
					"name": "uploadDbtManifest",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation uploadDbtManifest($batch: Int, $dbtSchemaVersion: String!, $defaultResource: String, $invocationId: String!, $manifestNodesJson: String!, $projectName: String) {\n  uploadDbtManifest(\n    batch: $batch\n    dbtSchemaVersion: $dbtSchemaVersion\n    defaultResource: $defaultResource\n    invocationId: $invocationId\n    manifestNodesJson: $manifestNodesJson\n    projectName: $projectName\n  ) {\n    __typename\n    ok\n  }\n}",
								"variables": "{\n\t\"batch\": null,\n\t\"dbtSchemaVersion\": null,\n\t\"defaultResource\": null,\n\t\"invocationId\": null,\n\t\"manifestNodesJson\": null,\n\t\"projectName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Upload DBT manifest"
					},
					"response": []
				},
				{
					"name": "importDbtRunResults",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation importDbtRunResults($dbtSchemaVersion: String!, $projectName: String, $runId: String, $runLogs: String, $runResultsJson: String!) {\n  importDbtRunResults(\n    dbtSchemaVersion: $dbtSchemaVersion\n    projectName: $projectName\n    runId: $runId\n    runLogs: $runLogs\n    runResultsJson: $runResultsJson\n  ) {\n    __typename\n    # response # Response\n  }\n}",
								"variables": "{\n\t\"dbtSchemaVersion\": null,\n\t\"projectName\": null,\n\t\"runId\": null,\n\t\"runLogs\": null,\n\t\"runResultsJson\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Import DBT run results"
					},
					"response": []
				},
				{
					"name": "uploadDbtRunResults",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation uploadDbtRunResults($batch: Int, $dbtSchemaVersion: String!, $invocationId: String!, $projectName: String, $runId: String, $runLogs: String, $runResultsJson: String!) {\n  uploadDbtRunResults(\n    batch: $batch\n    dbtSchemaVersion: $dbtSchemaVersion\n    invocationId: $invocationId\n    projectName: $projectName\n    runId: $runId\n    runLogs: $runLogs\n    runResultsJson: $runResultsJson\n  ) {\n    __typename\n    ok\n  }\n}",
								"variables": "{\n\t\"batch\": null,\n\t\"dbtSchemaVersion\": null,\n\t\"invocationId\": null,\n\t\"projectName\": null,\n\t\"runId\": null,\n\t\"runLogs\": null,\n\t\"runResultsJson\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Upload DBT run results"
					},
					"response": []
				},
				{
					"name": "sendDbtArtifactsEvent",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation sendDbtArtifactsEvent($artifacts: DbtArtifactsInput!, $invocationId: UUID!, $jobName: String!, $projectName: String!, $resourceId: UUID) {\n  sendDbtArtifactsEvent(\n    artifacts: $artifacts\n    invocationId: $invocationId\n    jobName: $jobName\n    projectName: $projectName\n    resourceId: $resourceId\n  ) {\n    __typename\n    ok\n  }\n}",
								"variables": "{\n\t\"artifacts\": null,\n\t\"invocationId\": null,\n\t\"jobName\": null,\n\t\"projectName\": null,\n\t\"resourceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Publish a Dbt artifacts event to Kinesis stream"
					},
					"response": []
				},
				{
					"name": "setGroupRepetitiveDbtModelFailures",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setGroupRepetitiveDbtModelFailures($connectionId: UUID!, $groupRepetitiveFailures: Boolean!) {\n  setGroupRepetitiveDbtModelFailures(\n    connectionId: $connectionId\n    groupRepetitiveFailures: $groupRepetitiveFailures\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionId\": null,\n\t\"groupRepetitiveFailures\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set whether to group dbt model failures with the same error message into the same incident"
					},
					"response": []
				},
				{
					"name": "setGroupRepetitiveDbtTestFailures",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setGroupRepetitiveDbtTestFailures($connectionId: UUID!, $groupRepetitiveFailures: Boolean!) {\n  setGroupRepetitiveDbtTestFailures(\n    connectionId: $connectionId\n    groupRepetitiveFailures: $groupRepetitiveFailures\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionId\": null,\n\t\"groupRepetitiveFailures\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set whether to group dbt test failures with the same error message into the same incident"
					},
					"response": []
				},
				{
					"name": "setGeneratesIncidents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setGeneratesIncidents($generatesIncidents: Boolean!, $uuid: UUID!) {\n  setGeneratesIncidents(generatesIncidents: $generatesIncidents, uuid: $uuid) {\n    __typename\n    # dbtProject\n  }\n}",
								"variables": "{\n\t\"generatesIncidents\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set whether a dbt project generates incidents"
					},
					"response": []
				},
				{
					"name": "setJobGeneratesIncidents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setJobGeneratesIncidents($generatesIncidents: Boolean!, $jobId: UUID!) {\n  setJobGeneratesIncidents(generatesIncidents: $generatesIncidents, jobId: $jobId) {\n    __typename\n    # dbtJob\n  }\n}",
								"variables": "{\n\t\"generatesIncidents\": null,\n\t\"jobId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set whether a dbt job generates incidents"
					},
					"response": []
				},
				{
					"name": "snoozeDbtNode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation snoozeDbtNode($dbtNodeUuid: UUID, $snoozeMinutes: Int) {\n  snoozeDbtNode(dbtNodeUuid: $dbtNodeUuid, snoozeMinutes: $snoozeMinutes) {\n    __typename\n    # node\n  }\n}",
								"variables": "{\n\t\"dbtNodeUuid\": null,\n\t\"snoozeMinutes\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Snooze a DBT node (model/test). Data collection will continue, but no events will be reported."
					},
					"response": []
				},
				{
					"name": "unsnoozeDbtNode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation unsnoozeDbtNode($dbtNodeUuid: UUID) {\n  unsnoozeDbtNode(dbtNodeUuid: $dbtNodeUuid) {\n    __typename\n    # node\n  }\n}",
								"variables": "{\n\t\"dbtNodeUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Un-snooze a DBT node (model/test)."
					},
					"response": []
				},
				{
					"name": "createOrUpdateMonteCarloConfigTemplate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateMonteCarloConfigTemplate($configTemplateJson: String!, $dryRun: Boolean, $misconfiguredAsWarning: Boolean, $namespace: String!, $resource: String) {\n  createOrUpdateMonteCarloConfigTemplate(\n    configTemplateJson: $configTemplateJson\n    dryRun: $dryRun\n    misconfiguredAsWarning: $misconfiguredAsWarning\n    namespace: $namespace\n    resource: $resource\n  ) {\n    __typename\n    # response # Response\n  }\n}",
								"variables": "{\n\t\"configTemplateJson\": null,\n\t\"dryRun\": null,\n\t\"misconfiguredAsWarning\": null,\n\t\"namespace\": null,\n\t\"resource\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a Monte Carlo Config Template"
					},
					"response": []
				},
				{
					"name": "deleteMonteCarloConfigTemplate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteMonteCarloConfigTemplate($dryRun: Boolean, $namespace: String!) {\n  deleteMonteCarloConfigTemplate(dryRun: $dryRun, namespace: $namespace) {\n    __typename\n    # response # Response\n  }\n}",
								"variables": "{\n\t\"dryRun\": null,\n\t\"namespace\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a Monte Carlo Config Template"
					},
					"response": []
				},
				{
					"name": "setSensitivity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setSensitivity($eventType: String, $mcon: String, $monitorUuid: UUID, $threshold: SensitivityInput) {\n  setSensitivity(\n    eventType: $eventType\n    mcon: $mcon\n    monitorUuid: $monitorUuid\n    threshold: $threshold\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"eventType\": null,\n\t\"mcon\": null,\n\t\"monitorUuid\": null,\n\t\"threshold\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "addToCollectionBlockList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addToCollectionBlockList($collectionBlocks: [CollectionBlockInput!]) {\n  addToCollectionBlockList(collectionBlocks: $collectionBlocks) {\n    __typename\n    success # Whether the mutation succeeded.\n  }\n}",
								"variables": "{\n\t\"collectionBlocks\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Adds to the list of entities for which metadata collection is not allowed on this account."
					},
					"response": []
				},
				{
					"name": "removeFromCollectionBlockList",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeFromCollectionBlockList($collectionBlocks: [CollectionBlockInput!]) {\n  removeFromCollectionBlockList(collectionBlocks: $collectionBlocks) {\n    __typename\n    success # Whether the mutation succeeded.\n  }\n}",
								"variables": "{\n\t\"collectionBlocks\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Removes from the list of entities for which metadata collection is not allowed on this account."
					},
					"response": []
				},
				{
					"name": "createCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createCustomRule($comparisons: [CustomRuleComparisonInput!], $customRuleUuid: UUID, $description: String, $dwId: UUID, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $intervalMinutes: Int, $labels: [String], $notes: String, $scheduleConfig: ScheduleConfigInput, $severity: String, $startTime: DateTime, $timezone: String) {\n  createCustomRule(\n    comparisons: $comparisons\n    customRuleUuid: $customRuleUuid\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    intervalMinutes: $intervalMinutes\n    labels: $labels\n    notes: $notes\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    startTime: $startTime\n    timezone: $timezone\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"customRuleUuid\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"intervalMinutes\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"startTime\": null,\n\t\"timezone\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deprecated, use CreateOrUpdateCustomRule instead"
					},
					"response": []
				},
				{
					"name": "createOrUpdateCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateCustomRule($comparisons: [CustomRuleComparisonInput!], $customRuleUuid: UUID, $description: String, $dwId: UUID, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $intervalMinutes: Int, $labels: [String], $notes: String, $scheduleConfig: ScheduleConfigInput, $severity: String, $startTime: DateTime, $timezone: String) {\n  createOrUpdateCustomRule(\n    comparisons: $comparisons\n    customRuleUuid: $customRuleUuid\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    intervalMinutes: $intervalMinutes\n    labels: $labels\n    notes: $notes\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    startTime: $startTime\n    timezone: $timezone\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"customRuleUuid\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"intervalMinutes\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"startTime\": null,\n\t\"timezone\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a custom rule"
					},
					"response": []
				},
				{
					"name": "createOrUpdateVolumeRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateVolumeRule($comparisons: [CustomRuleComparisonInput!], $customRuleUuid: UUID, $dataCollectionScheduleConfig: ScheduleConfigInput, $description: String!, $dwId: UUID, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $labels: [String], $notes: String, $override: Boolean, $scheduleConfig: ScheduleConfigInput!, $severity: String, $timezone: String) {\n  createOrUpdateVolumeRule(\n    comparisons: $comparisons\n    customRuleUuid: $customRuleUuid\n    dataCollectionScheduleConfig: $dataCollectionScheduleConfig\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    labels: $labels\n    notes: $notes\n    override: $override\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    timezone: $timezone\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"customRuleUuid\": null,\n\t\"dataCollectionScheduleConfig\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"override\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"timezone\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a Volume Rule"
					},
					"response": []
				},
				{
					"name": "createCustomMetricRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createCustomMetricRule($comparisons: [CustomRuleComparisonInput!], $connectionId: UUID, $customRuleUuid: UUID, $customSamplingSql: String, $customSql: String!, $description: String!, $dwId: UUID!, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $fieldMetric: FieldMetricInput, $intervalMinutes: Int, $labels: [String], $notes: String, $queryResultType: QueryResultType, $scheduleConfig: ScheduleConfigInput, $severity: String, $startTime: DateTime, $timezone: String, $variables: JSONString) {\n  createCustomMetricRule(\n    comparisons: $comparisons\n    connectionId: $connectionId\n    customRuleUuid: $customRuleUuid\n    customSamplingSql: $customSamplingSql\n    customSql: $customSql\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    fieldMetric: $fieldMetric\n    intervalMinutes: $intervalMinutes\n    labels: $labels\n    notes: $notes\n    queryResultType: $queryResultType\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    startTime: $startTime\n    timezone: $timezone\n    variables: $variables\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"connectionId\": null,\n\t\"customRuleUuid\": null,\n\t\"customSamplingSql\": null,\n\t\"customSql\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"fieldMetric\": null,\n\t\"intervalMinutes\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"queryResultType\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"startTime\": null,\n\t\"timezone\": null,\n\t\"variables\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deprecated, use CreateOrUpdateCustomMetricRule instead"
					},
					"response": []
				},
				{
					"name": "createOrUpdateCustomMetricRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateCustomMetricRule($comparisons: [CustomRuleComparisonInput!], $connectionId: UUID, $customRuleUuid: UUID, $customSamplingSql: String, $customSql: String!, $description: String!, $dwId: UUID!, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $fieldMetric: FieldMetricInput, $intervalMinutes: Int, $labels: [String], $notes: String, $queryResultType: QueryResultType, $scheduleConfig: ScheduleConfigInput, $severity: String, $startTime: DateTime, $timezone: String, $variables: JSONString) {\n  createOrUpdateCustomMetricRule(\n    comparisons: $comparisons\n    connectionId: $connectionId\n    customRuleUuid: $customRuleUuid\n    customSamplingSql: $customSamplingSql\n    customSql: $customSql\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    fieldMetric: $fieldMetric\n    intervalMinutes: $intervalMinutes\n    labels: $labels\n    notes: $notes\n    queryResultType: $queryResultType\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    startTime: $startTime\n    timezone: $timezone\n    variables: $variables\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"connectionId\": null,\n\t\"customRuleUuid\": null,\n\t\"customSamplingSql\": null,\n\t\"customSql\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"fieldMetric\": null,\n\t\"intervalMinutes\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"queryResultType\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"startTime\": null,\n\t\"timezone\": null,\n\t\"variables\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a custom metric rule"
					},
					"response": []
				},
				{
					"name": "updateCustomMetricRuleNotes",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateCustomMetricRuleNotes($customRuleUuid: UUID!, $notes: String) {\n  updateCustomMetricRuleNotes(customRuleUuid: $customRuleUuid, notes: $notes) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"customRuleUuid\": null,\n\t\"notes\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update notes for custom metric rule"
					},
					"response": []
				},
				{
					"name": "updateCustomMetricSeverity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateCustomMetricSeverity($customRuleUuid: UUID!, $severity: String) {\n  updateCustomMetricSeverity(customRuleUuid: $customRuleUuid, severity: $severity) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"customRuleUuid\": null,\n\t\"severity\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update default severity for custom metric rule"
					},
					"response": []
				},
				{
					"name": "createOrUpdateFreshnessCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateFreshnessCustomRule($comparisons: [CustomRuleComparisonInput!], $customRuleUuid: UUID, $description: String, $dwId: UUID, $eventRollupCount: Int, $eventRollupUntilChanged: Boolean, $intervalMinutes: Int, $labels: [String], $notes: String, $scheduleConfig: ScheduleConfigInput, $severity: String, $startTime: DateTime, $timezone: String) {\n  createOrUpdateFreshnessCustomRule(\n    comparisons: $comparisons\n    customRuleUuid: $customRuleUuid\n    description: $description\n    dwId: $dwId\n    eventRollupCount: $eventRollupCount\n    eventRollupUntilChanged: $eventRollupUntilChanged\n    intervalMinutes: $intervalMinutes\n    labels: $labels\n    notes: $notes\n    scheduleConfig: $scheduleConfig\n    severity: $severity\n    startTime: $startTime\n    timezone: $timezone\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"comparisons\": [null],\n\t\"customRuleUuid\": null,\n\t\"description\": null,\n\t\"dwId\": null,\n\t\"eventRollupCount\": null,\n\t\"eventRollupUntilChanged\": null,\n\t\"intervalMinutes\": null,\n\t\"labels\": null,\n\t\"notes\": null,\n\t\"scheduleConfig\": null,\n\t\"severity\": null,\n\t\"startTime\": null,\n\t\"timezone\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a freshness custom rule"
					},
					"response": []
				},
				{
					"name": "snoozeCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation snoozeCustomRule($snoozeMinutes: Int, $snoozeType: CustomRuleSnoozeInput, $uuid: UUID) {\n  snoozeCustomRule(\n    snoozeMinutes: $snoozeMinutes\n    snoozeType: $snoozeType\n    uuid: $uuid\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"snoozeMinutes\": null,\n\t\"snoozeType\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Snooze a custom rule. Data collection will continue, but no anomalies will be reported."
					},
					"response": []
				},
				{
					"name": "unsnoozeCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation unsnoozeCustomRule($uuid: UUID) {\n  unsnoozeCustomRule(uuid: $uuid) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Un-snooze a custom rule."
					},
					"response": []
				},
				{
					"name": "deleteCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteCustomRule($uuid: UUID, $warehouseUuid: UUID) {\n  deleteCustomRule(uuid: $uuid, warehouseUuid: $warehouseUuid) {\n    __typename\n    uuid\n  }\n}",
								"variables": "{\n\t\"uuid\": null,\n\t\"warehouseUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a custom rule"
					},
					"response": []
				},
				{
					"name": "triggerCustomRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation triggerCustomRule($customSqlContains: String, $descriptionContains: String, $ruleId: UUID) {\n  triggerCustomRule(\n    customSqlContains: $customSqlContains\n    descriptionContains: $descriptionContains\n    ruleId: $ruleId\n  ) {\n    __typename\n    # customRule\n  }\n}",
								"variables": "{\n\t\"customSqlContains\": null,\n\t\"descriptionContains\": null,\n\t\"ruleId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Run a custom rule immediately"
					},
					"response": []
				},
				{
					"name": "triggerCircuitBreakerRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation triggerCircuitBreakerRule($namespace: String, $ruleName: String, $ruleUuid: UUID) {\n  triggerCircuitBreakerRule(\n    namespace: $namespace\n    ruleName: $ruleName\n    ruleUuid: $ruleUuid\n  ) {\n    __typename\n    jobExecutionUuid\n  }\n}",
								"variables": "{\n\t\"namespace\": null,\n\t\"ruleName\": null,\n\t\"ruleUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Run a custom rule as a circuit breaker immediately. Supports rules that create a single query."
					},
					"response": []
				},
				{
					"name": "triggerCircuitBreakerRuleV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation triggerCircuitBreakerRuleV2($namespace: String, $ruleName: String, $ruleUuid: UUID) {\n  triggerCircuitBreakerRuleV2(\n    namespace: $namespace\n    ruleName: $ruleName\n    ruleUuid: $ruleUuid\n  ) {\n    __typename\n    jobExecutionUuids # The UUIDs of the triggered rule job executions.\n  }\n}",
								"variables": "{\n\t\"namespace\": null,\n\t\"ruleName\": null,\n\t\"ruleUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Run a custom rule as a circuit breaker immediately. Supports rules that create multiple queries."
					},
					"response": []
				},
				{
					"name": "runSqlRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation runSqlRule($ruleUuid: UUID!) {\n  runSqlRule(ruleUuid: $ruleUuid) {\n    __typename\n    jobExecutionUuids\n  }\n}",
								"variables": "{\n\t\"ruleUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Run a SQL Rule manually"
					},
					"response": []
				},
				{
					"name": "createOrUpdateLineageNode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateLineageNode($expireAt: DateTime, $name: String, $objectId: String!, $objectType: String!, $properties: [ObjectPropertyInput], $resourceId: UUID, $resourceName: String) {\n  createOrUpdateLineageNode(\n    expireAt: $expireAt\n    name: $name\n    objectId: $objectId\n    objectType: $objectType\n    properties: $properties\n    resourceId: $resourceId\n    resourceName: $resourceName\n  ) {\n    __typename\n    # node\n  }\n}",
								"variables": "{\n\t\"expireAt\": null,\n\t\"name\": null,\n\t\"objectId\": null,\n\t\"objectType\": null,\n\t\"properties\": null,\n\t\"resourceId\": null,\n\t\"resourceName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a lineage node"
					},
					"response": []
				},
				{
					"name": "createOrUpdateLineageEdge",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateLineageEdge($destination: NodeInput!, $expireAt: DateTime, $source: NodeInput!) {\n  createOrUpdateLineageEdge(\n    destination: $destination\n    expireAt: $expireAt\n    source: $source\n  ) {\n    __typename\n    # edge\n  }\n}",
								"variables": "{\n\t\"destination\": null,\n\t\"expireAt\": null,\n\t\"source\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a lineage edge"
					},
					"response": []
				},
				{
					"name": "createOrUpdateLineageNodeBlockPattern",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateLineageNodeBlockPattern($datasetRegexp: String, $projectRegexp: String, $resourceId: UUID!, $tableRegexp: String, $uuid: UUID) {\n  createOrUpdateLineageNodeBlockPattern(\n    datasetRegexp: $datasetRegexp\n    projectRegexp: $projectRegexp\n    resourceId: $resourceId\n    tableRegexp: $tableRegexp\n    uuid: $uuid\n  ) {\n    __typename\n    # pattern\n  }\n}",
								"variables": "{\n\t\"datasetRegexp\": null,\n\t\"projectRegexp\": null,\n\t\"resourceId\": null,\n\t\"tableRegexp\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a node block pattern"
					},
					"response": []
				},
				{
					"name": "createOrUpdateLineageNodeReplacementRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateLineageNodeReplacementRule($caseInsensitive: Boolean, $pattern: String!, $replacement: String!, $resourceId: UUID!, $uuid: UUID) {\n  createOrUpdateLineageNodeReplacementRule(\n    caseInsensitive: $caseInsensitive\n    pattern: $pattern\n    replacement: $replacement\n    resourceId: $resourceId\n    uuid: $uuid\n  ) {\n    __typename\n    # rule # Replacement rule that was created or updated\n  }\n}",
								"variables": "{\n\t\"caseInsensitive\": null,\n\t\"pattern\": null,\n\t\"replacement\": null,\n\t\"resourceId\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a node replacement rule"
					},
					"response": []
				},
				{
					"name": "deleteLineageNode",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteLineageNode($mcon: String!) {\n  deleteLineageNode(mcon: $mcon) {\n    __typename\n    objectsDeleted # Number of objects deleted\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a lineage node and any lineage edges connected to it."
					},
					"response": []
				},
				{
					"name": "deleteLineageNodeBlockPattern",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteLineageNodeBlockPattern($uuid: UUID!) {\n  deleteLineageNodeBlockPattern(uuid: $uuid) {\n    __typename\n    # pattern\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a lineage node block pattern."
					},
					"response": []
				},
				{
					"name": "deleteLineageNodeReplacementRule",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteLineageNodeReplacementRule($uuid: UUID!) {\n  deleteLineageNodeReplacementRule(uuid: $uuid) {\n    __typename\n    # rule\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a lineage node replacement rule"
					},
					"response": []
				},
				{
					"name": "createOrUpdateCatalogObjectMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateCatalogObjectMetadata($description: String!, $mcon: String!) {\n  createOrUpdateCatalogObjectMetadata(description: $description, mcon: $mcon) {\n    __typename\n    # catalogObjectMetadata # Object metadata created or updated\n  }\n}",
								"variables": "{\n\t\"description\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update catalog object metadata"
					},
					"response": []
				},
				{
					"name": "deleteCatalogObjectMetadata",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteCatalogObjectMetadata($mcon: String!) {\n  deleteCatalogObjectMetadata(mcon: $mcon) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete metadata for an object"
					},
					"response": []
				},
				{
					"name": "createOrUpdateObjectProperty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateObjectProperty($mconId: String!, $propertyName: String!, $propertySourceType: String, $propertyValue: String) {\n  createOrUpdateObjectProperty(\n    mconId: $mconId\n    propertyName: $propertyName\n    propertySourceType: $propertySourceType\n    propertyValue: $propertyValue\n  ) {\n    __typename\n    # objectProperty # Property created or updated\n  }\n}",
								"variables": "{\n\t\"mconId\": null,\n\t\"propertyName\": null,\n\t\"propertySourceType\": null,\n\t\"propertyValue\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update properties (tags) for objects (e.g. tables, fields, etc.)"
					},
					"response": []
				},
				{
					"name": "deleteObjectProperty",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteObjectProperty($mconId: String!, $propertyName: String!, $propertySourceType: String) {\n  deleteObjectProperty(\n    mconId: $mconId\n    propertyName: $propertyName\n    propertySourceType: $propertySourceType\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"mconId\": null,\n\t\"propertyName\": null,\n\t\"propertySourceType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete properties (tags) for objects (e.g. tables, fields, etc.)"
					},
					"response": []
				},
				{
					"name": "bulkCreateOrUpdateObjectProperties",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation bulkCreateOrUpdateObjectProperties($inputObjectProperties: [InputObjectProperty!]) {\n  bulkCreateOrUpdateObjectProperties(\n    inputObjectProperties: $inputObjectProperties\n  ) {\n    __typename\n    # objectProperties # List of properties created or updated\n  }\n}",
								"variables": "{\n\t\"inputObjectProperties\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a list of properties (tags) for objects (e.g. tables, fields, etc.)"
					},
					"response": []
				},
				{
					"name": "createOrUpdateMonitorLabel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateMonitorLabel($label: String!, $monitorUuids: [UUID], $uuid: UUID) {\n  createOrUpdateMonitorLabel(\n    label: $label\n    monitorUuids: $monitorUuids\n    uuid: $uuid\n  ) {\n    __typename\n    # monitorLabel # The created monitor label\n  }\n}",
								"variables": "{\n\t\"label\": null,\n\t\"monitorUuids\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a monitor label"
					},
					"response": []
				},
				{
					"name": "deleteMonitorLabel",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteMonitorLabel($uuid: UUID!) {\n  deleteMonitorLabel(uuid: $uuid) {\n    __typename\n    deleted # True if the monitor label was deleted\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a monitor label"
					},
					"response": []
				},
				{
					"name": "stopMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation stopMonitor($monitorId: UUID) {\n  stopMonitor(monitorId: $monitorId) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"monitorId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deletes a monitor"
					},
					"response": []
				},
				{
					"name": "deleteMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteMonitor($monitorId: UUID) {\n  deleteMonitor(monitorId: $monitorId) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"monitorId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deletes a monitor"
					},
					"response": []
				},
				{
					"name": "triggerMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation triggerMonitor($fullTableId: String, $mcon: String, $monitorType: String, $resourceId: UUID, $uuid: UUID) {\n  triggerMonitor(\n    fullTableId: $fullTableId\n    mcon: $mcon\n    monitorType: $monitorType\n    resourceId: $resourceId\n    uuid: $uuid\n  ) {\n    __typename\n    # monitor\n  }\n}",
								"variables": "{\n\t\"fullTableId\": null,\n\t\"mcon\": null,\n\t\"monitorType\": null,\n\t\"resourceId\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deletes a monitor"
					},
					"response": []
				},
				{
					"name": "createOrUpdateMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateMonitor($aggSelectExpression: String, $aggTimeInterval: MonitorAggTimeInterval, $connectionId: UUID, $description: String, $disableLookBackBootstrap: Boolean, $failedScheduleAccountNotificationId: UUID, $fields: [String], $fullTableId: String, $labels: [String], $lookbackDays: Int, $mcon: String, $monitorType: String, $notes: String, $resourceId: UUID, $scheduleConfig: ScheduleConfigInput, $segmentedExpressions: [String], $selectExpressions: [MonitorSelectExpressionInput], $timeAxisName: String, $timeAxisType: String, $unnestFields: [String], $usePartitionClause: Boolean, $uuid: UUID, $whereCondition: String) {\n  createOrUpdateMonitor(\n    aggSelectExpression: $aggSelectExpression\n    aggTimeInterval: $aggTimeInterval\n    connectionId: $connectionId\n    description: $description\n    disableLookBackBootstrap: $disableLookBackBootstrap\n    failedScheduleAccountNotificationId: $failedScheduleAccountNotificationId\n    fields: $fields\n    fullTableId: $fullTableId\n    labels: $labels\n    lookbackDays: $lookbackDays\n    mcon: $mcon\n    monitorType: $monitorType\n    notes: $notes\n    resourceId: $resourceId\n    scheduleConfig: $scheduleConfig\n    segmentedExpressions: $segmentedExpressions\n    selectExpressions: $selectExpressions\n    timeAxisName: $timeAxisName\n    timeAxisType: $timeAxisType\n    unnestFields: $unnestFields\n    usePartitionClause: $usePartitionClause\n    uuid: $uuid\n    whereCondition: $whereCondition\n  ) {\n    __typename\n    # monitor\n  }\n}",
								"variables": "{\n\t\"aggSelectExpression\": null,\n\t\"aggTimeInterval\": null,\n\t\"connectionId\": null,\n\t\"description\": null,\n\t\"disableLookBackBootstrap\": null,\n\t\"failedScheduleAccountNotificationId\": null,\n\t\"fields\": null,\n\t\"fullTableId\": null,\n\t\"labels\": null,\n\t\"lookbackDays\": null,\n\t\"mcon\": null,\n\t\"monitorType\": null,\n\t\"notes\": null,\n\t\"resourceId\": null,\n\t\"scheduleConfig\": null,\n\t\"segmentedExpressions\": null,\n\t\"selectExpressions\": null,\n\t\"timeAxisName\": null,\n\t\"timeAxisType\": null,\n\t\"unnestFields\": null,\n\t\"usePartitionClause\": null,\n\t\"uuid\": null,\n\t\"whereCondition\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "pauseMonitor",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation pauseMonitor($pause: Boolean!, $uuid: UUID!) {\n  pauseMonitor(pause: $pause, uuid: $uuid) {\n    __typename\n    # monitor # The monitor whose pause property has been toggled.\n  }\n}",
								"variables": "{\n\t\"pause\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Pause a monitor from collecting data.'"
					},
					"response": []
				},
				{
					"name": "validateCron",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation validateCron($allowMultiple: Boolean, $cron: String!) {\n  validateCron(allowMultiple: $allowMultiple, cron: $cron) {\n    __typename\n    success # Indicates whether the CRON expression is valid\n    error # Error message if the CRON expression is not valid\n  }\n}",
								"variables": "{\n\t\"allowMultiple\": null,\n\t\"cron\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Validate a CRON expression"
					},
					"response": []
				},
				{
					"name": "createEventComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createEventComment($eventId: UUID!, $eventText: String!) {\n  createEventComment(eventId: $eventId, eventText: $eventText) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"eventId\": null,\n\t\"eventText\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "updateEventComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateEventComment($eventCommentId: UUID!, $eventText: String!) {\n  updateEventComment(eventCommentId: $eventCommentId, eventText: $eventText) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"eventCommentId\": null,\n\t\"eventText\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "deleteEventComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteEventComment($eventCommentId: UUID!) {\n  deleteEventComment(eventCommentId: $eventCommentId) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"eventCommentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "setIncidentFeedback",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setIncidentFeedback($input: SetIncidentFeedbackInput!) {\n  setIncidentFeedback(input: $input) {\n    __typename\n    # incident # Incident details, for which feedback was given \n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Provide feedback for an incident"
					},
					"response": []
				},
				{
					"name": "setIncidentReaction",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setIncidentReaction($incidentId: UUID!, $reaction: IncidentReactionInput!) {\n  setIncidentReaction(incidentId: $incidentId, reaction: $reaction) {\n    __typename\n    # incident # The updated incident\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"reaction\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "setIncidentSeverity",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setIncidentSeverity($incidentId: UUID!, $severity: String!) {\n  setIncidentSeverity(incidentId: $incidentId, severity: $severity) {\n    __typename\n    # incident # The updated incident\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"severity\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set severity for an existing incident"
					},
					"response": []
				},
				{
					"name": "setIncidentOwner",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setIncidentOwner($incidentId: UUID!, $owner: String) {\n  setIncidentOwner(incidentId: $incidentId, owner: $owner) {\n    __typename\n    # incident # The updated incident\n  }\n}",
								"variables": "{\n\t\"incidentId\": null,\n\t\"owner\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set an owner for an existing incident"
					},
					"response": []
				},
				{
					"name": "createOrUpdateIncidentComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateIncidentComment($comment: String!, $commentId: UUID, $incidentId: UUID!) {\n  createOrUpdateIncidentComment(\n    comment: $comment\n    commentId: $commentId\n    incidentId: $incidentId\n  ) {\n    __typename\n    # commentEvent # The incident comment event.\n  }\n}",
								"variables": "{\n\t\"comment\": null,\n\t\"commentId\": null,\n\t\"incidentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Creates or updates a comment on an incident"
					},
					"response": []
				},
				{
					"name": "deleteIncidentComment",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteIncidentComment($commentId: UUID!) {\n  deleteIncidentComment(commentId: $commentId) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"commentId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deletes an incident's comment"
					},
					"response": []
				},
				{
					"name": "splitIncident",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation splitIncident($eventUuids: [UUID!], $incidentUuid: UUID!, $sendNotification: Boolean) {\n  splitIncident(\n    eventUuids: $eventUuids\n    incidentUuid: $incidentUuid\n    sendNotification: $sendNotification\n  ) {\n    __typename\n    incidentUuid\n  }\n}",
								"variables": "{\n\t\"eventUuids\": [null],\n\t\"incidentUuid\": null,\n\t\"sendNotification\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Splits event/s from incident into a new incident"
					},
					"response": []
				},
				{
					"name": "createOrUpdateDomain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateDomain($assignments: [String], $description: String, $name: String!, $tags: [TagKeyValuePairInput], $uuid: UUID) {\n  createOrUpdateDomain(\n    assignments: $assignments\n    description: $description\n    name: $name\n    tags: $tags\n    uuid: $uuid\n  ) {\n    __typename\n    # domain # Created or updated domain\n  }\n}",
								"variables": "{\n\t\"assignments\": null,\n\t\"description\": null,\n\t\"name\": null,\n\t\"tags\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a domain"
					},
					"response": []
				},
				{
					"name": "deleteDomain",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteDomain($uuid: UUID!) {\n  deleteDomain(uuid: $uuid) {\n    __typename\n    deleted # Number of domains deleted\n  }\n}",
								"variables": "{\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a domain"
					},
					"response": []
				},
				{
					"name": "createOrUpdateAuthorizationGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateAuthorizationGroup($description: String, $domainRestrictionIds: [UUID], $label: String, $memberUserIds: [String], $name: String!, $roles: [String!], $ssoGroup: String, $version: String) {\n  createOrUpdateAuthorizationGroup(\n    description: $description\n    domainRestrictionIds: $domainRestrictionIds\n    label: $label\n    memberUserIds: $memberUserIds\n    name: $name\n    roles: $roles\n    ssoGroup: $ssoGroup\n    version: $version\n  ) {\n    __typename\n    # authorizationGroup # Created or updated authorization group.\n  }\n}",
								"variables": "{\n\t\"description\": null,\n\t\"domainRestrictionIds\": null,\n\t\"label\": null,\n\t\"memberUserIds\": null,\n\t\"name\": null,\n\t\"roles\": [null],\n\t\"ssoGroup\": null,\n\t\"version\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update an authorization group."
					},
					"response": []
				},
				{
					"name": "deleteAuthorizationGroup",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteAuthorizationGroup($name: String) {\n  deleteAuthorizationGroup(name: $name) {\n    __typename\n    deleted # Number of groups deleted.\n  }\n}",
								"variables": "{\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete an authorization group"
					},
					"response": []
				},
				{
					"name": "updateUserAuthorizationGroupMembership",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUserAuthorizationGroupMembership($groupNames: [String!], $memberUserId: String!) {\n  updateUserAuthorizationGroupMembership(\n    groupNames: $groupNames\n    memberUserId: $memberUserId\n  ) {\n    __typename\n    # addedToGroups # List of groups user was added to.\n    # removedFromGroups # List of groups user was removed from.\n  }\n}",
								"variables": "{\n\t\"groupNames\": [null],\n\t\"memberUserId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update a user's authorization group membership. Authenticated user must have permission to manage users."
					},
					"response": []
				},
				{
					"name": "createOrUpdateResource",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateResource($isDefault: Boolean, $name: String, $type: String, $uuid: UUID) {\n  createOrUpdateResource(\n    isDefault: $isDefault\n    name: $name\n    type: $type\n    uuid: $uuid\n  ) {\n    __typename\n    # resource\n  }\n}",
								"variables": "{\n\t\"isDefault\": null,\n\t\"name\": null,\n\t\"type\": null,\n\t\"uuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a resource"
					},
					"response": []
				},
				{
					"name": "matchAndCreateBiWarehouseSources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation matchAndCreateBiWarehouseSources($biContainerId: UUID!, $biWarehouseSources: [BiWarehouseSourcesInput]) {\n  matchAndCreateBiWarehouseSources(\n    biContainerId: $biContainerId\n    biWarehouseSources: $biWarehouseSources\n  ) {\n    __typename\n    # matchingBiWarehouseSources\n  }\n}",
								"variables": "{\n\t\"biContainerId\": null,\n\t\"biWarehouseSources\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create or update a BI warehouse source. If BI warehouse source details are provided in thebi_warehouse_sources parameter then those are saved. Else, details are pulled from the BIAPIs, matched with warehouses in Monte Carlo and details saved only if there is a full match."
					},
					"response": []
				},
				{
					"name": "toggleDisableSampling",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleDisableSampling($disable: Boolean!, $dwId: UUID!) {\n  toggleDisableSampling(disable: $disable, dwId: $dwId) {\n    __typename\n    disabled\n  }\n}",
								"variables": "{\n\t\"disable\": null,\n\t\"dwId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enable/disable the sampling data feature"
					},
					"response": []
				},
				{
					"name": "toggleDisableValueIngestion",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleDisableValueIngestion($disable: Boolean!, $dwId: UUID!) {\n  toggleDisableValueIngestion(disable: $disable, dwId: $dwId) {\n    __typename\n    disabled\n  }\n}",
								"variables": "{\n\t\"disable\": null,\n\t\"dwId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enable/disable the value ingestion feature"
					},
					"response": []
				},
				{
					"name": "toggleEnableFullDistributionMetrics",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleEnableFullDistributionMetrics($dwId: UUID!, $enable: Boolean!) {\n  toggleEnableFullDistributionMetrics(dwId: $dwId, enable: $enable) {\n    __typename\n    enabled\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"enable\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enable/disable collection of full distribution metrics for a particular warehouse"
					},
					"response": []
				},
				{
					"name": "saveTableImportanceStats",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation saveTableImportanceStats($importanceScore: Float, $isImportant: Boolean, $mcon: String!) {\n  saveTableImportanceStats(\n    importanceScore: $importanceScore\n    isImportant: $isImportant\n    mcon: $mcon\n  ) {\n    __typename\n    # stats\n  }\n}",
								"variables": "{\n\t\"importanceScore\": null,\n\t\"isImportant\": null,\n\t\"mcon\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Save custom table stats for a table"
					},
					"response": []
				},
				{
					"name": "setDefaultIncidentGroupInterval",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setDefaultIncidentGroupInterval($dwId: UUID!, $interval: Int!) {\n  setDefaultIncidentGroupInterval(dwId: $dwId, interval: $interval) {\n    __typename\n    warehouseConfig # Warehouse configuration.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"interval\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set default incident grouping interval (in hours) for a warehouse."
					},
					"response": []
				},
				{
					"name": "createOrUpdateDataMaintenanceEntry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateDataMaintenanceEntry($dataset: String, $dwId: UUID!, $endTime: DateTime, $id: Int, $maintenanceType: DataMaintenanceMetric, $mcon: String, $project: String, $startTime: DateTime) {\n  createOrUpdateDataMaintenanceEntry(\n    dataset: $dataset\n    dwId: $dwId\n    endTime: $endTime\n    id: $id\n    maintenanceType: $maintenanceType\n    mcon: $mcon\n    project: $project\n    startTime: $startTime\n  ) {\n    __typename\n    # entry\n  }\n}",
								"variables": "{\n\t\"dataset\": null,\n\t\"dwId\": null,\n\t\"endTime\": null,\n\t\"id\": null,\n\t\"maintenanceType\": null,\n\t\"mcon\": null,\n\t\"project\": null,\n\t\"startTime\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Creates or updates a data maintenance period"
					},
					"response": []
				},
				{
					"name": "toggleWildcardAggregation",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleWildcardAggregation($dwId: UUID!, $enable: Boolean!) {\n  toggleWildcardAggregation(dwId: $dwId, enable: $enable) {\n    __typename\n    enabled\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"enable\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enables/disable aggregation of wildcard tables (defaults to yearly and monthly templates)"
					},
					"response": []
				},
				{
					"name": "setWildcardTemplates",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setWildcardTemplates($dwId: UUID!, $templates: [WildcardTemplateInput!]) {\n  setWildcardTemplates(dwId: $dwId, templates: $templates) {\n    __typename\n    # templates\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"templates\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Sets the templates to use for wildcard aggregation (overrides existing templates)"
					},
					"response": []
				},
				{
					"name": "deleteDataMaintenanceEntry",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteDataMaintenanceEntry($id: Int!) {\n  deleteDataMaintenanceEntry(id: $id) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"id\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete a data maintenance window"
					},
					"response": []
				},
				{
					"name": "createOrUpdateUserSettings",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateUserSettings($description: String, $key: String!, $value: JSONString) {\n  createOrUpdateUserSettings(description: $description, key: $key, value: $value) {\n    __typename\n    # userSettings # Response\n  }\n}",
								"variables": "{\n\t\"description\": null,\n\t\"key\": null,\n\t\"value\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create a new user-specific setting"
					},
					"response": []
				},
				{
					"name": "updateUserState",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateUserState($input: UpdateUserStateInput!) {\n  updateUserState(input: $input) {\n    __typename\n    # user\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "setAccountName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setAccountName($accountName: String!) {\n  setAccountName(accountName: $accountName) {\n    __typename\n    # account\n  }\n}",
								"variables": "{\n\t\"accountName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "setWarehouseName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation setWarehouseName($dwId: UUID!, $name: String!) {\n  setWarehouseName(dwId: $dwId, name: $name) {\n    __typename\n    # warehouse # Warehouse where name was set.\n  }\n}",
								"variables": "{\n\t\"dwId\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Set friendly name for a warehouse."
					},
					"response": []
				},
				{
					"name": "createOrUpdateSamlIdentityProvider",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateSamlIdentityProvider($defaultAuthorizationGroups: [String], $domains: [String!], $metadata: String, $metadataUrl: String) {\n  createOrUpdateSamlIdentityProvider(\n    defaultAuthorizationGroups: $defaultAuthorizationGroups\n    domains: $domains\n    metadata: $metadata\n    metadataUrl: $metadataUrl\n  ) {\n    __typename\n    # account\n  }\n}",
								"variables": "{\n\t\"defaultAuthorizationGroups\": null,\n\t\"domains\": [null],\n\t\"metadata\": null,\n\t\"metadataUrl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "deleteSamlIdentityProvider",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteSamlIdentityProvider {\n  deleteSamlIdentityProvider {\n    __typename\n    # account\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "inviteUsers",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation inviteUsers($input: InviteUsersInput!) {\n  inviteUsers(input: $input) {\n    __typename\n    # users\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "DEPRECATED: use inviteUsersV2"
					},
					"response": []
				},
				{
					"name": "inviteUsersV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation inviteUsersV2($authGroups: [String!], $emails: [String!], $invitationType: InvitationType) {\n  inviteUsersV2(\n    authGroups: $authGroups\n    emails: $emails\n    invitationType: $invitationType\n  ) {\n    __typename\n    # invites # List of users invites sent\n    existingUsers # List of email addresses of users who already exist and cannot be invited\n    alreadyInvited # List of email addresses already invited to this account or another account\n  }\n}",
								"variables": "{\n\t\"authGroups\": [null],\n\t\"emails\": [null],\n\t\"invitationType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Invite users to the account"
					},
					"response": []
				},
				{
					"name": "switchUserAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation switchUserAccount($switchToAccountId: UUID!, $verificationToken: String!) {\n  switchUserAccount(\n    switchToAccountId: $switchToAccountId\n    verificationToken: $verificationToken\n  ) {\n    __typename\n    # newAccount\n  }\n}",
								"variables": "{\n\t\"switchToAccountId\": null,\n\t\"verificationToken\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "User can switch accounts if provided with valid invite"
					},
					"response": []
				},
				{
					"name": "deleteUserInvite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteUserInvite($emails: [String!]) {\n  deleteUserInvite(emails: $emails) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"emails\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete user invite"
					},
					"response": []
				},
				{
					"name": "resendUserInvite",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation resendUserInvite($emails: [String!]) {\n  resendUserInvite(emails: $emails) {\n    __typename\n    # invites # List of users to resend invites\n    existingUsers # List of email addresses of users who already exist and cannot be invited\n  }\n}",
								"variables": "{\n\t\"emails\": [null]\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Resend user invite"
					},
					"response": []
				},
				{
					"name": "removeUserFromAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeUserFromAccount($email: String!) {\n  removeUserFromAccount(email: $email) {\n    __typename\n    # user\n  }\n}",
								"variables": "{\n\t\"email\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Remove user from account"
					},
					"response": []
				},
				{
					"name": "trackTable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation trackTable($input: TrackTableInput!) {\n  trackTable(input: $input) {\n    __typename\n    # table\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add table to account's dashboard"
					},
					"response": []
				},
				{
					"name": "uploadCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation uploadCredentials($file: Upload!) {\n  uploadCredentials(file: $file) {\n    __typename\n    key\n  }\n}",
								"variables": "{\n\t\"file\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "saveSlackCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation saveSlackCredentials($key: String, $slackAppType: SlackAppType, $slackInstallationUuid: String) {\n  saveSlackCredentials(\n    key: $key\n    slackAppType: $slackAppType\n    slackInstallationUuid: $slackInstallationUuid\n  ) {\n    __typename\n    # slackCredentials\n  }\n}",
								"variables": "{\n\t\"key\": null,\n\t\"slackAppType\": null,\n\t\"slackInstallationUuid\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "deauthorizeSlackApp",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deauthorizeSlackApp($slackAppType: SlackAppType!) {\n  deauthorizeSlackApp(slackAppType: $slackAppType) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"slackAppType\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": null
					},
					"response": []
				},
				{
					"name": "testCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testCredentials($connectionOptions: ConnectionTestOptions, $connectionType: String, $key: String!, $projectId: String) {\n  testCredentials(\n    connectionOptions: $connectionOptions\n    connectionType: $connectionType\n    key: $key\n    projectId: $projectId\n  ) {\n    __typename\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"connectionType\": null,\n\t\"key\": null,\n\t\"projectId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test credentials where the temp key already exists (e.g. BQ)"
					},
					"response": []
				},
				{
					"name": "testDatabaseCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testDatabaseCredentials($assumableRole: String, $connectionOptions: ConnectionTestOptions, $connectionType: String, $dbName: String, $dbType: String, $externalId: String, $host: String, $password: String, $port: Int, $sslOptions: SslInputOptions, $user: String) {\n  testDatabaseCredentials(\n    assumableRole: $assumableRole\n    connectionOptions: $connectionOptions\n    connectionType: $connectionType\n    dbName: $dbName\n    dbType: $dbType\n    externalId: $externalId\n    host: $host\n    password: $password\n    port: $port\n    sslOptions: $sslOptions\n    user: $user\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"connectionOptions\": null,\n\t\"connectionType\": null,\n\t\"dbName\": null,\n\t\"dbType\": null,\n\t\"externalId\": null,\n\t\"host\": null,\n\t\"password\": null,\n\t\"port\": null,\n\t\"sslOptions\": null,\n\t\"user\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a generic warehouse or database connection"
					},
					"response": []
				},
				{
					"name": "testPrestoCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testPrestoCredentials($catalog: String, $connectionOptions: ConnectionTestOptions, $host: String, $httpScheme: String, $password: String, $port: Int, $schema: String, $sslOptions: SslInputOptions, $user: String) {\n  testPrestoCredentials(\n    catalog: $catalog\n    connectionOptions: $connectionOptions\n    host: $host\n    httpScheme: $httpScheme\n    password: $password\n    port: $port\n    schema: $schema\n    sslOptions: $sslOptions\n    user: $user\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"catalog\": null,\n\t\"connectionOptions\": null,\n\t\"host\": null,\n\t\"httpScheme\": null,\n\t\"password\": null,\n\t\"port\": null,\n\t\"schema\": null,\n\t\"sslOptions\": null,\n\t\"user\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test connection to Presto"
					},
					"response": []
				},
				{
					"name": "testSnowflakeCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testSnowflakeCredentials($account: String, $connectionOptions: ConnectionTestOptions, $password: String, $privateKey: String, $privateKeyPassphrase: String, $user: String, $warehouse: String) {\n  testSnowflakeCredentials(\n    account: $account\n    connectionOptions: $connectionOptions\n    password: $password\n    privateKey: $privateKey\n    privateKeyPassphrase: $privateKeyPassphrase\n    user: $user\n    warehouse: $warehouse\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"account\": null,\n\t\"connectionOptions\": null,\n\t\"password\": null,\n\t\"privateKey\": null,\n\t\"privateKeyPassphrase\": null,\n\t\"user\": null,\n\t\"warehouse\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a Snowflake connection"
					},
					"response": []
				},
				{
					"name": "testHiveCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testHiveCredentials($authMode: String, $connectionOptions: ConnectionTestOptions, $database: String, $host: String, $port: Int, $username: String) {\n  testHiveCredentials(\n    authMode: $authMode\n    connectionOptions: $connectionOptions\n    database: $database\n    host: $host\n    port: $port\n    username: $username\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"authMode\": null,\n\t\"connectionOptions\": null,\n\t\"database\": null,\n\t\"host\": null,\n\t\"port\": null,\n\t\"username\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a hive sql based connection"
					},
					"response": []
				},
				{
					"name": "testS3Credentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testS3Credentials($assumableRole: String, $bucket: String, $connectionOptions: ConnectionTestOptions, $connectionType: String, $externalId: String, $prefix: String) {\n  testS3Credentials(\n    assumableRole: $assumableRole\n    bucket: $bucket\n    connectionOptions: $connectionOptions\n    connectionType: $connectionType\n    externalId: $externalId\n    prefix: $prefix\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"bucket\": null,\n\t\"connectionOptions\": null,\n\t\"connectionType\": null,\n\t\"externalId\": null,\n\t\"prefix\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a s3 based connection (e.g. presto query logs on s3)"
					},
					"response": []
				},
				{
					"name": "testGlueCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testGlueCredentials($assumableRole: String, $awsRegion: String, $connectionOptions: ConnectionTestOptions, $externalId: String) {\n  testGlueCredentials(\n    assumableRole: $assumableRole\n    awsRegion: $awsRegion\n    connectionOptions: $connectionOptions\n    externalId: $externalId\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"awsRegion\": null,\n\t\"connectionOptions\": null,\n\t\"externalId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a Glue connection"
					},
					"response": []
				},
				{
					"name": "testAthenaCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testAthenaCredentials($assumableRole: String, $awsRegion: String, $catalog: String, $connectionOptions: ConnectionTestOptions, $externalId: String, $workgroup: String) {\n  testAthenaCredentials(\n    assumableRole: $assumableRole\n    awsRegion: $awsRegion\n    catalog: $catalog\n    connectionOptions: $connectionOptions\n    externalId: $externalId\n    workgroup: $workgroup\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"awsRegion\": null,\n\t\"catalog\": null,\n\t\"connectionOptions\": null,\n\t\"externalId\": null,\n\t\"workgroup\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test an Athena connection"
					},
					"response": []
				},
				{
					"name": "testLookerCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerCredentials($baseUrl: String, $clientId: String, $clientSecret: String, $connectionOptions: ConnectionTestOptions, $verifySsl: Boolean) {\n  testLookerCredentials(\n    baseUrl: $baseUrl\n    clientId: $clientId\n    clientSecret: $clientSecret\n    connectionOptions: $connectionOptions\n    verifySsl: $verifySsl\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"baseUrl\": null,\n\t\"clientId\": null,\n\t\"clientSecret\": null,\n\t\"connectionOptions\": null,\n\t\"verifySsl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a Looker API connection"
					},
					"response": []
				},
				{
					"name": "testLookerGitCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerGitCredentials($connectionOptions: ConnectionTestOptions, $installationId: Int) {\n  testLookerGitCredentials(\n    connectionOptions: $connectionOptions\n    installationId: $installationId\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"installationId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deprecated. Do not use."
					},
					"response": []
				},
				{
					"name": "testLookerGitSshCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerGitSshCredentials($connectionOptions: ConnectionTestOptions, $repoUrl: String, $sshKey: String) {\n  testLookerGitSshCredentials(\n    connectionOptions: $connectionOptions\n    repoUrl: $repoUrl\n    sshKey: $sshKey\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"repoUrl\": null,\n\t\"sshKey\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test the connection to a Git repository using the SSH protocol"
					},
					"response": []
				},
				{
					"name": "testLookerGitCloneCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerGitCloneCredentials($connectionOptions: ConnectionTestOptions, $repoUrl: String, $sshKey: String, $token: String, $username: String) {\n  testLookerGitCloneCredentials(\n    connectionOptions: $connectionOptions\n    repoUrl: $repoUrl\n    sshKey: $sshKey\n    token: $token\n    username: $username\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"repoUrl\": null,\n\t\"sshKey\": null,\n\t\"token\": null,\n\t\"username\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test the connection to a Git repository using the SSH or HTTPS protocol"
					},
					"response": []
				},
				{
					"name": "testDbtCloudCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testDbtCloudCredentials($connectionOptions: ConnectionTestOptions, $connectionType: String, $dbtCloudAccountId: String, $dbtCloudApiToken: String, $dbtCloudBaseUrl: String) {\n  testDbtCloudCredentials(\n    connectionOptions: $connectionOptions\n    connectionType: $connectionType\n    dbtCloudAccountId: $dbtCloudAccountId\n    dbtCloudApiToken: $dbtCloudApiToken\n    dbtCloudBaseUrl: $dbtCloudBaseUrl\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"connectionType\": null,\n\t\"dbtCloudAccountId\": null,\n\t\"dbtCloudApiToken\": null,\n\t\"dbtCloudBaseUrl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a dbt Cloud connection"
					},
					"response": []
				},
				{
					"name": "testBqCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testBqCredentials($connectionOptions: ConnectionTestOptions, $serviceJson: String) {\n  testBqCredentials(\n    connectionOptions: $connectionOptions\n    serviceJson: $serviceJson\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"serviceJson\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a BQ connection"
					},
					"response": []
				},
				{
					"name": "testSparkCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testSparkCredentials($binaryMode: SparkBinaryInput, $connectionOptions: ConnectionTestOptions, $databricks: SparkDatabricksInput, $httpMode: SparkHttpInput) {\n  testSparkCredentials(\n    binaryMode: $binaryMode\n    connectionOptions: $connectionOptions\n    databricks: $databricks\n    httpMode: $httpMode\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"binaryMode\": null,\n\t\"connectionOptions\": null,\n\t\"databricks\": null,\n\t\"httpMode\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Spark credentials"
					},
					"response": []
				},
				{
					"name": "testDatabricksSqlWarehouseCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testDatabricksSqlWarehouseCredentials($connectionOptions: ConnectionTestOptions, $databricksConfig: DatabricksSqlWarehouseInput!) {\n  testDatabricksSqlWarehouseCredentials(\n    connectionOptions: $connectionOptions\n    databricksConfig: $databricksConfig\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"databricksConfig\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Databricks Sql Warehouse credentials"
					},
					"response": []
				},
				{
					"name": "testSelfHostedCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testSelfHostedCredentials($assumableRole: String, $connectionOptions: ConnectionTestOptions, $connectionType: String, $externalId: String, $region: String, $selfHostingKey: String, $selfHostingMechanism: String) {\n  testSelfHostedCredentials(\n    assumableRole: $assumableRole\n    connectionOptions: $connectionOptions\n    connectionType: $connectionType\n    externalId: $externalId\n    region: $region\n    selfHostingKey: $selfHostingKey\n    selfHostingMechanism: $selfHostingMechanism\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"connectionOptions\": null,\n\t\"connectionType\": null,\n\t\"externalId\": null,\n\t\"region\": null,\n\t\"selfHostingKey\": null,\n\t\"selfHostingMechanism\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a connection of any type with self-hosted credentials."
					},
					"response": []
				},
				{
					"name": "addTableauAccount",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addTableauAccount($dcId: UUID, $password: String, $serverName: String!, $siteName: String, $tokenName: String, $tokenValue: String, $username: String, $verifySsl: Boolean) {\n  addTableauAccount(\n    dcId: $dcId\n    password: $password\n    serverName: $serverName\n    siteName: $siteName\n    tokenName: $tokenName\n    tokenValue: $tokenValue\n    username: $username\n    verifySsl: $verifySsl\n  ) {\n    __typename\n    # tableauAccount\n  }\n}",
								"variables": "{\n\t\"dcId\": null,\n\t\"password\": null,\n\t\"serverName\": null,\n\t\"siteName\": null,\n\t\"tokenName\": null,\n\t\"tokenValue\": null,\n\t\"username\": null,\n\t\"verifySsl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add Tableau credentials to the account"
					},
					"response": []
				},
				{
					"name": "testTableauCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testTableauCredentials($connectionOptions: ConnectionTestOptions, $password: String, $serverName: String!, $siteName: String, $tokenName: String, $tokenValue: String, $username: String, $verifySsl: Boolean) {\n  testTableauCredentials(\n    connectionOptions: $connectionOptions\n    password: $password\n    serverName: $serverName\n    siteName: $siteName\n    tokenName: $tokenName\n    tokenValue: $tokenValue\n    username: $username\n    verifySsl: $verifySsl\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n    # validations # List of validations that passed\n    # warnings # List of warnings of failed validations\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"password\": null,\n\t\"serverName\": null,\n\t\"siteName\": null,\n\t\"tokenName\": null,\n\t\"tokenValue\": null,\n\t\"username\": null,\n\t\"verifySsl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Tableau credentials"
					},
					"response": []
				},
				{
					"name": "testPowerBiCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testPowerBiCredentials($authMode: PowerBIAuthModeEnum!, $clientId: String!, $clientSecret: String, $connectionOptions: ConnectionTestOptions, $password: String, $tenantId: String!, $username: String) {\n  testPowerBiCredentials(\n    authMode: $authMode\n    clientId: $clientId\n    clientSecret: $clientSecret\n    connectionOptions: $connectionOptions\n    password: $password\n    tenantId: $tenantId\n    username: $username\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"authMode\": null,\n\t\"clientId\": null,\n\t\"clientSecret\": null,\n\t\"connectionOptions\": null,\n\t\"password\": null,\n\t\"tenantId\": null,\n\t\"username\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Power BI credentials"
					},
					"response": []
				},
				{
					"name": "testFivetranCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testFivetranCredentials($connectionOptions: ConnectionTestOptions, $fivetranApiKey: String!, $fivetranApiPassword: String!, $fivetranBaseUrl: String) {\n  testFivetranCredentials(\n    connectionOptions: $connectionOptions\n    fivetranApiKey: $fivetranApiKey\n    fivetranApiPassword: $fivetranApiPassword\n    fivetranBaseUrl: $fivetranBaseUrl\n  ) {\n    __typename\n    key # Path to key for adding a connection\n    success # Indicates whether the operation was completed successfully\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"fivetranApiKey\": null,\n\t\"fivetranApiPassword\": null,\n\t\"fivetranBaseUrl\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Fivetran credentials"
					},
					"response": []
				},
				{
					"name": "toggleMuteDataset",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleMuteDataset($input: ToggleMuteDatasetInput!) {\n  toggleMuteDataset(input: $input) {\n    __typename\n    # muted\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start/Stop creating incidents for the given dataset"
					},
					"response": []
				},
				{
					"name": "toggleMuteTable",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleMuteTable($input: ToggleMuteTableInput!) {\n  toggleMuteTable(input: $input) {\n    __typename\n    # muted\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start/Stop creating incidents for the given table"
					},
					"response": []
				},
				{
					"name": "toggleMuteDatasets",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleMuteDatasets($input: ToggleMuteDatasetsInput!) {\n  toggleMuteDatasets(input: $input) {\n    __typename\n    # muted\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start/Stop creating incidents for the given datasets"
					},
					"response": []
				},
				{
					"name": "toggleMuteTables",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleMuteTables($input: ToggleMuteTablesInput!) {\n  toggleMuteTables(input: $input) {\n    __typename\n    # muted\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start/Stop creating incidents for the given tables"
					},
					"response": []
				},
				{
					"name": "toggleMuteWithRegex",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleMuteWithRegex($input: ToggleMuteWithRegexInput!) {\n  toggleMuteWithRegex(input: $input) {\n    __typename\n    clientMutationId\n  }\n}",
								"variables": "{\n\t\"input\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start/Stop creating incidents for all matched elements. Use wildcards to match more than one table or dataset."
					},
					"response": []
				},
				{
					"name": "toggleSlackReplyWarning",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleSlackReplyWarning($enable: Boolean!) {\n  toggleSlackReplyWarning(enable: $enable) {\n    __typename\n    enabled # The resulting enabled/disabled state for the feature\n  }\n}",
								"variables": "{\n\t\"enable\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enable/disable the Slack reply warning feature"
					},
					"response": []
				},
				{
					"name": "addConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addConnection($connectionType: String!, $createWarehouseType: String, $dcId: UUID, $dwId: UUID, $jobLimits: JSONString, $jobTypes: [String], $key: String!, $name: String) {\n  addConnection(\n    connectionType: $connectionType\n    createWarehouseType: $createWarehouseType\n    dcId: $dcId\n    dwId: $dwId\n    jobLimits: $jobLimits\n    jobTypes: $jobTypes\n    key: $key\n    name: $name\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionType\": null,\n\t\"createWarehouseType\": null,\n\t\"dcId\": null,\n\t\"dwId\": null,\n\t\"jobLimits\": null,\n\t\"jobTypes\": null,\n\t\"key\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add a connection and setup any associated jobs. Creates a warehouse if not specified"
					},
					"response": []
				},
				{
					"name": "removeConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation removeConnection($connectionId: UUID!) {\n  removeConnection(connectionId: $connectionId) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Remove an integration connection and deschedule any associated jobs"
					},
					"response": []
				},
				{
					"name": "addBiConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addBiConnection($connectionType: String!, $dcId: UUID, $jobTypes: [String], $key: String!, $name: String, $resourceId: UUID) {\n  addBiConnection(\n    connectionType: $connectionType\n    dcId: $dcId\n    jobTypes: $jobTypes\n    key: $key\n    name: $name\n    resourceId: $resourceId\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionType\": null,\n\t\"dcId\": null,\n\t\"jobTypes\": null,\n\t\"key\": null,\n\t\"name\": null,\n\t\"resourceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add a bi connection and setup any associated jobs"
					},
					"response": []
				},
				{
					"name": "updateBiConnectionName",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateBiConnectionName($name: String!, $resourceId: UUID!) {\n  updateBiConnectionName(name: $name, resourceId: $resourceId) {\n    __typename\n    # biContainer\n  }\n}",
								"variables": "{\n\t\"name\": null,\n\t\"resourceId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update the name of an existing bi connection"
					},
					"response": []
				},
				{
					"name": "addEtlConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addEtlConnection($connectionType: String!, $dcId: UUID, $key: String!, $name: String!) {\n  addEtlConnection(\n    connectionType: $connectionType\n    dcId: $dcId\n    key: $key\n    name: $name\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionType\": null,\n\t\"dcId\": null,\n\t\"key\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add an etl connection and setup any associated jobs"
					},
					"response": []
				},
				{
					"name": "toggleEventConfig",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation toggleEventConfig($assumableRole: String, $connectionId: UUID, $connectionType: String, $dwId: UUID, $enable: Boolean!, $eventType: DataCollectorEventTypes!, $externalId: String, $formatType: String, $location: String, $mapping: JSONString, $sourceFormat: String) {\n  toggleEventConfig(\n    assumableRole: $assumableRole\n    connectionId: $connectionId\n    connectionType: $connectionType\n    dwId: $dwId\n    enable: $enable\n    eventType: $eventType\n    externalId: $externalId\n    formatType: $formatType\n    location: $location\n    mapping: $mapping\n    sourceFormat: $sourceFormat\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"connectionId\": null,\n\t\"connectionType\": null,\n\t\"dwId\": null,\n\t\"enable\": null,\n\t\"eventType\": null,\n\t\"externalId\": null,\n\t\"formatType\": null,\n\t\"location\": null,\n\t\"mapping\": null,\n\t\"sourceFormat\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Enable / disable the configuration for data collection via events"
					},
					"response": []
				},
				{
					"name": "configureAirflowLogEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation configureAirflowLogEvents($assumableRole: String!, $dcId: UUID, $externalId: String, $name: String) {\n  configureAirflowLogEvents(\n    assumableRole: $assumableRole\n    dcId: $dcId\n    externalId: $externalId\n    name: $name\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"dcId\": null,\n\t\"externalId\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Configure collection of Airflow logs via S3 events"
					},
					"response": []
				},
				{
					"name": "configureMetadataEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation configureMetadataEvents($connectionType: String!, $dcId: UUID, $name: String) {\n  configureMetadataEvents(\n    connectionType: $connectionType\n    dcId: $dcId\n    name: $name\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"connectionType\": null,\n\t\"dcId\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Configure collection of metadata via S3 events"
					},
					"response": []
				},
				{
					"name": "configureQueryLogEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation configureQueryLogEvents($assumableRole: String!, $connectionType: String!, $externalId: String, $formatType: String!, $location: String, $mapping: JSONString, $name: String, $sourceFormat: String) {\n  configureQueryLogEvents(\n    assumableRole: $assumableRole\n    connectionType: $connectionType\n    externalId: $externalId\n    formatType: $formatType\n    location: $location\n    mapping: $mapping\n    name: $name\n    sourceFormat: $sourceFormat\n  ) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"assumableRole\": null,\n\t\"connectionType\": null,\n\t\"externalId\": null,\n\t\"formatType\": null,\n\t\"location\": null,\n\t\"mapping\": null,\n\t\"name\": null,\n\t\"sourceFormat\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Configure collection of query logs via S3 events"
					},
					"response": []
				},
				{
					"name": "disableAirflowLogEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation disableAirflowLogEvents($name: String) {\n  disableAirflowLogEvents(name: $name) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Disable collection of Airflow logs via S3 events"
					},
					"response": []
				},
				{
					"name": "disableMetadataEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation disableMetadataEvents($name: String) {\n  disableMetadataEvents(name: $name) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Disable collection of metadata via S3 events"
					},
					"response": []
				},
				{
					"name": "disableQueryLogEvents",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation disableQueryLogEvents($name: String) {\n  disableQueryLogEvents(name: $name) {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Disable collection of query logs via S3 events"
					},
					"response": []
				},
				{
					"name": "createOrUpdateServiceApiToken",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createOrUpdateServiceApiToken($comment: String, $displayName: String, $expirationInDays: Int, $groups: [String], $tokenId: String) {\n  createOrUpdateServiceApiToken(\n    comment: $comment\n    displayName: $displayName\n    expirationInDays: $expirationInDays\n    groups: $groups\n    tokenId: $tokenId\n  ) {\n    __typename\n    # accessToken\n  }\n}",
								"variables": "{\n\t\"comment\": null,\n\t\"displayName\": null,\n\t\"expirationInDays\": null,\n\t\"groups\": null,\n\t\"tokenId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generate a service API Access Token"
					},
					"response": []
				},
				{
					"name": "createAccessToken",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createAccessToken($comment: String, $expirationInDays: Int!) {\n  createAccessToken(comment: $comment, expirationInDays: $expirationInDays) {\n    __typename\n    # accessToken\n  }\n}",
								"variables": "{\n\t\"comment\": null,\n\t\"expirationInDays\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generate an API Access Token and associate to user"
					},
					"response": []
				},
				{
					"name": "deleteAccessToken",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteAccessToken($tokenId: String!) {\n  deleteAccessToken(tokenId: $tokenId) {\n    __typename\n    success # If the token was successfully deleted\n  }\n}",
								"variables": "{\n\t\"tokenId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete an API Access Token by ID"
					},
					"response": []
				},
				{
					"name": "generateCollectorTemplate",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation generateCollectorTemplate($dcId: UUID, $region: String, $templateVariant: String, $updateInfra: Boolean) {\n  generateCollectorTemplate(\n    dcId: $dcId\n    region: $region\n    templateVariant: $templateVariant\n    updateInfra: $updateInfra\n  ) {\n    __typename\n    # dc # The data collector that was created or updated\n  }\n}",
								"variables": "{\n\t\"dcId\": null,\n\t\"region\": null,\n\t\"templateVariant\": null,\n\t\"updateInfra\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Generate a data collector template (uploaded to S3)"
					},
					"response": []
				},
				{
					"name": "updateCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateCredentials($changes: JSONString!, $connectionId: UUID!, $shouldReplace: Boolean, $shouldValidate: Boolean) {\n  updateCredentials(\n    changes: $changes\n    connectionId: $connectionId\n    shouldReplace: $shouldReplace\n    shouldValidate: $shouldValidate\n  ) {\n    __typename\n    success # If the credentials were successfully updated\n  }\n}",
								"variables": "{\n\t\"changes\": null,\n\t\"connectionId\": null,\n\t\"shouldReplace\": null,\n\t\"shouldValidate\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update credentials for a connection"
					},
					"response": []
				},
				{
					"name": "createCollectorRecord",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createCollectorRecord($region: String, $templateProvider: String, $templateVariant: String) {\n  createCollectorRecord(\n    region: $region\n    templateProvider: $templateProvider\n    templateVariant: $templateVariant\n  ) {\n    __typename\n    # dc # The data collector that was created\n  }\n}",
								"variables": "{\n\t\"region\": null,\n\t\"templateProvider\": null,\n\t\"templateVariant\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create an additional collector record (with template) in the account."
					},
					"response": []
				},
				{
					"name": "cleanupCollectorRecord",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation cleanupCollectorRecord($dcId: UUID!) {\n  cleanupCollectorRecord(dcId: $dcId) {\n    __typename\n    success # If the collector record was deleted\n  }\n}",
								"variables": "{\n\t\"dcId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Deletes an unassociated collector record in the account. This does not delete the CloudFormation stack and will not succeed if the collector is active and/or associated with a warehouse."
					},
					"response": []
				},
				{
					"name": "migrateCollectorResources",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation migrateCollectorResources($resourceIds: [UUID], $sourceDcId: UUID!, $targetDcId: UUID!) {\n  migrateCollectorResources(\n    resourceIds: $resourceIds\n    sourceDcId: $sourceDcId\n    targetDcId: $targetDcId\n  ) {\n    __typename\n    success # If the migration was successful\n  }\n}",
								"variables": "{\n\t\"resourceIds\": null,\n\t\"sourceDcId\": null,\n\t\"targetDcId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Migrate resources (warehouses, BI) from one data collector to another"
					},
					"response": []
				},
				{
					"name": "updateSlackChannels",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateSlackChannels {\n  updateSlackChannels {\n    __typename\n    success\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update the slack channels cache for the account"
					},
					"response": []
				},
				{
					"name": "createIntegrationKey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createIntegrationKey($description: String!, $scope: IntegrationKeyScope!, $warehouseIds: [UUID]) {\n  createIntegrationKey(\n    description: $description\n    scope: $scope\n    warehouseIds: $warehouseIds\n  ) {\n    __typename\n    # key # Integration key id and secret (only available once).\n  }\n}",
								"variables": "{\n\t\"description\": null,\n\t\"scope\": null,\n\t\"warehouseIds\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create an integration key"
					},
					"response": []
				},
				{
					"name": "deleteIntegrationKey",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteIntegrationKey($keyId: String!) {\n  deleteIntegrationKey(keyId: $keyId) {\n    __typename\n    deleted # True if the key was deleted, false otherwise\n  }\n}",
								"variables": "{\n\t\"keyId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete an integration key"
					},
					"response": []
				},
				{
					"name": "createDatabricksSecret",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createDatabricksSecret($connectionOptions: ConnectionTestOptions, $databricksConfig: SparkDatabricksInput!, $scopeName: String, $scopePrincipal: String, $secretName: String) {\n  createDatabricksSecret(\n    connectionOptions: $connectionOptions\n    databricksConfig: $databricksConfig\n    scopeName: $scopeName\n    scopePrincipal: $scopePrincipal\n    secretName: $secretName\n  ) {\n    __typename\n    success # Indicates whether the operation was completed successfully.\n    scopeName # Scope name that the secret was created with\n    secretName # Name of the secret that was created\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"databricksConfig\": null,\n\t\"scopeName\": null,\n\t\"scopePrincipal\": null,\n\t\"secretName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create Databricks scope and secret for an integration key."
					},
					"response": []
				},
				{
					"name": "createDatabricksNotebookJob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation createDatabricksNotebookJob($connectionOptions: ConnectionTestOptions, $databricksConfig: SparkDatabricksInput!) {\n  createDatabricksNotebookJob(\n    connectionOptions: $connectionOptions\n    databricksConfig: $databricksConfig\n  ) {\n    __typename\n    # databricks # The Databricks resources which were created.\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"databricksConfig\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Create Databricks directory, upload the collection notebook and setup a job."
					},
					"response": []
				},
				{
					"name": "updateDatabricksNotebookJob",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateDatabricksNotebookJob($connectionId: UUID) {\n  updateDatabricksNotebookJob(connectionId: $connectionId) {\n    __typename\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update Databricks collection notebook and job."
					},
					"response": []
				},
				{
					"name": "updateDatabricksNotebook",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation updateDatabricksNotebook($connectionId: UUID) {\n  updateDatabricksNotebook(connectionId: $connectionId) {\n    __typename\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Update Databricks notebook."
					},
					"response": []
				},
				{
					"name": "startDatabricksCluster",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation startDatabricksCluster($connectionId: UUID) {\n  startDatabricksCluster(connectionId: $connectionId) {\n    __typename\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start Databricks Cluster."
					},
					"response": []
				},
				{
					"name": "startDatabricksWarehouse",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation startDatabricksWarehouse($connectionId: UUID) {\n  startDatabricksWarehouse(connectionId: $connectionId) {\n    __typename\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionId\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Start Databricks Warehouse."
					},
					"response": []
				},
				{
					"name": "testDatabricksCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testDatabricksCredentials($connectionOptions: ConnectionTestOptions, $databricksConfig: SparkDatabricksInput!) {\n  testDatabricksCredentials(\n    connectionOptions: $connectionOptions\n    databricksConfig: $databricksConfig\n  ) {\n    __typename\n    key # Path to key for adding a connection.\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"databricksConfig\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a Databricks connection"
					},
					"response": []
				},
				{
					"name": "testDeltaCredentials",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testDeltaCredentials($connectionOptions: ConnectionTestOptions, $databricksConfig: SparkDatabricksInput!) {\n  testDeltaCredentials(\n    connectionOptions: $connectionOptions\n    databricksConfig: $databricksConfig\n  ) {\n    __typename\n    key # Path to key for adding a connection.\n    success # Indicates whether the operation was completed successfully.\n  }\n}",
								"variables": "{\n\t\"connectionOptions\": null,\n\t\"databricksConfig\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test a Databricks connection"
					},
					"response": []
				},
				{
					"name": "addDatabricksConnection",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation addDatabricksConnection($connectionType: String!, $createWarehouseType: String, $dcId: UUID, $dwId: UUID, $jobLimits: JSONString!, $jobTypes: [String], $key: String!, $name: String) {\n  addDatabricksConnection(\n    connectionType: $connectionType\n    createWarehouseType: $createWarehouseType\n    dcId: $dcId\n    dwId: $dwId\n    jobLimits: $jobLimits\n    jobTypes: $jobTypes\n    key: $key\n    name: $name\n  ) {\n    __typename\n    # connection\n  }\n}",
								"variables": "{\n\t\"connectionType\": null,\n\t\"createWarehouseType\": null,\n\t\"dcId\": null,\n\t\"dwId\": null,\n\t\"jobLimits\": null,\n\t\"jobTypes\": null,\n\t\"key\": null,\n\t\"name\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Add a databricks connection and setup any associated jobs. Creates a warehouse if not specified"
					},
					"response": []
				},
				{
					"name": "saveEventOnboardingData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation saveEventOnboardingData($config: JSONString!) {\n  saveEventOnboardingData(config: $config) {\n    __typename\n    success # Indicates whether the event onboarding data was saved successfully\n  }\n}",
								"variables": "{\n\t\"config\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Save event onboarding configuration"
					},
					"response": []
				},
				{
					"name": "deleteEventOnboardingData",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation deleteEventOnboardingData {\n  deleteEventOnboardingData {\n    __typename\n    success # Indicates whether the event onboarding data was deleted successfully\n  }\n}",
								"variables": "{\n\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Delete stored event onboarding configuration"
					},
					"response": []
				},
				{
					"name": "testSnowflakeCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testSnowflakeCredentialsV2($connectionDetails: SnowflakeConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testSnowflakeCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Snowflake credentials"
					},
					"response": []
				},
				{
					"name": "testRedshiftCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testRedshiftCredentialsV2($connectionDetails: RedshiftConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testRedshiftCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Redshift credentials"
					},
					"response": []
				},
				{
					"name": "testBqCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testBqCredentialsV2($connectionDetails: BqConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testBqCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test BigQuery credentials"
					},
					"response": []
				},
				{
					"name": "testTableauCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testTableauCredentialsV2($connectionDetails: TableauConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testTableauCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Tableau credentials"
					},
					"response": []
				},
				{
					"name": "testLookerCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerCredentialsV2($connectionDetails: LookerConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testLookerCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Looker API credentials"
					},
					"response": []
				},
				{
					"name": "testLookerGitSshCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerGitSshCredentialsV2($connectionDetails: LookerGitSshConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testLookerGitSshCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test the connection to a Git repository using the SSH protocol"
					},
					"response": []
				},
				{
					"name": "testLookerGitCloneCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testLookerGitCloneCredentialsV2($connectionDetails: LookerGitCloneConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testLookerGitCloneCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test the connection to a Git repository using the HTTPS protocol"
					},
					"response": []
				},
				{
					"name": "testPowerBiCredentialsV2",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "x-mcd-id",
								"value": "df17f270b0c0497ca86f034a6758c199"
							},
							{
								"key": "x-mcd-token",
								"value": "hq8MHzu_6mOEsWdf8-LzrJ8sXojesJ0rAlshrl2jauni21mycxyfSWaK"
							}
						],
						"body": {
							"mode": "graphql",
							"graphql": {
								"query": "mutation testPowerBiCredentialsV2($connectionDetails: PowerBIConnectionDetails!, $connectionOptions: ConnectionTestOptions, $validationName: String!) {\n  testPowerBiCredentialsV2(\n    connectionDetails: $connectionDetails\n    connectionOptions: $connectionOptions\n    validationName: $validationName\n  ) {\n    __typename\n    key # Path to key for adding a connection. This key is only generated when calling the SAVE_CREDENTIALS validation.\n    # validationResult # Result of the validation.\n  }\n}",
								"variables": "{\n\t\"connectionDetails\": null,\n\t\"connectionOptions\": null,\n\t\"validationName\": null\n}"
							}
						},
						"url": {
							"raw": "https://api.getmontecarlo.com/graphql",
							"protocol": "https",
							"host": [
								"api",
								"getmontecarlo",
								"com"
							],
							"path": [
								"graphql"
							]
						},
						"description": "Test Power BI credentials"
					},
					"response": []
				}
			]
		}
	]
}